{
  "contractName": "FeeCurrencyWhitelist",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "tokenAddress",
          "type": "address"
        }
      ],
      "name": "addToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getWhitelist",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"tokenAddress\",\"type\":\"address\"}],\"name\":\"addToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getWhitelist\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"addToken(address)\":{\"details\":\"Add a token to the whitelist\",\"params\":{\"tokenAddress\":\"The address of the token to add.\"}},\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialization\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Holds a whitelist of the ERC20+ tokens that can be used to pay for gas\"},\"userdoc\":{\"methods\":{\"constructor\":\"Sets initialized == true on implementation contracts\",\"initialize()\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/FeeCurrencyWhitelist.sol\":\"FeeCurrencyWhitelist\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/FeeCurrencyWhitelist.sol\":{\"keccak256\":\"0x6ace26a4487012f6a9353bb59fa370a2de1c1cc2b36bb60ed9e1074a391db8b1\",\"urls\":[\"bzz-raw://524bc9b0f0a20095bba50bff5f451355805b9552ef3f6891cd1f50ce9166dad7\",\"dweb:/ipfs/Qmd99jWNjaPCUzgvtbtBMnzGeGdkBVMK33BptYvLz9hjFH\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/Initializable.sol\":{\"keccak256\":\"0xad98825b5d3181f4ce2d2dbe84adeb0cd7960fd80fafb0813539d6d96ba42ab8\",\"urls\":[\"bzz-raw://f76468328c78b80eeaaaadb7b186e41da4a34134446fe11bb707106322b8e32f\",\"dweb:/ipfs/QmNyjyVjPX1GKFibDcJBJyZQ57nhusG3DhPjAGnY7iaU39\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"keccak256\":\"0xd4711baf3e38a0abeb3ef48eaab21aeb917f5e0a185cf463fddeb4bf20277b68\",\"urls\":[\"bzz-raw://8f350863943ab54dcf4d5ea525c16748f59263bf36c1d85251c1164d0e592032\",\"dweb:/ipfs/QmXAG6fvVQKM86rVsk6R3ndEoHtS9fcAAVxBApJ5j3LWeK\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50604051610a17380380610a178339818101604052602081101561003357600080fd5b810190808051906020019092919050505080600061005561011b60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35080610114576001600060146101000a81548160ff0219169083151502179055505b5050610123565b600033905090565b6108e5806101326000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461013c5780638f32d59b14610186578063d01f63f5146101a8578063d48bfca714610207578063f2fde38b1461024b57610093565b8063158ef93e14610098578063715018a6146100ba5780637ebd1b30146100c45780638129fc1c14610132575b600080fd5b6100a061028f565b604051808215151515815260200191505060405180910390f35b6100c26102a2565b005b6100f0600480360360208110156100da57600080fd5b81019080803590602001909291905050506103db565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61013a610417565b005b6101446104c0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61018e6104e9565b604051808215151515815260200191505060405180910390f35b6101b0610547565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101f35780820151818401526020810190506101d8565b505050509050019250505060405180910390f35b6102496004803603602081101561021d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105d5565b005b61028d6004803603602081101561026157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106b8565b005b600060149054906101000a900460ff1681565b6102aa6104e9565b61031c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600181815481106103e857fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060149054906101000a900460ff161561049a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055506104be3361073e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661052b610882565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b606060018054806020026020016040519081016040528092919081815260200182805480156105cb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610581575b5050505050905090565b6105dd6104e9565b61064f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6106c06104e9565b610732576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61073b8161073e565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061088b6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820842a50568a15950c73a344a9a1c897a3ffa6c4d06ff3115f0580f88b6e6874bc64736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c80638da5cb5b116100665780638da5cb5b1461013c5780638f32d59b14610186578063d01f63f5146101a8578063d48bfca714610207578063f2fde38b1461024b57610093565b8063158ef93e14610098578063715018a6146100ba5780637ebd1b30146100c45780638129fc1c14610132575b600080fd5b6100a061028f565b604051808215151515815260200191505060405180910390f35b6100c26102a2565b005b6100f0600480360360208110156100da57600080fd5b81019080803590602001909291905050506103db565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61013a610417565b005b6101446104c0565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61018e6104e9565b604051808215151515815260200191505060405180910390f35b6101b0610547565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156101f35780820151818401526020810190506101d8565b505050509050019250505060405180910390f35b6102496004803603602081101561021d57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506105d5565b005b61028d6004803603602081101561026157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506106b8565b005b600060149054906101000a900460ff1681565b6102aa6104e9565b61031c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b600181815481106103e857fe5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060149054906101000a900460ff161561049a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055506104be3361073e565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1661052b610882565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b606060018054806020026020016040519081016040528092919081815260200182805480156105cb57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019060010190808311610581575b5050505050905090565b6105dd6104e9565b61064f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60018190806001815401808255809150509060018203906000526020600020016000909192909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050565b6106c06104e9565b610732576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61073b8161073e565b50565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156107c4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602681526020018061088b6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b60003390509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373a265627a7a72315820842a50568a15950c73a344a9a1c897a3ffa6c4d06ff3115f0580f88b6e6874bc64736f6c634300050d0032",
  "sourceMap": "269:816:6:-;;;528:52;8:9:-1;5:2;;;30:1;27;20:12;5:2;528:52:6;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;528:52:6;;;;;;;;;;;;;;;;572:4;698:17:154;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;135:17:12;130:57;;176:4;162:11;;:18;;;;;;;;;;;;;;;;;;130:57;81:110;528:52:6;269:816;;788:96:150;833:15;867:10;860:17;;788:96;:::o;269:816:6:-;;;;;;;",
  "deployedSourceMap": "269:816:6:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;269:816:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53:23:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1684:137:154;;;:::i;:::-;;352:26:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;352:26:6;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;692:84;;;:::i;:::-;;899:77:154;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;991::6;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;991:92:6;;;;;;;;;;;;;;;;;889:98;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;889:98:6;;;;;;;;;;;;;;;;;;;:::i;:::-;;1970:107:154;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:154;;;;;;;;;;;;;;;;;;;:::i;:::-;;53:23:12;;;;;;;;;;;;;:::o;1684:137:154:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;352:26:6:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;692:84::-;233:11:12;;;;;;;;;;;232:12;224:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;297:4;283:11;;:18;;;;;;;;;;;;;;;;;;741:30:6;760:10;741:18;:30::i;:::-;692:84::o;899:77:154:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;991::6:-;1038:16;1069:9;1062:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;991:92;:::o;889:98::-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;954:9:6;969:12;954:28;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;954:28:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;889:98;:::o;1970:107:154:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;2178:225::-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;788:96:150:-;833:15;867:10;860:17;;788:96;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport \"./interfaces/IFeeCurrencyWhitelist.sol\";\n\nimport \"../common/Initializable.sol\";\n\n/**\n * @title Holds a whitelist of the ERC20+ tokens that can be used to pay for gas\n */\ncontract FeeCurrencyWhitelist is IFeeCurrencyWhitelist, Ownable, Initializable {\n  address[] public whitelist;\n\n  /**\n   * @notice Sets initialized == true on implementation contracts\n   * @param test Set to true to skip implementation initialization\n   */\n  constructor(bool test) public Initializable(test) {}\n\n  /**\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n   */\n  function initialize() external initializer {\n    _transferOwnership(msg.sender);\n  }\n\n  /**\n   * @dev Add a token to the whitelist\n   * @param tokenAddress The address of the token to add.\n   */\n  function addToken(address tokenAddress) external onlyOwner {\n    whitelist.push(tokenAddress);\n  }\n\n  function getWhitelist() external view returns (address[] memory) {\n    return whitelist;\n  }\n}\n",
  "sourcePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/FeeCurrencyWhitelist.sol",
  "ast": {
    "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/FeeCurrencyWhitelist.sol",
    "exportedSymbols": {
      "FeeCurrencyWhitelist": [
        2963
      ]
    },
    "id": 2964,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2907,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2908,
        "nodeType": "ImportDirective",
        "scope": 2964,
        "sourceUnit": 43948,
        "src": "26:63:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IFeeCurrencyWhitelist.sol",
        "file": "./interfaces/IFeeCurrencyWhitelist.sol",
        "id": 2909,
        "nodeType": "ImportDirective",
        "scope": 2964,
        "sourceUnit": 9355,
        "src": "91:48:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/Initializable.sol",
        "file": "../common/Initializable.sol",
        "id": 2910,
        "nodeType": "ImportDirective",
        "scope": 2964,
        "sourceUnit": 4662,
        "src": "141:37:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2911,
              "name": "IFeeCurrencyWhitelist",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9354,
              "src": "302:21:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFeeCurrencyWhitelist_$9354",
                "typeString": "contract IFeeCurrencyWhitelist"
              }
            },
            "id": 2912,
            "nodeType": "InheritanceSpecifier",
            "src": "302:21:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2913,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 43947,
              "src": "325:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$43947",
                "typeString": "contract Ownable"
              }
            },
            "id": 2914,
            "nodeType": "InheritanceSpecifier",
            "src": "325:7:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2915,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4661,
              "src": "334:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$4661",
                "typeString": "contract Initializable"
              }
            },
            "id": 2916,
            "nodeType": "InheritanceSpecifier",
            "src": "334:13:6"
          }
        ],
        "contractDependencies": [
          4661,
          9354,
          43492,
          43947
        ],
        "contractKind": "contract",
        "documentation": "@title Holds a whitelist of the ERC20+ tokens that can be used to pay for gas",
        "fullyImplemented": true,
        "id": 2963,
        "linearizedBaseContracts": [
          2963,
          4661,
          43947,
          43492,
          9354
        ],
        "name": "FeeCurrencyWhitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2919,
            "name": "whitelist",
            "nodeType": "VariableDeclaration",
            "scope": 2963,
            "src": "352:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2917,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "352:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2918,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "352:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2927,
              "nodeType": "Block",
              "src": "578:2:6",
              "statements": []
            },
            "documentation": "@notice Sets initialized == true on implementation contracts\n@param test Set to true to skip implementation initialization",
            "id": 2928,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2924,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2921,
                    "src": "572:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 2925,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2923,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4661,
                  "src": "558:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$4661_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "558:19:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2921,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 2928,
                  "src": "540:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2920,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "539:11:6"
            },
            "returnParameters": {
              "id": 2926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "578:0:6"
            },
            "scope": 2963,
            "src": "528:52:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2938,
              "nodeType": "Block",
              "src": "735:41:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2934,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45085,
                          "src": "760:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "760:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2933,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43946,
                      "src": "741:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "741:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2937,
                  "nodeType": "ExpressionStatement",
                  "src": "741:30:6"
                }
              ]
            },
            "documentation": "@notice Used in place of the constructor to allow the contract to be upgradable via proxy.",
            "id": 2939,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2931,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2930,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4660,
                  "src": "723:11:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "723:11:6"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "711:2:6"
            },
            "returnParameters": {
              "id": 2932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "735:0:6"
            },
            "scope": 2963,
            "src": "692:84:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2952,
              "nodeType": "Block",
              "src": "948:39:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2949,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2941,
                        "src": "969:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2946,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2919,
                        "src": "954:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "954:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 2950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "954:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2951,
                  "nodeType": "ExpressionStatement",
                  "src": "954:28:6"
                }
              ]
            },
            "documentation": "@dev Add a token to the whitelist\n@param tokenAddress The address of the token to add.",
            "id": 2953,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2944,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2943,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43880,
                  "src": "938:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "938:9:6"
              }
            ],
            "name": "addToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2941,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2953,
                  "src": "907:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "906:22:6"
            },
            "returnParameters": {
              "id": 2945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "948:0:6"
            },
            "scope": 2963,
            "src": "889:98:6",
            "stateMutability": "nonpayable",
            "superFunction": 9347,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2961,
              "nodeType": "Block",
              "src": "1056:27:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2959,
                    "name": "whitelist",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2919,
                    "src": "1069:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2958,
                  "id": 2960,
                  "nodeType": "Return",
                  "src": "1062:16:6"
                }
              ]
            },
            "documentation": null,
            "id": 2962,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWhitelist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:2:6"
            },
            "returnParameters": {
              "id": 2958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2957,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2962,
                  "src": "1038:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2955,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1038:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2956,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1038:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1037:18:6"
            },
            "scope": 2963,
            "src": "991:92:6",
            "stateMutability": "view",
            "superFunction": 9353,
            "visibility": "external"
          }
        ],
        "scope": 2964,
        "src": "269:816:6"
      }
    ],
    "src": "0:1086:6"
  },
  "legacyAST": {
    "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/FeeCurrencyWhitelist.sol",
    "exportedSymbols": {
      "FeeCurrencyWhitelist": [
        2963
      ]
    },
    "id": 2964,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 2907,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:6"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 2908,
        "nodeType": "ImportDirective",
        "scope": 2964,
        "sourceUnit": 43948,
        "src": "26:63:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IFeeCurrencyWhitelist.sol",
        "file": "./interfaces/IFeeCurrencyWhitelist.sol",
        "id": 2909,
        "nodeType": "ImportDirective",
        "scope": 2964,
        "sourceUnit": 9355,
        "src": "91:48:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/Initializable.sol",
        "file": "../common/Initializable.sol",
        "id": 2910,
        "nodeType": "ImportDirective",
        "scope": 2964,
        "sourceUnit": 4662,
        "src": "141:37:6",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2911,
              "name": "IFeeCurrencyWhitelist",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9354,
              "src": "302:21:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IFeeCurrencyWhitelist_$9354",
                "typeString": "contract IFeeCurrencyWhitelist"
              }
            },
            "id": 2912,
            "nodeType": "InheritanceSpecifier",
            "src": "302:21:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2913,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 43947,
              "src": "325:7:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$43947",
                "typeString": "contract Ownable"
              }
            },
            "id": 2914,
            "nodeType": "InheritanceSpecifier",
            "src": "325:7:6"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 2915,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4661,
              "src": "334:13:6",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$4661",
                "typeString": "contract Initializable"
              }
            },
            "id": 2916,
            "nodeType": "InheritanceSpecifier",
            "src": "334:13:6"
          }
        ],
        "contractDependencies": [
          4661,
          9354,
          43492,
          43947
        ],
        "contractKind": "contract",
        "documentation": "@title Holds a whitelist of the ERC20+ tokens that can be used to pay for gas",
        "fullyImplemented": true,
        "id": 2963,
        "linearizedBaseContracts": [
          2963,
          4661,
          43947,
          43492,
          9354
        ],
        "name": "FeeCurrencyWhitelist",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 2919,
            "name": "whitelist",
            "nodeType": "VariableDeclaration",
            "scope": 2963,
            "src": "352:26:6",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_address_$dyn_storage",
              "typeString": "address[]"
            },
            "typeName": {
              "baseType": {
                "id": 2917,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "352:7:6",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "id": 2918,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "352:9:6",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                "typeString": "address[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2927,
              "nodeType": "Block",
              "src": "578:2:6",
              "statements": []
            },
            "documentation": "@notice Sets initialized == true on implementation contracts\n@param test Set to true to skip implementation initialization",
            "id": 2928,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 2924,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2921,
                    "src": "572:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 2925,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2923,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4661,
                  "src": "558:13:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$4661_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "558:19:6"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2922,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2921,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 2928,
                  "src": "540:9:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 2920,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "540:4:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "539:11:6"
            },
            "returnParameters": {
              "id": 2926,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "578:0:6"
            },
            "scope": 2963,
            "src": "528:52:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 2938,
              "nodeType": "Block",
              "src": "735:41:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 2934,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45085,
                          "src": "760:3:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 2935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "760:10:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 2933,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43946,
                      "src": "741:18:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 2936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "741:30:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 2937,
                  "nodeType": "ExpressionStatement",
                  "src": "741:30:6"
                }
              ]
            },
            "documentation": "@notice Used in place of the constructor to allow the contract to be upgradable via proxy.",
            "id": 2939,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2931,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2930,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4660,
                  "src": "723:11:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "723:11:6"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2929,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "711:2:6"
            },
            "returnParameters": {
              "id": 2932,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "735:0:6"
            },
            "scope": 2963,
            "src": "692:84:6",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2952,
              "nodeType": "Block",
              "src": "948:39:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 2949,
                        "name": "tokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2941,
                        "src": "969:12:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 2946,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2919,
                        "src": "954:9:6",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage",
                          "typeString": "address[] storage ref"
                        }
                      },
                      "id": 2948,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "954:14:6",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) returns (uint256)"
                      }
                    },
                    "id": 2950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "954:28:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 2951,
                  "nodeType": "ExpressionStatement",
                  "src": "954:28:6"
                }
              ]
            },
            "documentation": "@dev Add a token to the whitelist\n@param tokenAddress The address of the token to add.",
            "id": 2953,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 2944,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 2943,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43880,
                  "src": "938:9:6",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "938:9:6"
              }
            ],
            "name": "addToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2941,
                  "name": "tokenAddress",
                  "nodeType": "VariableDeclaration",
                  "scope": 2953,
                  "src": "907:20:6",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 2940,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "907:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "906:22:6"
            },
            "returnParameters": {
              "id": 2945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "948:0:6"
            },
            "scope": 2963,
            "src": "889:98:6",
            "stateMutability": "nonpayable",
            "superFunction": 9347,
            "visibility": "external"
          },
          {
            "body": {
              "id": 2961,
              "nodeType": "Block",
              "src": "1056:27:6",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 2959,
                    "name": "whitelist",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 2919,
                    "src": "1069:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage",
                      "typeString": "address[] storage ref"
                    }
                  },
                  "functionReturnParameters": 2958,
                  "id": 2960,
                  "nodeType": "Return",
                  "src": "1062:16:6"
                }
              ]
            },
            "documentation": null,
            "id": 2962,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getWhitelist",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 2954,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1012:2:6"
            },
            "returnParameters": {
              "id": 2958,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 2957,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 2962,
                  "src": "1038:16:6",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                    "typeString": "address[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 2955,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1038:7:6",
                      "stateMutability": "nonpayable",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 2956,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "1038:9:6",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                      "typeString": "address[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1037:18:6"
            },
            "scope": 2963,
            "src": "991:92:6",
            "stateMutability": "view",
            "superFunction": 9353,
            "visibility": "external"
          }
        ],
        "scope": 2964,
        "src": "269:816:6"
      }
    ],
    "src": "0:1086:6"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2022-05-06T03:53:12.665Z",
  "devdoc": {
    "methods": {
      "addToken(address)": {
        "details": "Add a token to the whitelist",
        "params": {
          "tokenAddress": "The address of the token to add."
        }
      },
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialization"
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Holds a whitelist of the ERC20+ tokens that can be used to pay for gas"
  },
  "userdoc": {
    "methods": {
      "constructor": "Sets initialized == true on implementation contracts",
      "initialize()": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      }
    }
  }
}