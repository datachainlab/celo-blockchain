{
  "contractName": "EpochRewardsTest",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "partner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fraction",
          "type": "uint256"
        }
      ],
      "name": "CarbonOffsettingFundSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fraction",
          "type": "uint256"
        }
      ],
      "name": "CommunityRewardFractionSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "underspendAdjustmentFactor",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "overspendAdjustmentFactor",
          "type": "uint256"
        }
      ],
      "name": "RewardsMultiplierParametersSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "payment",
          "type": "uint256"
        }
      ],
      "name": "TargetValidatorEpochPaymentSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fraction",
          "type": "uint256"
        }
      ],
      "name": "TargetVotingGoldFractionSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "adjustmentFactor",
          "type": "uint256"
        }
      ],
      "name": "TargetVotingYieldParametersSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "target",
          "type": "uint256"
        }
      ],
      "name": "TargetVotingYieldSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "fraction",
          "type": "uint256"
        }
      ],
      "name": "TargetVotingYieldUpdated",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "calculateTargetEpochRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "carbonOffsettingPartner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "blsKey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "blsPop",
          "type": "bytes"
        }
      ],
      "name": "checkProofOfPossession",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "aNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "aDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exponent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "name": "fractionMulExp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getBlockNumberFromHeader",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCarbonOffsettingFraction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getCommunityRewardFraction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getEpochNumberOfBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getParentSealBitmap",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRewardsMultiplierParameters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTargetGoldTotalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTargetTotalEpochPaymentsInGold",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTargetVoterRewards",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTargetVotingGoldFraction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getTargetVotingYieldParameters",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getVerifiedSealBitmapFromHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVotingGoldFraction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "hashHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "targetVotingYieldInitial",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "targetVotingYieldMax",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "targetVotingYieldAdjustmentFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardsMultiplierMax",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardsMultiplierUnderspendAdjustmentFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "rewardsMultiplierOverspendAdjustmentFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetVotingGoldFraction",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_targetValidatorEpochPayment",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_communityRewardFraction",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_carbonOffsettingPartner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_carbonOffsettingFraction",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isReserveLow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "minQuorumSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minQuorumSizeInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "numberValidatorsInSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "partner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setCarbonOffsettingFund",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setCommunityRewardFraction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "underspendAdjustmentFactor",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "overspendAdjustmentFactor",
          "type": "uint256"
        }
      ],
      "name": "setRewardsMultiplierParameters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setTargetValidatorEpochPayment",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setTargetVotingGoldFraction",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetVotingYield",
          "type": "uint256"
        }
      ],
      "name": "setTargetVotingYield",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "max",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "adjustmentFactor",
          "type": "uint256"
        }
      ],
      "name": "setTargetVotingYieldParameters",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "startTime",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "targetValidatorEpochPayment",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromCurrentSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getRewardsMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "targetGoldTotalSupplyIncrease",
          "type": "uint256"
        }
      ],
      "name": "getRewardsMultiplier",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "updateTargetVotingYield",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberValidatorsInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setNumberValidatorsInCurrentSet",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"partner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fraction\",\"type\":\"uint256\"}],\"name\":\"CarbonOffsettingFundSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fraction\",\"type\":\"uint256\"}],\"name\":\"CommunityRewardFractionSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"underspendAdjustmentFactor\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"overspendAdjustmentFactor\",\"type\":\"uint256\"}],\"name\":\"RewardsMultiplierParametersSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"payment\",\"type\":\"uint256\"}],\"name\":\"TargetValidatorEpochPaymentSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fraction\",\"type\":\"uint256\"}],\"name\":\"TargetVotingGoldFractionSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"adjustmentFactor\",\"type\":\"uint256\"}],\"name\":\"TargetVotingYieldParametersSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"target\",\"type\":\"uint256\"}],\"name\":\"TargetVotingYieldSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"fraction\",\"type\":\"uint256\"}],\"name\":\"TargetVotingYieldUpdated\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[],\"name\":\"calculateTargetEpochRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"carbonOffsettingPartner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"blsKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPop\",\"type\":\"bytes\"}],\"name\":\"checkProofOfPossession\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"aNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exponent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"fractionMulExp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getBlockNumberFromHeader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCarbonOffsettingFraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getCommunityRewardFraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getEpochNumberOfBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getParentSealBitmap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRewardsMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetGoldTotalSupplyIncrease\",\"type\":\"uint256\"}],\"name\":\"getRewardsMultiplier\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getRewardsMultiplierParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTargetGoldTotalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTargetTotalEpochPaymentsInGold\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTargetVoterRewards\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTargetVotingGoldFraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTargetVotingYieldParameters\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getVerifiedSealBitmapFromHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVotingGoldFraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"hashHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"targetVotingYieldInitial\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetVotingYieldMax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"targetVotingYieldAdjustmentFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardsMultiplierMax\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardsMultiplierUnderspendAdjustmentFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"rewardsMultiplierOverspendAdjustmentFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetVotingGoldFraction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_targetValidatorEpochPayment\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_communityRewardFraction\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_carbonOffsettingPartner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_carbonOffsettingFraction\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isReserveLow\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"minQuorumSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minQuorumSizeInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberValidatorsInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"numberValidatorsInSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"partner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setCarbonOffsettingFund\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setCommunityRewardFraction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setNumberValidatorsInCurrentSet\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"underspendAdjustmentFactor\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"overspendAdjustmentFactor\",\"type\":\"uint256\"}],\"name\":\"setRewardsMultiplierParameters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setTargetValidatorEpochPayment\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setTargetVotingGoldFraction\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"targetVotingYield\",\"type\":\"uint256\"}],\"name\":\"setTargetVotingYield\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"max\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"adjustmentFactor\",\"type\":\"uint256\"}],\"name\":\"setTargetVotingYieldParameters\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"startTime\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"targetValidatorEpochPayment\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"updateTargetVotingYield\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromCurrentSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"calculateTargetEpochRewards()\":{\"return\":\"The per validator epoch reward, the total rewards to voters, the total community reward, and the total carbon offsetting partner reward.\"},\"checkProofOfPossession(address,bytes,bytes)\":{\"params\":{\"blsKey\":\"The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.\",\"blsPop\":\"The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.\",\"sender\":\"The address signed by the BLS key to generate the proof of possession.\"},\"return\":\"True upon success.\"},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"_decimals\":\"precision\",\"aDenominator\":\"Denominator of first fraction\",\"aNumerator\":\"Numerator of first fraction\",\"bDenominator\":\"Denominator of exponentiated fraction\",\"bNumerator\":\"Numerator of exponentiated fraction\",\"exponent\":\"exponent to raise b to\"},\"return\":\"numerator/denominator of the computed quantity (not reduced).\"},\"getBlockNumberFromHeader(bytes)\":{\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Block number.\"},\"getCarbonOffsettingFraction()\":{\"return\":\"The percentage of total reward which goes to the carbon offsetting partner.\"},\"getCommunityRewardFraction()\":{\"return\":\"The percentage of total reward which goes to the community funds.\"},\"getEpochNumber()\":{\"return\":\"Current epoch number.\"},\"getEpochNumberOfBlock(uint256)\":{\"params\":{\"blockNumber\":\"Block number where epoch number is calculated.\"},\"return\":\"Epoch number.\"},\"getEpochSize()\":{\"return\":\"The current epoch size in blocks.\"},\"getParentSealBitmap(uint256)\":{\"params\":{\"blockNumber\":\"Block number to retrieve. Must be within 4 epochs of the current number.\"},\"return\":\"Bitmap parent seal with set bits at indices corresponding to signing validators.\"},\"getRewardsMultiplier()\":{\"return\":\"The rewards multiplier based on the current and target Gold supplies.\"},\"getRewardsMultiplierParameters()\":{\"return\":\"The max multiplier and under/over spend adjustment factors.\"},\"getTargetGoldTotalSupply()\":{\"return\":\"The target Gold supply according to the epoch rewards target schedule.\"},\"getTargetTotalEpochPaymentsInGold()\":{\"return\":\"The total target epoch payments to validators, converted to Gold.\"},\"getTargetVoterRewards()\":{\"return\":\"the total target epoch rewards for voters.\"},\"getTargetVotingGoldFraction()\":{\"return\":\"The percentage of floating Gold voting to target.\"},\"getTargetVotingYieldParameters()\":{\"return\":\"The target, max, and adjustment factor for target voting yield.\"},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Bitmap parent seal with set bits at indices correspoinding to signing validators.\"},\"getVersionNumber()\":{\"return\":\"The storage, major, minor, and patch version of the contract.\"},\"getVotingGoldFraction()\":{\"return\":\"The fraction of floating Gold being used for voting in validator elections.\"},\"hashHeader(bytes)\":{\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Header hash.\"},\"initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,uint256)\":{\"details\":\"Should be called only once.\",\"params\":{\"_carbonOffsettingFraction\":\"The percentage of rewards going to carbon offsetting partner.\",\"_carbonOffsettingPartner\":\"The address of the carbon offsetting partner.\",\"_communityRewardFraction\":\"The percentage of rewards that go the community funds.\",\"_targetValidatorEpochPayment\":\"The target validator epoch payment.\",\"_targetVotingGoldFraction\":\"The percentage of floating Gold voting to target.\",\"registryAddress\":\"The address of the registry contract.\",\"rewardsMultiplierMax\":\"The max multiplier on target epoch rewards.\",\"rewardsMultiplierOverspendAdjustmentFactor\":\"Adjusts the multiplier on target epoch  rewards when the protocol is running ahead of the target Gold supply.\",\"rewardsMultiplierUnderspendAdjustmentFactor\":\"Adjusts the multiplier on target epoch  rewards when the protocol is running behind the target Gold supply.\",\"targetVotingYieldAdjustmentFactor\":\"The target block reward adjustment factor for voters.\",\"targetVotingYieldInitial\":\"The initial relative target block reward for voters.\",\"targetVotingYieldMax\":\"The max relative target block reward for voters.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"minQuorumSize(uint256)\":{\"details\":\"Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))\"},\"minQuorumSizeInCurrentSet()\":{\"return\":\"Byzantine quorum of validators.\"},\"numberValidatorsInSet(uint256)\":{\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\"},\"return\":\"Size of the validator set.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setCarbonOffsettingFund(address,uint256)\":{\"params\":{\"partner\":\"The address of the carbon offsetting partner.\",\"value\":\"The percentage of the total reward to be sent to the carbon offsetting partner.\"},\"return\":\"True upon success.\"},\"setCommunityRewardFraction(uint256)\":{\"params\":{\"value\":\"The percentage of the total reward to be sent to the community funds.\"},\"return\":\"True upon success.\"},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"setRewardsMultiplierParameters(uint256,uint256,uint256)\":{\"params\":{\"max\":\"The max multiplier on target epoch rewards.\",\"overspendAdjustmentFactor\":\"Adjusts the multiplier on target epoch rewards when the  protocol is running ahead of the target Gold supply.\",\"underspendAdjustmentFactor\":\"Adjusts the multiplier on target epoch rewards when the  protocol is running behind the target Gold supply.\"},\"return\":\"True upon success.\"},\"setTargetValidatorEpochPayment(uint256)\":{\"params\":{\"value\":\"The value in Celo Dollars.\"},\"return\":\"True upon success.\"},\"setTargetVotingGoldFraction(uint256)\":{\"params\":{\"value\":\"The percentage of floating Gold voting to target.\"},\"return\":\"True upon success.\"},\"setTargetVotingYield(uint256)\":{\"params\":{\"targetVotingYield\":\"The relative target block reward for voters.\"},\"return\":\"True upon success.\"},\"setTargetVotingYieldParameters(uint256,uint256)\":{\"params\":{\"adjustmentFactor\":\"The target block reward adjustment factor for voters.\",\"max\":\"The max relative target block reward for voters.\"},\"return\":\"True upon success.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"params\":{\"index\":\"Index of requested validator in the validator set.\"},\"return\":\"Address of validator at the requested index.\"},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\",\"index\":\"Index of requested validator in the validator set.\"},\"return\":\"Address of validator at the requested index.\"}},\"title\":\"A wrapper around EpochRewards that exposes internal functions for testing.\"},\"userdoc\":{\"methods\":{\"calculateTargetEpochRewards()\":{\"notice\":\"Calculates the per validator epoch payment and the total rewards to voters.\"},\"checkProofOfPossession(address,bytes,bytes)\":{\"notice\":\"Checks a BLS proof of possession.\"},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"calculate a * b^x for fractions a, b to `decimals` precision\"},\"getBlockNumberFromHeader(bytes)\":{\"notice\":\"Parses block number out of header.\"},\"getCarbonOffsettingFraction()\":{\"notice\":\"Returns the carbon offsetting partner reward fraction.\"},\"getCommunityRewardFraction()\":{\"notice\":\"Returns the community reward fraction.\"},\"getEpochNumber()\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochNumberOfBlock(uint256)\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochSize()\":{\"notice\":\"Returns the current epoch size in blocks.\"},\"getParentSealBitmap(uint256)\":{\"notice\":\"Gets the parent seal bitmap from the header at the given block number.\"},\"getRewardsMultiplier()\":{\"notice\":\"Returns the rewards multiplier based on the current and target Gold supplies.\"},\"getRewardsMultiplierParameters()\":{\"notice\":\"Returns the rewards multiplier parameters.\"},\"getTargetGoldTotalSupply()\":{\"notice\":\"Returns the target Gold supply according to the epoch rewards target schedule.\"},\"getTargetTotalEpochPaymentsInGold()\":{\"notice\":\"Returns the total target epoch payments to validators, converted to Gold.\"},\"getTargetVoterRewards()\":{\"notice\":\"Returns the total target epoch rewards for voters.\"},\"getTargetVotingGoldFraction()\":{\"notice\":\"Returns the target voting Gold fraction.\"},\"getTargetVotingYieldParameters()\":{\"notice\":\"Returns the target voting yield parameters.\"},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"notice\":\"Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"getVotingGoldFraction()\":{\"notice\":\"Returns the fraction of floating Gold being used for voting in validator elections.\"},\"hashHeader(bytes)\":{\"notice\":\"Computes hash of header.\"},\"initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,uint256)\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"isReserveLow()\":{\"notice\":\"Determines if the reserve is low enough to demand a diversion from   the community reward. Targets initial critical ratio of 2 with a linear   decline until 25 years have passed where the critical ratio will be 1.\"},\"minQuorumSize(uint256)\":{\"notice\":\"Returns the minimum number of required signers for a given block number.\"},\"minQuorumSizeInCurrentSet()\":{\"notice\":\"Computes byzantine quorum from current validator set size\"},\"numberValidatorsInSet(uint256)\":{\"notice\":\"Gets the size of the validator set that must sign the given block number.\"},\"setCarbonOffsettingFund(address,uint256)\":{\"notice\":\"Sets the carbon offsetting fund.\"},\"setCommunityRewardFraction(uint256)\":{\"notice\":\"Sets the community reward percentage\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"setRewardsMultiplierParameters(uint256,uint256,uint256)\":{\"notice\":\"Sets the rewards multiplier parameters.\"},\"setTargetValidatorEpochPayment(uint256)\":{\"notice\":\"Sets the target per-epoch payment in Celo Dollars for validators.\"},\"setTargetVotingGoldFraction(uint256)\":{\"notice\":\"Sets the target voting Gold fraction.\"},\"setTargetVotingYield(uint256)\":{\"notice\":\"Sets the target voting yield.  Uses fixed point arithmetic for protection against overflow.\"},\"setTargetVotingYieldParameters(uint256,uint256)\":{\"notice\":\"Sets the target voting yield parameters.\"},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"notice\":\"Gets a validator address from the current validator set.\"},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"notice\":\"Gets a validator address from the validator set at the given block number.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/test/EpochRewardsTest.sol\":\"EpochRewardsTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/CalledByVm.sol\":{\"keccak256\":\"0xd61979452e5da908f604c3797e288c0a819ba6091c0d24ed172af865e87fae6c\",\"urls\":[\"bzz-raw://1051ccf97c4dca2dabbdf9f458c324c92ca54460061c4327e5e25a905ecc351c\",\"dweb:/ipfs/QmVe1A5gqua4eY6wNKFrXu8E3hrU2v1GktDyFVZreHXkjA\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/FixidityLib.sol\":{\"keccak256\":\"0x2f98fa3b3454621817917bae2830806858a96c9457be2c5b6e0bed5b35aaaba3\",\"urls\":[\"bzz-raw://b6bf5cf79debe02093777cc9ddef4616dedd041ccc2618c43ea91c90afd97df6\",\"dweb:/ipfs/QmXonY3FkVy2jnQvLkgDi4LcaniS5DVZ1zpRZecWKWy9Ro\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/Freezable.sol\":{\"keccak256\":\"0x2d264574f693b31cdf1ef1fe44dd07f4ddd60c1979e79fc84b6f3019ceda9ac6\",\"urls\":[\"bzz-raw://eb43996e3f01765f6b4997ef86dceca4af987a9c6f2743de7d29ec887651ea2b\",\"dweb:/ipfs/QmdRfAZ97XBNd42XYQBWVFAx7gAKUuS3KvL41ryxo9YTwT\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/Initializable.sol\":{\"keccak256\":\"0xad98825b5d3181f4ce2d2dbe84adeb0cd7960fd80fafb0813539d6d96ba42ab8\",\"urls\":[\"bzz-raw://f76468328c78b80eeaaaadb7b186e41da4a34134446fe11bb707106322b8e32f\",\"dweb:/ipfs/QmNyjyVjPX1GKFibDcJBJyZQ57nhusG3DhPjAGnY7iaU39\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/UsingPrecompiles.sol\":{\"keccak256\":\"0x9fd156a9a16dac8deb0f55f54e7f1d7eec89eed061577358e46195121d7065b7\",\"urls\":[\"bzz-raw://1395d9c956cb4b25c9b514e22f1f9a21d93c724a6af3e9ca1306227416d57886\",\"dweb:/ipfs/QmQ5LVzDgemZ1NNkV5r5DyeLgiHtLc2MX1kCjhW7STSDV7\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/UsingRegistry.sol\":{\"keccak256\":\"0xfdd9e70bd58259b491ec54779715d7469ab4f804836bf5f63ff86921d0cae056\",\"urls\":[\"bzz-raw://e55f23f464e49c42b1f31782dcb88cbd2ca64e050d5f110ccdc2ffd50cd582ff\",\"dweb:/ipfs/QmfBiet9GbT9S9rn9SG9CkyXQGAMQRuk4EBmChY1m4kv47\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IAccounts.sol\":{\"keccak256\":\"0x6132a2e3105dbf00b52447db8bc307b052b2d02c0d00497bd0074ae3ce48027a\",\"urls\":[\"bzz-raw://07380d2593f1359e1440153597d16d1b4085a421f52909fafe3fa58f13088c62\",\"dweb:/ipfs/QmSjtmfFswK15Ta5NePg5voNVh9X63muCLCbQKgAZFG4rg\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"keccak256\":\"0x9f902faa66069500c7b5e8c9a53ca6afff99dfe6cd3915aa0f3c4fe6a9905ba5\",\"urls\":[\"bzz-raw://880c77a981296abbf6fe9a7e3e0d5d441b19de70d310b10f4a469ce344e8e96c\",\"dweb:/ipfs/QmUAY1xYLXUQXwgBoRFaXFv5z9a6sMYT9v7WdEAAeSGCwW\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"keccak256\":\"0xd4711baf3e38a0abeb3ef48eaab21aeb917f5e0a185cf463fddeb4bf20277b68\",\"urls\":[\"bzz-raw://8f350863943ab54dcf4d5ea525c16748f59263bf36c1d85251c1164d0e592032\",\"dweb:/ipfs/QmXAG6fvVQKM86rVsk6R3ndEoHtS9fcAAVxBApJ5j3LWeK\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IFreezer.sol\":{\"keccak256\":\"0x12508a9d528d1b63dc06644e9d97e864acc94f8a763cf8555e90bcdf1b2f8b21\",\"urls\":[\"bzz-raw://32df109167a13e684c9b296a0e13dda1899e418788eb59bf59aedd7a3ce65466\",\"dweb:/ipfs/QmR6BJCRFMSQpBpnSH2vzLE959FhXnmreDocWWc7fUYnnu\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IRegistry.sol\":{\"keccak256\":\"0x78ba82722d28e815c117f33d4659404f0707dab1c9b51f1bce5d4c15d6c94537\",\"urls\":[\"bzz-raw://0cea84b948896aece11c64b97c22b0f08f86cb45e166a004db4a88a98952cbfa\",\"dweb:/ipfs/QmR4uSGcs4nmph6duroscchstSwMzWSV8CDvD2SSnWuHbs\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/EpochRewards.sol\":{\"keccak256\":\"0xb71f7503f92d70f7d6f4630c1105417ccbfd0f5e7e4a879ad09f2932c728be3d\",\"urls\":[\"bzz-raw://140c0761f383767f2fd755d507cf21534d6166058ab0917a8127b8d9894b6311\",\"dweb:/ipfs/Qma5i72eFsUPBos84Zib7xWri7x6DWpNSeM99xkcht5Qfc\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/IElection.sol\":{\"keccak256\":\"0xebcd0d7dbbb2df503967ad63c9ddd437cef89a94ba2cc2f9ce274f41a4c901ee\",\"urls\":[\"bzz-raw://84dcf3a9952f1ce9a9110abb1783dfead290fd17c28216c5acb22de9d090921d\",\"dweb:/ipfs/QmeNoLz8WcHX9GLcBfQChXFHsFDRaVRRXnPXXvB2qVTaSZ\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/IGovernance.sol\":{\"keccak256\":\"0x227bf6a6b56411c368c9752761e2202ad71f2199deb2b114b125712b63372b7e\",\"urls\":[\"bzz-raw://cabeae6e6c47364291f12cf69658dcf5bdd8ac7eebda53d48a2b03aab96386a3\",\"dweb:/ipfs/QmUtPSC4hVz79XVVjFwQ6CozMd6oAR1m6yrPFkHD5sCdB1\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/ILockedGold.sol\":{\"keccak256\":\"0x577d01d8a1fbf47980fb5ffd36de2084ec255889b15671adfecd3a285df4f253\",\"urls\":[\"bzz-raw://6b955b6829748cd136fa92c3a434f5419e4eb024d535a854900ad48bd4151b67\",\"dweb:/ipfs/QmXM5uL5dsKecYyedAzsrZXAp81NtWQErbbVEFccJ6ZqiY\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/IValidators.sol\":{\"keccak256\":\"0x524a9e48689537421f97296ffd57fa0f2887117f9af9e71dd5ed17e66ba92d2a\",\"urls\":[\"bzz-raw://cf5d0c2f6ee9b2c8e270162455177e9c3bac79ac07d4f37c86f7f2ee5978a756\",\"dweb:/ipfs/QmZTKmytn1Wi3QfU3bHuSaSeYQzRrFKehyngrg37rHD3vV\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/test/EpochRewardsTest.sol\":{\"keccak256\":\"0xd98b4ffb38be6f1c52d5b7953a46b757f4ed797f0cc56e486aaadb2928849591\",\"urls\":[\"bzz-raw://5e53f746989d8dc4c082bea8be7e0918c3434c2e1223f407660c58b417590835\",\"dweb:/ipfs/QmbS2Y3G9eccqsSaNHdQz7YferGJNqer137yyh9GxeLa8P\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/interfaces/IAttestations.sol\":{\"keccak256\":\"0x979aaac636fe6a64f97034bf0bf062b5f0efd6e6f9f3fe84e81180f82eeb7a3e\",\"urls\":[\"bzz-raw://c1255d08278188247ef81fb09edd2d1d4a019fb0fe80fd3d9850415c5eb5caaf\",\"dweb:/ipfs/QmcJvqSM35nAR8p8LwVczhnaY6VwTRThNjfCzkzeiAkz45\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/interfaces/IRandom.sol\":{\"keccak256\":\"0xd65fd529d133cbde94628b39b0d2f0f4b6d0af2e8f97c0e6b4b2cd476479ed1d\",\"urls\":[\"bzz-raw://f2c6fe351990bfdeb55484bd3622d44c8f58579a7212d5cce71a82df846497f5\",\"dweb:/ipfs/QmRDDTXUqbA6dHfJe4ZS1442JDAfwoHq2eH9LHnQyzsh44\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/IExchange.sol\":{\"keccak256\":\"0xf2934d473f1b42566dbd90b4777725c966524bab78ce734b51f2510c6ef83ebb\",\"urls\":[\"bzz-raw://9fa1c7d72149b281ce9f54e636e37753fffcfa45833753ca700b8861a2a25a22\",\"dweb:/ipfs/QmUAgNosF21EroMTGgEjy6qJZU7njH3YMQwqj7j515HDVa\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/IReserve.sol\":{\"keccak256\":\"0x8da4d702b47a7e60981ca416f2d0f24a3c1dea9ab44f04b695c0fde02c84a38e\",\"urls\":[\"bzz-raw://198fb3cd945e374926e3d6bcb2469b7f5c635e78b40417a4b3a1eacabeca234b\",\"dweb:/ipfs/Qma8RRSqksFCzL5gWTXmGtJvC4Mw1bgquvN33nKhrRwUrD\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/ISortedOracles.sol\":{\"keccak256\":\"0x8f80e430800fff2f04f3981c4b73a2a374b2c2150543a2de51fcf7ba4fb08789\",\"urls\":[\"bzz-raw://f1a472385d5fa1b1cc4ab6ff948cd11f86c55328841d89f39f02b64449d3ac1a\",\"dweb:/ipfs/QmSYfwR8RJ2nyzt9VJtLKqaUHwAPfz579vhcQP7LRLaqTe\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/IStableToken.sol\":{\"keccak256\":\"0x091e577acecdf050fe4c41133b11fe330d07050c5fe78b65bfce32ccc29e51c6\",\"urls\":[\"bzz-raw://94f7d7578274be8212b8c9a3f0759d884969b05a7f0c64c7c9352102f4e51ab4\",\"dweb:/ipfs/Qmd3bERcFLrrvpURuzKUg6YCSFisNQ36YpRLWkxEcS1Tkj\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102bb5760003560e01c80637d164125116101825780639b2b592f116100e9578063d632994c116100a2578063e50e652d1161007c578063e50e652d14610f80578063ec68307214610fc2578063f2fde38b1461103d578063fae8db0a14611081576102bb565b8063d632994c14610f16578063df4da46114610f44578063e185aaa814610f62576102bb565b80639b2b592f14610dc8578063a1b9596214610e0a578063a91ee0dc14610e28578063ae098de214610e6c578063b63b4a2314610e8a578063cd52782e14610ed0576102bb565b806392ecd7451161013b57806392ecd74514610cd45780639402838414610cde57806396c3d2fd14610d245780639917907f14610d6a5780639a7b3be714610d885780639ad0cce714610da6576102bb565b80637d16412514610b035780638331c1d714610b2157806387ee8a0f14610b7b5780638a88362614610b995780638da5cb5b14610c685780638f32d59b14610cb2576102bb565b806354255be011610226578063715018a6116101df578063715018a6146109685780637385e5da1461097257806376d92bd21461099057806378e97925146109d25780637b103999146109f05780637cca2a3c14610a3a576102bb565b806354255be01461073f5780635918bb58146107725780635d180adb146107c25780635f396e481461083a578063643470431461086657806367960e9114610899576102bb565b80632848f9e3116102785780632848f9e31461056e5780633b1eb4bf1461058c578063434c99c4146105ce5780634901c725146106345780634b2c2f44146106525780635049890f14610721576102bb565b80630203ab24146102c0578063123633ea146102de578063158ef93e1461034c578063171af90f1461036e57806322dae21f1461039a57806323f0ab65146103e4575b600080fd5b6102c86110c3565b6040518082815260200191505060405180910390f35b61030a600480360360208110156102f457600080fd5b81019080803590602001909291905050506110e2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610354611233565b604051808215151515815260200191505060405180910390f35b610376611246565b60405180848152602001838152602001828152602001935050505060405180910390f35b6103a26112bf565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610554600480360360608110156103fa57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561043757600080fd5b82018360208201111561044957600080fd5b8035906020019184600183028401116401000000008311171561046b57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156104ce57600080fd5b8201836020820111156104e057600080fd5b8035906020019184600183028401116401000000008311171561050257600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112e5565b604051808215151515815260200191505060405180910390f35b61057661149e565b6040518082815260200191505060405180910390f35b6105b8600480360360208110156105a257600080fd5b8101908080359060200190929190505050611568565b6040518082815260200191505060405180910390f35b61061a600480360360408110156105e457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050611582565b604051808215151515815260200191505060405180910390f35b61063c611803565b6040518082815260200191505060405180910390f35b61070b6004803603602081101561066857600080fd5b810190808035906020019064010000000081111561068557600080fd5b82018360208201111561069757600080fd5b803590602001918460018302840111640100000000831117156106b957600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a13565b6040518082815260200191505060405180910390f35b610729611ba7565b6040518082815260200191505060405180910390f35b610747611cd1565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b6107a86004803603604081101561078857600080fd5b810190808035906020019092919080359060200190929190505050611cf8565b604051808215151515815260200191505060405180910390f35b6107f8600480360360408110156107d857600080fd5b810190808035906020019092919080359060200190929190505050611f21565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610842612073565b60405180848152602001838152602001828152602001935050505060405180910390f35b61086e6120f2565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b610952600480360360208110156108af57600080fd5b81019080803590602001906401000000008111156108cc57600080fd5b8201836020820111156108de57600080fd5b8035906020019184600183028401116401000000008311171561090057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050612212565b6040518082815260200191505060405180910390f35b6109706123a6565b005b61097a6124df565b6040518082815260200191505060405180910390f35b6109bc600480360360208110156109a657600080fd5b81019080803590602001909291905050506124ef565b6040518082815260200191505060405180910390f35b6109da612509565b6040518082815260200191505060405180910390f35b6109f861250f565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b016004803603610180811015610a5157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190505050612535565b005b610b0b612644565b6040518082815260200191505060405180910390f35b610b6160048036036060811015610b3757600080fd5b8101908080359060200190929190803590602001909291908035906020019092919050505061266a565b604051808215151515815260200191505060405180910390f35b610b836128a0565b6040518082815260200191505060405180910390f35b610c5260048036036020811015610baf57600080fd5b8101908080359060200190640100000000811115610bcc57600080fd5b820183602082011115610bde57600080fd5b80359060200191846001830284011164010000000083111715610c0057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506128aa565b6040518082815260200191505060405180910390f35b610c70612a3e565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610cba612a67565b604051808215151515815260200191505060405180910390f35b610cdc612ac5565b005b610d0a60048036036020811015610cf457600080fd5b8101908080359060200190929190505050612acf565b604051808215151515815260200191505060405180910390f35b610d5060048036036020811015610d3a57600080fd5b8101908080359060200190929190505050612c81565b604051808215151515815260200191505060405180910390f35b610d72612d9f565b6040518082815260200191505060405180910390f35b610d90612dc5565b6040518082815260200191505060405180910390f35b610dae612dd5565b604051808215151515815260200191505060405180910390f35b610df460048036036020811015610dde57600080fd5b8101908080359060200190929190505050612f37565b6040518082815260200191505060405180910390f35b610e12613080565b6040518082815260200191505060405180910390f35b610e6a60048036036020811015610e3e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613264565b005b610e74613408565b6040518082815260200191505060405180910390f35b610eb660048036036020811015610ea057600080fd5b810190808035906020019092919050505061342e565b604051808215151515815260200191505060405180910390f35b610efc60048036036020811015610ee657600080fd5b8101908080359060200190929190505050613593565b604051808215151515815260200191505060405180910390f35b610f4260048036036020811015610f2c57600080fd5b81019080803590602001909291905050506136f7565b005b610f4c613701565b6040518082815260200191505060405180910390f35b610f6a61383d565b6040518082815260200191505060405180910390f35b610fac60048036036020811015610f9657600080fd5b8101908080359060200190929190505050613843565b6040518082815260200191505060405180910390f35b611020600480360360c0811015610fd857600080fd5b8101908080359060200190929190803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919050505061388e565b604051808381526020018281526020019250505060405180910390f35b61107f6004803603602081101561105357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613aa2565b005b6110ad6004803603602081101561109757600080fd5b8101908080359060200190929190505050613b28565b6040518082815260200191505060405180910390f35b60006110dd6110d86110d3613c71565b613d28565b61402d565b905090565b60006060600060fa73ffffffffffffffffffffffffffffffffffffffff16844360405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831061115b5780518252602082019150602081019050602083039250611138565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146111bb576040519150601f19603f3d011682016040523d82523d6000602084013e6111c0565b606091505b5080935081925050508061121f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d8152602001806159a7603d913960400191505060405180910390fd5b61122a82600061403b565b92505050919050565b600060149054906101000a900460ff1681565b600080600080600690506112718160000160405180602001604052908160008201548152505061402d565b6112928260020160405180602001604052908160008201548152505061402d565b6112b38360010160405180602001604052908160008201548152505061402d565b93509350935050909192565b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060fb73ffffffffffffffffffffffffffffffffffffffff16858585604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140183805190602001908083835b6020831061136e578051825260208201915060208101905060208303925061134b565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b602083106113bf578051825260208201915060208101905060208303925061139c565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b602083106114285780518252602082019150602081019050602083039250611405565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611488576040519150601f19603f3d011682016040523d82523d6000602084013e61148d565b606091505b505080915050809150509392505050565b600061156361155e60066000016040518060200160405290816000820154815250506115506114cb614052565b73ffffffffffffffffffffffffffffffffffffffff16631f6042436040518163ffffffff1660e01b815260040160206040518083038186803b15801561151057600080fd5b505afa158015611524573d6000803e3d6000fd5b505050506040513d602081101561153a57600080fd5b810190808051906020019092919050505061414d565b6141d790919063ffffffff16565b614636565b905090565b600061157b82611576613701565b614657565b9050919050565b600061158c612a67565b6115fe576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600c60009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff161415806116795750611675600b60405180602001604052908160008201548152505061402d565b8214155b6116ce576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526048815260200180615b486048913960600191505060405180910390fd5b6116de6116d961469f565b61402d565b8210611752576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260198152602001807f56616c7565206d757374206265206c657373207468616e20310000000000000081525060200191505060405180910390fd5b82600c60006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555061179c826146c5565b600b600082015181600001559050508273ffffffffffffffffffffffffffffffffffffffff167fe296227209b47bb8f4a76768ebd564dcde1c44be325a5d262f27c1fd4fd4538b836040518082815260200191505060405180910390a26001905092915050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f537461626c65546f6b656e000000000000000000000000000000000000000000815250600b019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156118bf57600080fd5b505afa1580156118d3573d6000803e3d6000fd5b505050506040513d60208110156118e957600080fd5b810190808051906020019092919050505090506000806119076146e3565b73ffffffffffffffffffffffffffffffffffffffff1663ef90e1b0846040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801561198257600080fd5b505afa158015611996573d6000803e3d6000fd5b505050506040513d60408110156119ac57600080fd5b81019080805190602001909291908051906020019092919050505091509150611a0b826119fd836119ef600d546119e16128a0565b6147de90919063ffffffff16565b6147de90919063ffffffff16565b61486490919063ffffffff16565b935050505090565b60006060600060f473ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b60208310611a685780518252602082019150602081019050602083039250611a45565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b60208310611acf5780518252602082019150602081019050602083039250611aac565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611b2f576040519150601f19603f3d011682016040523d82523d6000602084013e611b34565b606091505b50809350819250505080611b93576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260388152602001806158f56038913960400191505060405180910390fd5b611b9e8260006148ae565b92505050919050565b600080611bbf6002544261494f90919063ffffffff16565b90506201518061016d600f0202811015611c71576000611c136002611c056b01f04ef12cb04cf1580000006b033b2e3c9fd0803ce800000061494f90919063ffffffff16565b61486490919063ffffffff16565b90506000611c466201518061016d600f0202611c3885856147de90919063ffffffff16565b61486490919063ffffffff16565b9050611c676b01f04ef12cb04cf1580000008261499990919063ffffffff16565b9350505050611cce565b6000611cc8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806158bf6036913960400191505060405180910390fd5b60009150505b90565b60008060008060018060016000839350829250819150809050935093509350935090919293565b6000611d02612a67565b611d74576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b611d96600660020160405180602001604052908160008201548152505061402d565b83141580611dc55750611dc1600660010160405180602001604052908160008201548152505061402d565b8214155b611e1a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806159856022913960400191505060405180910390fd5b611e23836146c5565b600660020160008201518160000155905050611e3e826146c5565b600660010160008201518160000155905050611e83611e5b61469f565b6006600201604051806020016040529081600082015481525050614a2190919063ffffffff16565b611ed8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602f815260200180615b19602f913960400191505060405180910390fd5b7f1b76e38f3fdd1f284ed4d47c9d50ff407748c516ff9761616ff638c2331076258383604051808381526020018281526020019250505060405180910390a16001905092915050565b60006060600060fa73ffffffffffffffffffffffffffffffffffffffff16858560405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310611f9a5780518252602082019150602081019050602083039250611f77565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611ffa576040519150601f19603f3d011682016040523d82523d6000602084013e611fff565b606091505b5080935081925050508061205e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180615a196036913960400191505060405180910390fd5b61206982600061403b565b9250505092915050565b6000806000806003905061209e8160020160405180602001604052908160008201548152505061402d565b6120c28260000160000160405180602001604052908160008201548152505061402d565b6120e68360000160010160405180602001604052908160008201548152505061402d565b93509350935050909192565b600080600080600061210261149e565b9050600061210e613c71565b9050612118615767565b61212182613d28565b905061214861214382612135600d5461414d565b6141d790919063ffffffff16565b614636565b61216b612166836121588761414d565b6141d790919063ffffffff16565b614636565b6121b66121b1846121a3600a6040518060200160405290816000820154815250506121958961414d565b6141d790919063ffffffff16565b6141d790919063ffffffff16565b614636565b6122016121fc856121ee600b6040518060200160405290816000820154815250506121e08a61414d565b6141d790919063ffffffff16565b6141d790919063ffffffff16565b614636565b965096509650965050505090919293565b60006060600060f673ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b602083106122675780518252602082019150602081019050602083039250612244565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106122ce57805182526020820191506020810190506020830392506122ab565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461232e576040519150601f19603f3d011682016040523d82523d6000602084013e612333565b606091505b50809350819250505080612392576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180615b906023913960400191505060405180910390fd5b61239d8260006148ae565b92505050919050565b6123ae612a67565b612420576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006124ea43613843565b905090565b60006125026124fd83613d28565b61402d565b9050919050565b60025481565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060149054906101000a900460ff16156125b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055506125dc33614a36565b6125e58c613264565b6125ef8a8a611cf8565b506125fb88888861266a565b5061260585612acf565b5061260f84612c81565b506126198361342e565b506126248282611582565b5061262e8b613593565b5042600281905550505050505050505050505050565b6000612665600b60405180602001604052908160008201548152505061402d565b905090565b6000612674612a67565b6126e6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b612708600360020160405180602001604052908160008201548152505061402d565b8414158061273a5750612736600360000160010160405180602001604052908160008201548152505061402d565b8214155b806127695750612765600360000160000160405180602001604052908160008201548152505061402d565b8314155b6127be576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260218152602001806158206021913960400191505060405180910390fd5b604051806040016040528060405180604001604052806127dd876146c5565b81526020016127eb866146c5565b81525081526020016127fc866146c5565b815250600360008201518160000160008201518160000160008201518160000155505060208201518160010160008201518160000155505050506020820151816002016000820151816000015550509050507f191445ee0115396c9725b9c642b985d63820ca57d54e42e5eb38faec4022f05d84848460405180848152602001838152602001828152602001935050505060405180910390a1600190509392505050565b6000600e54905090565b60006060600060f773ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b602083106128ff57805182526020820191506020810190506020830392506128dc565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106129665780518252602082019150602081019050602083039250612943565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146129c6576040519150601f19603f3d011682016040523d82523d6000602084013e6129cb565b606091505b50809350819250505080612a2a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526031815260200180615ae86031913960400191505060405180910390fd5b612a3582600061403b565b92505050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16612aa9614b7a565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b612acd614b82565b565b6000612ad9612a67565b612b4b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b612b6a600960405180602001604052908160008201548152505061402d565b821415612bc2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260258152602001806158416025913960400191505060405180910390fd5b612bd2612bcd61469f565b61402d565b8210612c29576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603381526020018061588c6033913960400191505060405180910390fd5b612c32826146c5565b6009600082015181600001559050507fbae2f33c70949fbc7325c98655f3039e5e1c7f774874c99fd4f31ec5f432b159826040518082815260200191505060405180910390a160019050919050565b6000612c8b612a67565b612cfd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600d54821415612d58576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260288152602001806157ca6028913960400191505060405180910390fd5b81600d819055507fa21d141963bb2c1064b5376f762d22d3e9c4c51617edcf105bcec0f14e36800c826040518082815260200191505060405180910390a160019050919050565b6000612dc0600a60405180602001604052908160008201548152505061402d565b905090565b6000612dd043611568565b905090565b6000612ddf615767565b612dfc612df76002544261494f90919063ffffffff16565b61414d565b9050612e06615767565b612e13632efe078061414d565b9050612e1d615767565b612e27600261414d565b9050612e31615767565b612e448385614f7690919063ffffffff16565b15612e5857612e5161469f565b9050612e80565b612e7d612e6e8486614f8c90919063ffffffff16565b836150d590919063ffffffff16565b90505b612e88615767565b612f18612e9361517c565b73ffffffffffffffffffffffffffffffffffffffff166356b6d0d56040518163ffffffff1660e01b815260040160206040518083038186803b158015612ed857600080fd5b505afa158015612eec573d6000803e3d6000fd5b505050506040513d6020811015612f0257600080fd5b81019080805190602001909291905050506146c5565b9050612f2d828261527790919063ffffffff16565b9550505050505090565b60006060600060f973ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310612fa85780518252602082019150602081019050602083039250612f85565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114613008576040519150601f19603f3d011682016040523d82523d6000602084013e61300d565b606091505b5080935081925050508061306c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806157f2602e913960400191505060405180910390fd5b61307782600061403b565b92505050919050565b6000806131a461308e61517c565b73ffffffffffffffffffffffffffffffffffffffff16638d9a5e6f6040518163ffffffff1660e01b815260040160206040518083038186803b1580156130d357600080fd5b505afa1580156130e7573d6000803e3d6000fd5b505050506040513d60208110156130fd57600080fd5b810190808051906020019092919050505061311661528d565b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b15801561315b57600080fd5b505afa15801561316f573d6000803e3d6000fd5b505050506040513d602081101561318557600080fd5b810190808051906020019092919050505061494f90919063ffffffff16565b905060006131b0614052565b73ffffffffffffffffffffffffffffffffffffffff16639a0e7d666040518163ffffffff1660e01b815260040160206040518083038186803b1580156131f557600080fd5b505afa158015613209573d6000803e3d6000fd5b505050506040513d602081101561321f57600080fd5b8101908080519060200190929190505050905061325d6132586132418461414d565b61324a8461414d565b614f8c90919063ffffffff16565b61402d565b9250505090565b61326c612a67565b6132de576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415613381576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b6000613429600960405180602001604052908160008201548152505061402d565b905090565b6000613438612a67565b6134aa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6134c9600a60405180602001604052908160008201548152505061402d565b82141580156134e657506134e36134de61469f565b61402d565b82105b61353b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252604f81526020018061577b604f913960600191505060405180910390fd5b613544826146c5565b600a600082015181600001559050507fe6c1b64ad7e601924731051286b7b408b1a6f3ae96dcd6d2d9cd82578372ef9e826040518082815260200191505060405180910390a160019050919050565b600061359d612a67565b61360f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b613617615767565b613620836146c5565b905061364e60066002016040518060200160405290816000820154815250508261527790919063ffffffff16565b6136a3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806159e46035913960400191505060405180910390fd5b806006600001600082015181600001559050507f152c3fc1e1cd415804bc9ae15876b37e62d8909358b940e6f4847ca927f46637836040518082815260200191505060405180910390a16001915050919050565b80600e8190555050565b60006060600060f873ffffffffffffffffffffffffffffffffffffffff166040516020016040516020818303038152906040526040518082805190602001908083835b602083106137675780518252602082019150602081019050602083039250613744565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146137c7576040519150601f19603f3d011682016040523d82523d6000602084013e6137cc565b606091505b5080935081925050508061382b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180615a976025913960400191505060405180910390fd5b61383682600061403b565b9250505090565b600d5481565b60006138876003613879600261386b600261385d88612f37565b6147de90919063ffffffff16565b61499990919063ffffffff16565b61486490919063ffffffff16565b9050919050565b600080600087141580156138a3575060008514155b613915576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f612064656e6f6d696e61746f72206973207a65726f000000000000000000000081525060200191505060405180910390fd5b6000806000606060fc73ffffffffffffffffffffffffffffffffffffffff168c8c8c8c8c8c6040516020018087815260200186815260200185815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b602083106139af578051825260208201915060208101905060208303925061398c565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114613a0f576040519150601f19603f3d011682016040523d82523d6000602084013e613a14565b606091505b50809250819350505081613a73576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180615a706027913960400191505060405180910390fd5b613a7e81600061403b565b9350613a8b81602061403b565b925083839550955050505050965096945050505050565b613aaa612a67565b613b1c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b613b2581614a36565b50565b60006060600060f573ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310613b995780518252602082019150602081019050602083039250613b76565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114613bf9576040519150601f19603f3d011682016040523d82523d6000602084013e613bfe565b606091505b50809350819250505080613c5d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180615abc602c913960400191505060405180910390fd5b613c688260006148ae565b92505050919050565b600080613c7c61149e565b90506000613c88611803565b90506000613c9f828461499990919063ffffffff16565b9050613d1d613d18613d01600b604051806020016040529081600082015481525050613cf3600a604051806020016040529081600082015481525050613ce5600161414d565b6150d590919063ffffffff16565b6150d590919063ffffffff16565b613d0a8461414d565b614f8c90919063ffffffff16565b614636565b905080935050505090565b613d30615767565b6000613d3a611ba7565b90506000613d4661528d565b73ffffffffffffffffffffffffffffffffffffffff166318160ddd6040518163ffffffff1660e01b815260040160206040518083038186803b158015613d8b57600080fd5b505afa158015613d9f573d6000803e3d6000fd5b505050506040513d6020811015613db557600080fd5b810190808051906020019092919050505090506000613dfb613de0868461499990919063ffffffff16565b6b033b2e3c9fd0803ce800000061494f90919063ffffffff16565b90506000613e1e846b033b2e3c9fd0803ce800000061494f90919063ffffffff16565b9050613e28615767565b613e4b613e348361414d565b613e3d8561414d565b614f8c90919063ffffffff16565b9050613e67613e5861469f565b8261538890919063ffffffff16565b15613f4a57613e74615767565b613ebc6003600001600001604051806020016040529081600082015481525050613eae613e9f61469f565b856150d590919063ffffffff16565b6141d790919063ffffffff16565b9050613ec6615767565b613ee082613ed261469f565b61539d90919063ffffffff16565b9050613f0e600360020160405180602001604052908160008201548152505082614a2190919063ffffffff16565b15613f225780975050505050505050614028565b6003600201604051806020016040529081600082015481525050975050505050505050614028565b613f64613f5561469f565b82614a2190919063ffffffff16565b1561401857613f71615767565b613fb96003600001600101604051806020016040529081600082015481525050613fab84613f9d61469f565b6150d590919063ffffffff16565b6141d790919063ffffffff16565b9050613fd5613fc661469f565b82614a2190919063ffffffff16565b1561400157613ff481613fe661469f565b6150d590919063ffffffff16565b9650505050505050614028565b61400b60006146c5565b9650505050505050614028565b61402061469f565b955050505050505b919050565b600081600001519050919050565b600061404783836148ae565b60001c905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f456c656374696f6e0000000000000000000000000000000000000000000000008152506008019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561410d57600080fd5b505afa158015614121573d6000803e3d6000fd5b505050506040513d602081101561413757600080fd5b8101908080519060200190929190505050905090565b614155615767565b61415d615446565b8211156141b5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603681526020018061594f6036913960400191505060405180910390fd5b604051806020016040528069d3c21bcecceda100000084028152509050919050565b6141df615767565b6000836000015114806141f6575060008260000151145b1561421257604051806020016040528060008152509050614630565b69d3c21bcecceda10000008260000151141561423057829050614630565b69d3c21bcecceda10000008360000151141561424e57819050614630565b600069d3c21bcecceda100000061426485615465565b600001518161426f57fe5b049050600061427d8561549c565b600001519050600069d3c21bcecceda100000061429986615465565b60000151816142a457fe5b04905060006142b28661549c565b600001519050600082850290506000851461434657828582816142d157fe5b0414614345576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b600069d3c21bcecceda100000082029050600082146143e85769d3c21bcecceda100000082828161437357fe5b04146143e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f6f766572666c6f772078317931202a206669786564312064657465637465640081525060200191505060405180910390fd5b5b8091506000848602905060008614614479578486828161440457fe5b0414614478576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b6000848802905060008814614507578488828161449257fe5b0414614506576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b61450f6154d9565b878161451757fe5b0496506145226154d9565b858161452a57fe5b04945060008588029050600088146145bb578588828161454657fe5b04146145ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b6145c3615767565b60405180602001604052808781525090506145ec8160405180602001604052808781525061539d565b90506146068160405180602001604052808681525061539d565b90506146208160405180602001604052808581525061539d565b9050809a50505050505050505050505b92915050565b600069d3c21bcecceda100000082600001518161464f57fe5b049050919050565b60008082848161466357fe5b049050600083858161467157fe5b0614156146815780915050614699565b61469560018261499990919063ffffffff16565b9150505b92915050565b6146a7615767565b604051806020016040528069d3c21bcecceda1000000815250905090565b6146cd615767565b6040518060200160405280838152509050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f536f727465644f7261636c657300000000000000000000000000000000000000815250600d019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561479e57600080fd5b505afa1580156147b2573d6000803e3d6000fd5b505050506040513d60208110156147c857600080fd5b8101908080519060200190929190505050905090565b6000808314156147f1576000905061485e565b600082840290508284828161480257fe5b0414614859576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180615a4f6021913960400191505060405180910390fd5b809150505b92915050565b60006148a683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f0000000000008152506154e6565b905092915050565b60006148c460208361499990919063ffffffff16565b8351101561493a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f736c6963696e67206f7574206f662072616e676500000000000000000000000081525060200191505060405180910390fd5b60006020830184015190508091505092915050565b600061499183836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506155ac565b905092915050565b600080828401905083811015614a17576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60008160000151836000015110905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415614abc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806158666026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600033905090565b614b8a61566c565b73ffffffffffffffffffffffffffffffffffffffff1663e5839836306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015614c0657600080fd5b505afa158015614c1a573d6000803e3d6000fd5b505050506040513d6020811015614c3057600080fd5b810190808051906020019092919050505015614c97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061592d6022913960400191505060405180910390fd5b614c9f615767565b614caf614caa613080565b6146c5565b9050614cda60096040518060200160405290816000820154815250508261538890919063ffffffff16565b15614de057614ce7615767565b614d106009604051806020016040529081600082015481525050836150d590919063ffffffff16565b9050614d1a615767565b614d466006600101604051806020016040529081600082015481525050836141d790919063ffffffff16565b9050614d74600660000160405180602001604052908160008201548152505082614f7690919063ffffffff16565b15614d9a57614d83600061414d565b600660000160008201518160000155905050614dd9565b614dc68160066000016040518060200160405290816000820154815250506150d590919063ffffffff16565b6006600001600082015181600001559050505b5050614f1b565b614e09600960405180602001604052908160008201548152505082614a2190919063ffffffff16565b15614f1a57614e16615767565b614e3f8260096040518060200160405290816000820154815250506150d590919063ffffffff16565b9050614e49615767565b614e756006600101604051806020016040529081600082015481525050836141d790919063ffffffff16565b9050614ea381600660000160405180602001604052908160008201548152505061539d90919063ffffffff16565b600660000160008201518160000155905050614efa6006600201604051806020016040529081600082015481525050600660000160405180602001604052908160008201548152505061538890919063ffffffff16565b15614f175760066002016006600001600082015481600001559050505b50505b5b7f49d8cdfe05bae61517c234f65f4088454013bafe561115126a8fe0074dc7700e614f5e600660000160405180602001604052908160008201548152505061402d565b6040518082815260200191505060405180910390a150565b6000816000015183600001511015905092915050565b614f94615767565b60008260000151141561500f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f63616e277420646976696465206279203000000000000000000000000000000081525060200191505060405180910390fd5b600069d3c21bcecceda10000008460000151029050836000015169d3c21bcecceda1000000828161503c57fe5b04146150b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f766572666c6f7720617420646976696465000000000000000000000000000081525060200191505060405180910390fd5b6040518060200160405280846000015183816150c857fe5b0481525091505092915050565b6150dd615767565b81600001518360000151101561515b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f737562737472616374696f6e20756e646572666c6f772064657465637465640081525060200191505060405180910390fd5b60405180602001604052808360000151856000015103815250905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f52657365727665000000000000000000000000000000000000000000000000008152506007019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561523757600080fd5b505afa15801561524b573d6000803e3d6000fd5b505050506040513d602081101561526157600080fd5b8101908080519060200190929190505050905090565b6000816000015183600001511115905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f476f6c64546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561534857600080fd5b505afa15801561535c573d6000803e3d6000fd5b505050506040513d602081101561537257600080fd5b8101908080519060200190929190505050905090565b60008160000151836000015111905092915050565b6153a5615767565b600082600001518460000151019050836000015181101561542e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f616464206f766572666c6f77206465746563746564000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808281525091505092915050565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b61546d615767565b604051806020016040528069d3c21bcecceda10000008085600001518161549057fe5b04028152509050919050565b6154a4615767565b604051806020016040528069d3c21bcecceda1000000808560000151816154c757fe5b04028460000151038152509050919050565b600064e8d4a51000905090565b60008083118290615592576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561555757808201518184015260208101905061553c565b50505050905090810190601f1680156155845780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161559e57fe5b049050809150509392505050565b6000838311158290615659576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561561e578082015181840152602081019050615603565b50505050905090810190601f16801561564b5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f467265657a6572000000000000000000000000000000000000000000000000008152506007019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561572757600080fd5b505afa15801561573b573d6000803e3d6000fd5b505050506040513d602081101561575157600080fd5b8101908080519060200190929190505050905090565b604051806020016040528060008152509056fe56616c7565206d75737420626520646966666572656e742066726f6d206578697374696e6720636f6d6d756e69747920726577617264206672616374696f6e20616e64206c657373207468616e20315461726765742076616c696461746f722065706f6368207061796d656e7420756e6368616e6765646572726f722063616c6c696e67206e756d62657256616c696461746f7273496e53657420707265636f6d70696c654261642072657761726473206d756c7469706c69657220706172616d657465727354617267657420766f74696e6720676f6c64206672616374696f6e20756e6368616e6765644f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737354617267657420766f74696e6720676f6c64206672616374696f6e2063616e6e6f74206265206c6172676572207468616e2031426c6f636b207265776172642063616c63756c6174696f6e20666f722079656172732031352d333020756e696d706c656d656e7465646572726f722063616c6c696e672067657456657269666965645365616c4269746d617046726f6d48656164657220707265636f6d70696c6563616e27742063616c6c207768656e20636f6e74726163742069732066726f7a656e63616e277420637265617465206669786964697479206e756d626572206c6172676572207468616e206d61784e6577466978656428294261642074617267657420766f74696e67207969656c6420706172616d65746572736572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d43757272656e7453657420707265636f6d70696c6554617267657420766f74696e67207969656c64206d757374206265206c657373207468616e206f7220657175616c20746f206d61786572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d53657420707265636f6d70696c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f776572726f722063616c6c696e67206672616374696f6e4d756c45787020707265636f6d70696c656572726f722063616c6c696e672067657445706f636853697a6520707265636f6d70696c656572726f722063616c6c696e6720676574506172656e745365616c4269746d617020707265636f6d70696c656572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d48656164657220707265636f6d70696c654d61782074617267657420766f74696e67207969656c64206d757374206265206c6f776572207468616e2031303025506172746e657220616e642076616c7565206d75737420626520646966666572656e742066726f6d206578697374696e6720636172626f6e206f666673657474696e672066756e646572726f722063616c6c696e67206861736848656164657220707265636f6d70696c65a265627a7a72315820cf1727003cc47c9efacea6a419f271d1558902ea38b534b296b12c7a3c68628d64736f6c634300050d0032",
  "sourceMap": "150:608:96:-;;;2558:1:65;2531:28;;192:4:96;3986::65;698:17:154;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;135:17:12;130:57;;176:4;162:11;;:18;;;;;;;;;;;;;;;;;;130:57;81:110;3942:52:65;150:608:96;;788:96:150;833:15;867:10;860:17;;788:96;:::o;150:608:96:-;;;;;;;",
  "deployedSourceMap": "150:608:96:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;150:608:96;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18109:144:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3716:367:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3716:367:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;53:23:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6704:263:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2859:38;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6211:266:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6211:266:22;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6211:266:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6211:266:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6211:266:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6211:266:22;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6211:266:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6211:266:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6211:266:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6211:266:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16277:219:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2555:147:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2555:147:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8545:534:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8545:534:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;16678:396;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8361:343:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8361:343:22;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8361:343:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8361:343:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8361:343:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8361:343:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;13792:575:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3676:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12272:682;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12272:682:65;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4387:378:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4387:378:22;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;7112:320:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21982:878;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7053:288:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7053:288:22;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7053:288:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7053:288:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7053:288:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7053:288:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1684:137:154;;;:::i;:::-;;9896:112:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;247:194:96;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;247:194:96;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2531:28:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2540:25:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5340:1214:65;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5340:1214:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;9252:122;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11159:863;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11159:863:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;530:113:96;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6606:329:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6606:329:22;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6606:329:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6606:329:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6606:329:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6606:329:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;899:77:154;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;445:81:96;;;:::i;:::-;;9541:430:65;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9541:430:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;10398:293;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10398:293:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8167:120;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2803:109:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;20945:777:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5444:321:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5444:321:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18455:316:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3089:230:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3089:230:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;10104:122:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7618:402;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7618:402:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;13187:413;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13187:413:65;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;647:109:96;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;647:109:96;;;;;;;;;;;;;;;;;:::i;:::-;;2125:266:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2901:42:65;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9617:147:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9617:147:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1244:763;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1244:763:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1970:107:154;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:154;;;;;;;;;;;;;;;;;;;:::i;:::-;;7632:322:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7632:322:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;18109:144:65;18164:7;18186:62;:53;18208:30;:28;:30::i;:::-;18186:21;:53::i;:::-;:60;:62::i;:::-;18179:69;;18109:144;:::o;3716:367:22:-;3798:7;3813:16;3835:12;409:8;3870:24;;3912:5;3927:12;3895:46;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3895:46:22;;;3870:72;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3870:72:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3853:89:22;;;;;;;;3956:7;3948:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4050:27;4070:3;4075:1;4050:19;:27::i;:::-;4035:43;;;;3716:367;;;:::o;53:23:12:-;;;;;;;;;;;;;:::o;6704:263:65:-;6769:7;6778;6787;6802:42;6847:23;6802:68;;6884:22;:6;:13;;:20;;;;;;;;;;;;;;;;;;:22::i;:::-;6908:19;:6;:10;;:17;;;;;;;;;;;;;;;;;;:19::i;:::-;6929:32;:6;:23;;:30;;;;;;;;;;;;;;;;;;:32::i;:::-;6876:86;;;;;;;6704:263;;;:::o;2859:38::-;;;;;;;;;;;;;:::o;6211:266:22:-;6334:4;6348:12;355:8;6380:30;;6428:6;6436;6444;6411:40;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6411:40:22;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6411:40:22;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6411:40:22;;;6380:72;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6380:72:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;6366:86:22;;;;;6465:7;6458:14;;;6211:266;;;;;:::o;16277:219:65:-;16331:7;16359:132;:111;16439:23;:30;;16359:111;;;;;;;;;;;;;;;;;:61;16389:13;:11;:13::i;:::-;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16389:30:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16389:30:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16389:30:65;;;;;;;;;;;;;;;;16359:29;:61::i;:::-;:79;;:111;;;;:::i;:::-;:130;:132::i;:::-;16346:145;;16277:219;:::o;2555:147:22:-;2628:7;2650:47;2669:11;2682:14;:12;:14::i;:::-;2650:18;:47::i;:::-;2643:54;;2555:147;;;:::o;8545:534:65:-;8636:4;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8674:23:65;;;;;;;;;;;8663:34;;:7;:34;;;;:80;;;;8710:33;:24;:31;;;;;;;;;;;;;;;;;;:33::i;:::-;8701:5;:42;;8663:80;8648:183;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8853:29;:20;:18;:20::i;:::-;:27;:29::i;:::-;8845:5;:37;8837:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8944:7;8918:23;;:33;;;;;;;;;;;;;;;;;;8984:23;9001:5;8984:16;:23::i;:::-;8957:24;:50;;;;;;;;;;;9042:7;9018:39;;;9051:5;9018:39;;;;;;;;;;;;;;;;;;9070:4;9063:11;;8545:534;;;;:::o;16678:396::-;16744:7;16759:26;16788:8;;;;;;;;;;;:27;;;2379:31:23;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2379:31:23;;;2369:42;;;;;;16788:53:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16788:53:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16788:53:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16788:53:65;;;;;;;;;;;;;;;;16759:82;;16848:17;16867:19;16890:18;:16;:18::i;:::-;:29;;;16920:18;16890:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16890:49:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16890:49:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16890:49:65;;;;;;;;;;;;;;;;;;;;;;;;;16847:92;;;;16958:111;17052:9;16958:80;17026:11;16958:63;16993:27;;16958:30;:28;:30::i;:::-;:34;;:63;;;;:::i;:::-;:67;;:80;;;;:::i;:::-;:84;;:111;;;;:::i;:::-;16945:124;;;;;16678:396;:::o;8361:343:22:-;8444:7;8459:16;8481:12;764:9;8516:35;;8569:6;8552:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8552:24:22;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8552:24:22;;;8516:61;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8516:61:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;8499:78:22;;;;;;;;8591:7;8583:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8672:27;8692:3;8697:1;8672:19;:27::i;:::-;8665:34;;;;8361:343;;;:::o;13792:575:65:-;13849:7;13864:31;13898:18;13906:9;;13898:3;:7;;:18;;;;:::i;:::-;13864:52;;957:6;951:3;896:2;936:18;:27;13926:23;:40;13922:441;;;14029:21;14053:47;14098:1;14053:40;752:15;826:16;14053:19;;:40;;;;:::i;:::-;:44;;:47;;;;:::i;:::-;14029:71;;14108:21;14132:62;957:6;951:3;896:2;936:18;:27;14132:42;14150:23;14132:13;:17;;:42;;;;:::i;:::-;:46;;:62;;;;:::i;:::-;14108:86;;14209:38;752:15;14209:13;:17;;:38;;;;:::i;:::-;14202:45;;;;;;;13922:441;14276:5;14268:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14355:1;14348:8;;;13792:575;;:::o;3676:117::-;3727:7;3736;3745;3754;3777:1;3780;3783;3786;3769:19;;;;;;;;;;;;;;;;;;;;3676:117;;;;:::o;12272:682::-;12389:4;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12425:36:65;:23;:27;;:34;;;;;;;;;;;;;;;;;;:36::i;:::-;12418:3;:43;;:124;;;;12493:49;:23;:40;;:47;;;;;;;;;;;;;;;;;;:49::i;:::-;12473:16;:69;;12418:124;12403:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12628:21;12645:3;12628:16;:21::i;:::-;12598:23;:27;;:51;;;;;;;;;;;12698:34;12715:16;12698;:34::i;:::-;12655:23;:40;;:77;;;;;;;;;;;12753:52;12784:20;:18;:20::i;:::-;12753:23;:27;;:30;;;;;;;;;;;;;;;;;;;:52;;;;:::i;:::-;12738:130;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12879:53;12910:3;12915:16;12879:53;;;;;;;;;;;;;;;;;;;;;;;;12945:4;12938:11;;12272:682;;;;:::o;4387:378:22:-;4495:7;4512:16;4534:12;409:8;4569:24;;4611:5;4618:11;4594:36;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4594:36:22;;;4569:62;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4569:62:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;4552:79:22;;;;;;;;4645:7;4637:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4732:27;4752:3;4757:1;4732:19;:27::i;:::-;4717:43;;;;4387:378;;;;:::o;7112:320:65:-;7177:7;7186;7195;7210:42;7255:23;7210:68;;7299:19;:6;:10;;:17;;;;;;;;;;;;;;;;;;:19::i;:::-;7326:44;:6;:24;;:35;;:42;;;;;;;;;;;;;;;;;;:44::i;:::-;7378:43;:6;:24;;:34;;:41;;;;;;;;;;;;;;;;;;:43::i;:::-;7284:143;;;;;;;7112:320;;;:::o;21982:878::-;22056:7;22065;22074;22083;22100:25;22128:23;:21;:23::i;:::-;22100:51;;22157:32;22192:30;:28;:30::i;:::-;22157:65;;22228:45;;:::i;:::-;22276:47;22298:24;22276:21;:47::i;:::-;22228:95;;22344:89;:77;22403:17;22344:49;22365:27;;22344:20;:49::i;:::-;:58;;:77;;;;:::i;:::-;:87;:89::i;:::-;22441:79;:67;22490:17;22441:39;22462:17;22441:20;:39::i;:::-;:48;;:67;;;;:::i;:::-;:77;:79::i;:::-;22528:156;:135;22645:17;22528:98;22602:23;22528:98;;;;;;;;;;;;;;;;;:55;22558:24;22528:29;:55::i;:::-;:73;;:98;;;;:::i;:::-;:116;;:135;;;;:::i;:::-;:154;:156::i;:::-;22692:157;:136;22810:17;22692:99;22766:24;22692:99;;;;;;;;;;;;;;;;;:55;22722:24;22692:29;:55::i;:::-;:73;;:99;;;;:::i;:::-;:117;;:136;;;;:::i;:::-;:155;:157::i;:::-;22329:526;;;;;;;;;;;21982:878;;;;:::o;7053:288:22:-;7115:7;7130:16;7152:12;635:8;7187:22;;7227:6;7210:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7210:24:22;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7210:24:22;;;7187:48;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7187:48:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;7170:65:22;;;;;;;;7249:7;7241:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7309:27;7329:3;7334:1;7309:19;:27::i;:::-;7302:34;;;;7053:288;;;:::o;1684:137:154:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;9896:112:22:-;9954:7;9976:27;9990:12;9976:13;:27::i;:::-;9969:34;;9896:112;:::o;247:194:96:-;351:7;375:61;:52;397:29;375:21;:52::i;:::-;:59;:61::i;:::-;368:68;;247:194;;;:::o;2531:28:65:-;;;;:::o;2540:25:23:-;;;;;;;;;;;;;:::o;5340:1214:65:-;233:11:12;;;;;;;;;;;232:12;224:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;297:4;283:11;;:18;;;;;;;;;;;;;;;;;;5882:30:65;5901:10;5882:18;:30::i;:::-;5918:28;5930:15;5918:11;:28::i;:::-;5952:87;5983:20;6005:33;5952:30;:87::i;:::-;;6045:165;6083:20;6111:43;6162:42;6045:30;:165::i;:::-;;6216:54;6244:25;6216:27;:54::i;:::-;;6276:60;6307:28;6276:30;:60::i;:::-;;6342:52;6369:24;6342:26;:52::i;:::-;;6400:76;6424:24;6450:25;6400:23;:76::i;:::-;;6482:46;6503:24;6482:20;:46::i;:::-;;6546:3;6534:9;:15;;;;5340:1214;;;;;;;;;;;;:::o;9252:122::-;9314:7;9336:33;:24;:31;;;;;;;;;;;;;;;;;;:33::i;:::-;9329:40;;9252:122;:::o;11159:863::-;11325:4;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11359:36:65;:23;:27;;:34;;;;;;;;;;;;;;;;;;:36::i;:::-;11352:3;:43;;:144;;;;11436:60;:23;:41;;:51;;:58;;;;;;;;;;;;;;;;;;:60::i;:::-;11407:25;:89;;11352:144;:247;;;;11538:61;:23;:41;;:52;;:59;;;;;;;;;;;;;;;;;;:61::i;:::-;11508:26;:91;;11352:247;11337:311;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11680:219;;;;;;;;11715:149;;;;;;;;11759:44;11776:26;11759:16;:44::i;:::-;11715:149;;;;11813:43;11830:25;11813:16;:43::i;:::-;11715:149;;;11680:219;;;;11872:21;11889:3;11872:16;:21::i;:::-;11680:219;;;11654:23;:245;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11910:90;11941:3;11946:26;11974:25;11910:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12013:4;12006:11;;11159:863;;;;;:::o;530:113:96:-;591:7;613:25;;606:32;;530:113;:::o;6606:329:22:-;6682:7;6697:16;6719:12;583:8;6754:35;;6807:6;6790:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6790:24:22;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6790:24:22;;;6754:61;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6754:61:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;6737:78:22;;;;;;;;6829:7;6821:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6903:27;6923:3;6928:1;6903:19;:27::i;:::-;6896:34;;;;6606:329;;;:::o;899:77:154:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;445:81:96:-;495:26;:24;:26::i;:::-;445:81::o;9541:430:65:-;9619:4;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9648:33:65;:24;:31;;;;;;;;;;;;;;;;;;:33::i;:::-;9639:5;:42;;9631:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9752:29;:20;:18;:20::i;:::-;:27;:29::i;:::-;9744:5;:37;9729:119;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9881:23;9898:5;9881:16;:23::i;:::-;9854:24;:50;;;;;;;;;;;9915:34;9943:5;9915:34;;;;;;;;;;;;;;;;;;9962:4;9955:11;;9541:430;;;:::o;10398:293::-;10479:4;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10508:27:65;;10499:5;:36;;10491:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10616:5;10586:27;:35;;;;10632:37;10663:5;10632:37;;;;;;;;;;;;;;;;;;10682:4;10675:11;;10398:293;;;:::o;8167:120::-;8228:7;8250:32;:23;:30;;;;;;;;;;;;;;;;;;:32::i;:::-;8243:39;;8167:120;:::o;2803:109:22:-;2850:7;2872:35;2894:12;2872:21;:35::i;:::-;2865:42;;2803:109;:::o;20945:777:65:-;20992:4;21066:51;;:::i;:::-;21120:40;21141:18;21149:9;;21141:3;:7;;:18;;;;:::i;:::-;21120:20;:40::i;:::-;21066:94;;21166:29;;:::i;:::-;21198:39;21219:17;21198:20;:39::i;:::-;21166:71;;21243:29;;:::i;:::-;21275:23;21296:1;21275:20;:23::i;:::-;21243:55;;21304:41;;:::i;:::-;21426:30;21454:1;21426:23;:27;;:30;;;;:::i;:::-;21422:169;;;21482:20;:18;:20::i;:::-;21466:36;;21422:169;;;21539:45;21550:33;21581:1;21550:23;:30;;:33;;;;:::i;:::-;21539:1;:10;;:45;;;;:::i;:::-;21523:61;;21422:169;21596:33;;:::i;:::-;21632:48;21649:12;:10;:12::i;:::-;:28;;;:30;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;21649:30:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;21649:30:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;21649:30:65;;;;;;;;;;;;;;;;21632:16;:48::i;:::-;21596:84;;21693:24;21703:13;21693:5;:9;;:24;;;;:::i;:::-;21686:31;;;;;;;20945:777;:::o;5444:321:22:-;5517:7;5532:16;5554:12;467:8;5589:28;;5635:11;5618:29;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5618:29:22;;;5589:59;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5589:59:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;5572:76:22;;;;;;;;5662:7;5654:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5733:27;5753:3;5758:1;5733:19;:27::i;:::-;5726:34;;;;5444:321;;;:::o;18455:316:65:-;18509:7;18524:18;18545:70;18578:12;:10;:12::i;:::-;:34;;;:36;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18578:36:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18578:36:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18578:36:65;;;;;;;;;;;;;;;;18545:14;:12;:14::i;:::-;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18545:28:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18545:28:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18545:28:65;;;;;;;;;;;;;;;;:32;;:70;;;;:::i;:::-;18524:91;;18621:18;18642:13;:11;:13::i;:::-;:27;;;:29;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18642:29:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18642:29:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18642:29:65;;;;;;;;;;;;;;;;18621:50;;18684:82;:73;18724:32;18745:10;18724:20;:32::i;:::-;18684;18705:10;18684:20;:32::i;:::-;:39;;:73;;;;:::i;:::-;:80;:82::i;:::-;18677:89;;;;18455:316;:::o;3089:230:23:-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3193:1:23;3166:29;;:15;:29;;;;3158:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:15;3238:8;;:37;;;;;;;;;;;;;;;;;;3298:15;3286:28;;;;;;;;;;;;3089:230;:::o;10104:122:65:-;10166:7;10188:33;:24;:31;;;;;;;;;;;;;;;;;;:33::i;:::-;10181:40;;10104:122;:::o;7618:402::-;7695:4;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7731:32:65;:23;:30;;;;;;;;;;;;;;;;;;:32::i;:::-;7722:5;:41;;:82;;;;;7775:29;:20;:18;:20::i;:::-;:27;:29::i;:::-;7767:5;:37;7722:82;7707:192;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7931:23;7948:5;7931:16;:23::i;:::-;7905;:49;;;;;;;;;;;7965:33;7992:5;7965:33;;;;;;;;;;;;;;;;;;8011:4;8004:11;;7618:402;;;:::o;13187:413::-;13270:4;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13282:34:65;;:::i;:::-;13319:35;13336:17;13319:16;:35::i;:::-;13282:72;;13375:39;13386:23;:27;;13375:39;;;;;;;;;;;;;;;;;:6;:10;;:39;;;;:::i;:::-;13360:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13522:6;13489:23;:30;;:39;;;;;;;;;;;13539;13560:17;13539:39;;;;;;;;;;;;;;;;;;13591:4;13584:11;;;13187:413;;;:::o;647:109:96:-;746:5;718:25;:33;;;;647:109;:::o;2125:266:22:-;2170:7;2185:16;2207:12;518:8;2242:21;;2264:18;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2264:18:22;;;2242:41;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2242:41:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2225:58:22;;;;;;;;2297:7;2289:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2359:27;2379:3;2384:1;2359:19;:27::i;:::-;2352:34;;;;2125:266;:::o;2901:42:65:-;;;;:::o;9617:147:22:-;9682:7;9704:55;9757:1;9704:48;9750:1;9704:41;9743:1;9704:34;9726:11;9704:21;:34::i;:::-;:38;;:41;;;;:::i;:::-;:45;;:48;;;;:::i;:::-;:52;;:55;;;;:::i;:::-;9697:62;;9617:147;;;:::o;1244:763::-;1438:7;1447;1486:1;1470:12;:17;;:38;;;;;1507:1;1491:12;:17;;1470:38;1462:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1540:23;1569:25;1600:12;1618:16;295:8;1657:23;;1705:10;1717:12;1731:10;1743:12;1757:8;1767:9;1688:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1688:89:22;;;1657:126;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1657:126:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1640:143:22;;;;;;;;1797:7;1789:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1872:27;1892:3;1897:1;1872:19;:27::i;:::-;1854:45;;1925:28;1945:3;1950:2;1925:19;:28::i;:::-;1905:48;;1967:15;1984:17;1959:43;;;;;;;;1244:763;;;;;;;;;:::o;1970:107:154:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;7632:322:22:-;7703:7;7718:16;7740:12;698:9;7775:33;;7826:11;7809:29;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7809:29:22;;;7775:64;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7775:64:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;7758:81:22;;;;;;;;7853:7;7845:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7922:27;7942:3;7947:1;7922:19;:27::i;:::-;7915:34;;;;7632:322;;;:::o;17258:661:65:-;17321:7;17336:26;17365:23;:21;:23::i;:::-;17336:52;;17394:38;17435:35;:33;:35::i;:::-;17394:76;;17476:32;17511:54;17534:30;17511:18;:22;;:54;;;;:::i;:::-;17476:89;;17685:192;:173;17760:92;17827:24;17760:92;;;;;;;;;;;;;;;;;:57;17793:23;17760:57;;;;;;;;;;;;;;;;;:23;17781:1;17760:20;:23::i;:::-;:32;;:57;;;;:::i;:::-;:66;;:92;;;;:::i;:::-;17685:53;17713:24;17685:27;:53::i;:::-;:67;;:173;;;;:::i;:::-;:190;:192::i;:::-;17658:219;;17890:24;17883:31;;;;;17258:661;:::o;14638:1503::-;14738:27;;:::i;:::-;14775:20;14798:26;:24;:26::i;:::-;14775:49;;14830:19;14852:14;:12;:14::i;:::-;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14852:28:65;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14852:28:65;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14852:28:65;;;;;;;;;;;;;;;;14830:50;;14886:23;14912:62;14932:41;14948:24;14932:11;:15;;:41;;;;:::i;:::-;826:16;14912:19;;:62;;;;:::i;:::-;14886:88;;14980:29;15012:33;15032:12;826:16;15012:19;;:33;;;;:::i;:::-;14980:65;;15051:50;;:::i;:::-;15104:103;15163:43;15184:21;15163:20;:43::i;:::-;15104:44;15132:15;15104:27;:44::i;:::-;:58;;:103;;;;:::i;:::-;15051:156;;15217:47;15243:20;:18;:20::i;:::-;15217:22;:25;;:47;;;;:::i;:::-;15213:924;;;15274:33;;:::i;:::-;15310:134;15391:23;:41;;:52;;15310:134;;;;;;;;;;;;;;;;;:62;15351:20;:18;:20::i;:::-;15310:22;:40;;:62;;;;:::i;:::-;:80;;:134;;;;:::i;:::-;15274:170;;15452:38;;:::i;:::-;15493:31;15518:5;15493:20;:18;:20::i;:::-;:24;;:31;;;;:::i;:::-;15452:72;;15536:42;15550:23;:27;;15536:42;;;;;;;;;;;;;;;;;:10;:13;;:42;;;;:::i;:::-;15532:143;;;15597:10;15590:17;;;;;;;;;;;15532:143;15639:23;:27;;15632:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;15213:924;15691:47;15717:20;:18;:20::i;:::-;15691:22;:25;;:47;;;;:::i;:::-;15687:450;;;15748:33;;:::i;:::-;15784:142;15874:23;:41;;:51;;15784:142;;;;;;;;;;;;;;;;;:71;15832:22;15784:29;:27;:29::i;:::-;:47;;:71;;;;:::i;:::-;:89;;:142;;;;:::i;:::-;15748:178;;15938:30;15947:20;:18;:20::i;:::-;15938:5;:8;;:30;;;;:::i;:::-;15934:149;;;15987:36;16017:5;15987:20;:18;:20::i;:::-;:29;;:36;;;;:::i;:::-;15980:43;;;;;;;;;;15934:149;16055:19;16072:1;16055:16;:19::i;:::-;16048:26;;;;;;;;;;15687:450;16110:20;:18;:20::i;:::-;16103:27;;;;;;;14638:1503;;;;:::o;1674:92:7:-;1732:7;1754:1;:7;;;1747:14;;1674:92;;;:::o;8864:150:22:-;8948:7;8978:30;8998:2;9002:5;8978:19;:30::i;:::-;8970:39;;8963:46;;8864:150;;;;:::o;3617:135:23:-;3663:9;3697:8;;;;;;;;;;;:27;;;1386:28;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1386:28:23;;;1376:39;;;;;;3697:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3697:49:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3697:49:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3697:49:23;;;;;;;;;;;;;;;;3680:67;;3617:135;:::o;2547:203:7:-;2599:15;;:::i;:::-;2635:13;:11;:13::i;:::-;2630:1;:18;;2622:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2720:25;;;;;;;;996;2729:1;:15;2720:25;;;2713:32;;2547:203;;;:::o;6206:1636::-;6285:15;;:::i;:::-;6323:1;6312;:7;;;:12;:28;;;;6339:1;6328;:7;;;:12;6312:28;6308:52;;;6349:11;;;;;;;;6358:1;6349:11;;;6342:18;;;;6308:52;996:25;6370:1;:7;;;:22;6366:36;;;6401:1;6394:8;;;;6366:36;996:25;6412:1;:7;;;:22;6408:36;;;6443:1;6436:8;;;;6408:36;6533:10;996:25;6546:10;6554:1;6546:7;:10::i;:::-;:16;;;:30;;;;;;6533:43;;6582:10;6595:13;6606:1;6595:10;:13::i;:::-;:19;;;6582:32;;6620:10;996:25;6633:10;6641:1;6633:7;:10::i;:::-;:16;;;:30;;;;;;6620:43;;6669:10;6682:13;6693:1;6682:10;:13::i;:::-;:19;;;6669:32;;6785:12;6805:2;6800;:7;6785:22;;6823:1;6817:2;:7;6813:63;;6847:2;6841;6834:4;:9;;;;;;:15;6826:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6813:63;6975:18;996:25;6996:4;:18;6975:39;;7032:1;7024:4;:9;7020:91;;996:25;7056:4;7043:10;:17;;;;;;:32;7035:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7020:91;7124:10;7117:17;;7141:12;7161:2;7156;:7;7141:22;;7179:1;7173:2;:7;7169:63;;7203:2;7197;7190:4;:9;;;;;;:15;7182:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7169:63;7239:12;7259:2;7254;:7;7239:22;;7277:1;7271:2;:7;7267:63;;7301:2;7295;7288:4;:9;;;;;;:15;7280:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7267:63;7347:14;:12;:14::i;:::-;7342:2;:19;;;;;;7337:24;;7377:14;:12;:14::i;:::-;7372:2;:19;;;;;;7367:24;;7397:12;7417:2;7412;:7;7397:22;;7435:1;7429:2;:7;7425:63;;7459:2;7453;7446:4;:9;;;;;;:15;7438:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7425:63;7572:22;;:::i;:::-;7597:14;;;;;;;;7606:4;7597:14;;;7572:39;;7626:27;7630:6;7638:14;;;;;;;;7647:4;7638:14;;;7626:3;:27::i;:::-;7617:36;;7695:27;7699:6;7707:14;;;;;;;;7716:4;7707:14;;;7695:3;:27::i;:::-;7686:36;;7764:27;7768:6;7776:14;;;;;;;;7785:4;7776:14;;;7764:3;:27::i;:::-;7755:36;;7831:6;7824:13;;;;;;;;;;;;6206:1636;;;;;:::o;2909:109::-;2970:7;996:25;2992:1;:7;;;:21;;;;;;2985:28;;2909:109;;;:::o;3124:379:22:-;3227:7;3335:19;3371:9;3357:11;:23;;;;;;3335:45;;3417:1;3404:9;3390:11;:23;;;;;;:28;3386:113;;;3435:11;3428:18;;;;;3386:113;3474:18;3490:1;3474:11;:15;;:18;;;;:::i;:::-;3467:25;;;3124:379;;;;;:::o;1180:97:7:-;1221:15;;:::i;:::-;1251:21;;;;;;;;996:25;1251:21;;;1244:28;;1180:97;:::o;1502:94::-;1550:15;;:::i;:::-;1580:11;;;;;;;;1589:1;1580:11;;;1573:18;;1502:94;;;:::o;4924:156:23:-;4975:14;5019:8;;;;;;;;;;;:27;;;2287:33;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2287:33:23;;;2277:44;;;;;;5019:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5019:55:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5019:55:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5019:55:23;;;;;;;;;;;;;;;;4997:78;;4924:156;:::o;2159:459:153:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;3073:130::-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3150:46;;3073:130;;;;:::o;9174:255:22:-;9258:7;9294:13;9304:2;9294:5;:9;;:13;;;;:::i;:::-;9281:2;:9;:26;;9273:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9338:9;9400:2;9393:5;9389:14;9385:2;9381:23;9375:30;9370:35;;9423:1;9416:8;;;9174:255;;;;:::o;1274:134:153:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;9799:114:7:-;9872:4;9901:1;:7;;;9891:1;:7;;;:17;9884:24;;9799:114;;;;:::o;2178:225:154:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;788:96:150:-;833:15;867:10;860:17;;788:96;:::o;18916:1475:65:-;250:12:8;:10;:12::i;:::-;:21;;;280:4;250:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;250:36:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;250:36:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;250:36:8;;;;;;;;;;;;;;;;249:37;241:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18985:46:65;;:::i;:::-;19034:41;19051:23;:21;:23::i;:::-;19034:16;:41::i;:::-;18985:90;;19085:47;19107:24;19085:47;;;;;;;;;;;;;;;;;:18;:21;;:47;;;;:::i;:::-;19081:1230;;;19142:51;;:::i;:::-;19196:69;19233:24;19196:69;;;;;;;;;;;;;;;;;:18;:27;;:69;;;;:::i;:::-;19142:123;;19273:50;;:::i;:::-;19326:90;19368:23;:40;;19326:90;;;;;;;;;;;;;;;;;:23;:32;;:90;;;;:::i;:::-;19273:143;;19428:58;19455:23;:30;;19428:58;;;;;;;;;;;;;;;;;:22;:26;;:58;;;;:::i;:::-;19424:280;;;19531:23;19552:1;19531:20;:23::i;:::-;19498;:30;;:56;;;;;;;;;;;19424:280;;;19612:83;19663:22;19612:23;:30;;:39;;;;;;;;;;;;;;;;;;;:83;;;;:::i;:::-;19579:23;:30;;:116;;;;;;;;;;;19424:280;19081:1230;;;;;19720:47;19742:24;19720:47;;;;;;;;;;;;;;;;;:18;:21;;:47;;;;:::i;:::-;19716:595;;;19777:51;;:::i;:::-;19831:69;19874:18;19831:24;:33;;;;;;;;;;;;;;;;;;;:69;;;;:::i;:::-;19777:123;;19908:50;;:::i;:::-;19961:90;20003:23;:40;;19961:90;;;;;;;;;;;;;;;;;:23;:32;;:90;;;;:::i;:::-;19908:143;;20092:58;20127:22;20092:23;:30;;:34;;;;;;;;;;;;;;;;;;;:58;;;;:::i;:::-;20059:23;:30;;:91;;;;;;;;;;;20162:62;20196:23;:27;;20162:62;;;;;;;;;;;;;;;;;:23;:30;;:33;;;;;;;;;;;;;;;;;;;:62;;;;:::i;:::-;20158:147;;;20269:23;:27;;20236:23;:30;;:60;;;;;;;;;;;20158:147;19716:595;;;19081:1230;20321:65;20346:39;:23;:30;;:37;;;;;;;;;;;;;;;;;;:39::i;:::-;20321:65;;;;;;;;;;;;;;;;;;331:1:8;18916:1475:65:o;9648:116:7:-;9722:4;9752:1;:7;;;9741:1;:7;;;:18;;9734:25;;9648:116;;;;:::o;9180:283::-;9257:15;;:::i;:::-;9299:1;9288;:7;;;:12;;9280:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9328:9;996:25;9340:1;:7;;;:21;9328:33;;9394:1;:7;;;996:25;9375:1;:15;;;;;;:26;9367:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9437:21;;;;;;;;9450:1;:7;;;9446:1;:11;;;;;;9437:21;;;9430:28;;;9180:283;;;;:::o;5341:209::-;5420:15;;:::i;:::-;5462:1;:7;;;5451:1;:7;;;:18;;5443:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5518:27;;;;;;;;5537:1;:7;;;5527:1;:7;;;:17;5518:27;;;5511:34;;5341:209;;;;:::o;4789:131:23:-;4834:8;4866;;;;;;;;;;;:27;;;2120;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2120:27:23;;;2110:38;;;;;;4866:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4866:48:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4866:48:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4866:48:23;;;;;;;;;;;;;;;;4850:65;;4789:131;:::o;9949:116:7:-;10023:4;10053:1;:7;;;10042:1;:7;;;:18;;10035:25;;9949:116;;;;:::o;4227:132:23:-;4274:6;4302:8;;;;;;;;;;;:27;;;1752:29;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1752:29:23;;;1742:40;;;;;;4302:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4302:51:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4302:51:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4302:51:23;;;;;;;;;;;;;;;;4288:66;;4227:132;:::o;9498:114:7:-;9571:4;9600:1;:7;;;9590:1;:7;;;:17;9583:24;;9498:114;;;;:::o;5058:207::-;5132:15;;:::i;:::-;5155:9;5177:1;:7;;;5167:1;:7;;;:17;5155:29;;5203:1;:7;;;5198:1;:12;;5190:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5249:11;;;;;;;;5258:1;5249:11;;;5242:18;;;5058:207;;;;:::o;2163:127::-;2209:7;2231:54;2224:61;;2163:127;:::o;4068:159::-;4127:15;;:::i;:::-;4157:47;;;;;;;;996:25;;4167:1;:7;;;:21;;;;;;4166:37;4157:47;;;4150:54;;4068:159;;;:::o;4514:172::-;4576:15;;:::i;:::-;4606:57;;;;;;;;996:25;;4626:1;:7;;;:21;;;;;;4625:37;4615:1;:7;;;:47;4606:57;;;4599:64;;4514:172;;;:::o;1905:87::-;1952:7;1974:13;1967:20;;1905:87;:::o;3718:338:153:-;3804:7;3901:1;3897;:5;3904:12;3889:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3889:28:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;3927:17;;4048:1;4041:8;;;3718:338;;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;4092:131:23:-;4137:8;4169;;;;;;;;;;;:27;;;1668;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1668:27:23;;;1658:38;;;;;;4169:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4169:48:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4169:48:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4169:48:23;;;;;;;;;;;;;;;;4153:65;;4092:131;:::o;150:608:96:-;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"../EpochRewards.sol\";\n\n/**\n * @title A wrapper around EpochRewards that exposes internal functions for testing.\n */\ncontract EpochRewardsTest is EpochRewards(true) {\n  uint256 private numValidatorsInCurrentSet;\n  function getRewardsMultiplier(uint256 targetGoldTotalSupplyIncrease)\n    external\n    view\n    returns (uint256)\n  {\n    return _getRewardsMultiplier(targetGoldTotalSupplyIncrease).unwrap();\n  }\n\n  function updateTargetVotingYield() external {\n    _updateTargetVotingYield();\n  }\n\n  function numberValidatorsInCurrentSet() public view returns (uint256) {\n    return numValidatorsInCurrentSet;\n  }\n\n  function setNumberValidatorsInCurrentSet(uint256 value) external {\n    numValidatorsInCurrentSet = value;\n  }\n}\n",
  "sourcePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/test/EpochRewardsTest.sol",
  "ast": {
    "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/test/EpochRewardsTest.sol",
    "exportedSymbols": {
      "EpochRewardsTest": [
        31195
      ]
    },
    "id": 31196,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 31149,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:96"
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/EpochRewards.sol",
        "file": "../EpochRewards.sol",
        "id": 31150,
        "nodeType": "ImportDirective",
        "scope": 31196,
        "sourceUnit": 19127,
        "src": "26:29:96",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "74727565",
                "id": 31152,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "bool",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "192:4:96",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "value": "true"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 31151,
              "name": "EpochRewards",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19126,
              "src": "179:12:96",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EpochRewards_$19126",
                "typeString": "contract EpochRewards"
              }
            },
            "id": 31153,
            "nodeType": "InheritanceSpecifier",
            "src": "179:18:96"
          }
        ],
        "contractDependencies": [
          2757,
          3589,
          4661,
          8166,
          8572,
          9340,
          19126,
          43492,
          43947
        ],
        "contractKind": "contract",
        "documentation": "@title A wrapper around EpochRewards that exposes internal functions for testing.",
        "fullyImplemented": true,
        "id": 31195,
        "linearizedBaseContracts": [
          31195,
          19126,
          2757,
          3589,
          8572,
          8166,
          4661,
          43947,
          43492,
          9340
        ],
        "name": "EpochRewardsTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 31155,
            "name": "numValidatorsInCurrentSet",
            "nodeType": "VariableDeclaration",
            "scope": 31195,
            "src": "202:41:96",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31154,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "202:7:96",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 31168,
              "nodeType": "Block",
              "src": "362:79:96",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 31163,
                            "name": "targetGoldTotalSupplyIncrease",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31157,
                            "src": "397:29:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 31162,
                          "name": "_getRewardsMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18677,
                          "src": "375:21:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (uint256) view returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 31164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "375:52:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 31165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unwrap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3012,
                      "src": "375:59:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                      }
                    },
                    "id": 31166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "375:61:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31161,
                  "id": 31167,
                  "nodeType": "Return",
                  "src": "368:68:96"
                }
              ]
            },
            "documentation": null,
            "id": 31169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardsMultiplier",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31157,
                  "name": "targetGoldTotalSupplyIncrease",
                  "nodeType": "VariableDeclaration",
                  "scope": 31169,
                  "src": "277:37:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "277:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "276:39:96"
            },
            "returnParameters": {
              "id": 31161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31160,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 31169,
                  "src": "351:7:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "350:9:96"
            },
            "scope": 31195,
            "src": "247:194:96",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 31175,
              "nodeType": "Block",
              "src": "489:37:96",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 31172,
                      "name": "_updateTargetVotingYield",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18955,
                      "src": "495:24:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 31173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "495:26:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31174,
                  "nodeType": "ExpressionStatement",
                  "src": "495:26:96"
                }
              ]
            },
            "documentation": null,
            "id": 31176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTargetVotingYield",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "477:2:96"
            },
            "returnParameters": {
              "id": 31171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "489:0:96"
            },
            "scope": 31195,
            "src": "445:81:96",
            "stateMutability": "nonpayable",
            "superFunction": 18966,
            "visibility": "external"
          },
          {
            "body": {
              "id": 31183,
              "nodeType": "Block",
              "src": "600:43:96",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31181,
                    "name": "numValidatorsInCurrentSet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 31155,
                    "src": "613:25:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31180,
                  "id": 31182,
                  "nodeType": "Return",
                  "src": "606:32:96"
                }
              ]
            },
            "documentation": null,
            "id": 31184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberValidatorsInCurrentSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "567:2:96"
            },
            "returnParameters": {
              "id": 31180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31179,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 31184,
                  "src": "591:7:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "590:9:96"
            },
            "scope": 31195,
            "src": "530:113:96",
            "stateMutability": "view",
            "superFunction": 7879,
            "visibility": "public"
          },
          {
            "body": {
              "id": 31193,
              "nodeType": "Block",
              "src": "712:44:96",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 31189,
                      "name": "numValidatorsInCurrentSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31155,
                      "src": "718:25:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 31190,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31186,
                      "src": "746:5:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "718:33:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31192,
                  "nodeType": "ExpressionStatement",
                  "src": "718:33:96"
                }
              ]
            },
            "documentation": null,
            "id": 31194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNumberValidatorsInCurrentSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31186,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 31194,
                  "src": "688:13:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "687:15:96"
            },
            "returnParameters": {
              "id": 31188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "712:0:96"
            },
            "scope": 31195,
            "src": "647:109:96",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 31196,
        "src": "150:608:96"
      }
    ],
    "src": "0:759:96"
  },
  "legacyAST": {
    "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/test/EpochRewardsTest.sol",
    "exportedSymbols": {
      "EpochRewardsTest": [
        31195
      ]
    },
    "id": 31196,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 31149,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:96"
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/EpochRewards.sol",
        "file": "../EpochRewards.sol",
        "id": 31150,
        "nodeType": "ImportDirective",
        "scope": 31196,
        "sourceUnit": 19127,
        "src": "26:29:96",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "74727565",
                "id": 31152,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "bool",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "192:4:96",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "value": "true"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 31151,
              "name": "EpochRewards",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 19126,
              "src": "179:12:96",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_EpochRewards_$19126",
                "typeString": "contract EpochRewards"
              }
            },
            "id": 31153,
            "nodeType": "InheritanceSpecifier",
            "src": "179:18:96"
          }
        ],
        "contractDependencies": [
          2757,
          3589,
          4661,
          8166,
          8572,
          9340,
          19126,
          43492,
          43947
        ],
        "contractKind": "contract",
        "documentation": "@title A wrapper around EpochRewards that exposes internal functions for testing.",
        "fullyImplemented": true,
        "id": 31195,
        "linearizedBaseContracts": [
          31195,
          19126,
          2757,
          3589,
          8572,
          8166,
          4661,
          43947,
          43492,
          9340
        ],
        "name": "EpochRewardsTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 31155,
            "name": "numValidatorsInCurrentSet",
            "nodeType": "VariableDeclaration",
            "scope": 31195,
            "src": "202:41:96",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 31154,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "202:7:96",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 31168,
              "nodeType": "Block",
              "src": "362:79:96",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 31163,
                            "name": "targetGoldTotalSupplyIncrease",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 31157,
                            "src": "397:29:96",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 31162,
                          "name": "_getRewardsMultiplier",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 18677,
                          "src": "375:21:96",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (uint256) view returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 31164,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "375:52:96",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 31165,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unwrap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3012,
                      "src": "375:59:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                      }
                    },
                    "id": 31166,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "375:61:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31161,
                  "id": 31167,
                  "nodeType": "Return",
                  "src": "368:68:96"
                }
              ]
            },
            "documentation": null,
            "id": 31169,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardsMultiplier",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31158,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31157,
                  "name": "targetGoldTotalSupplyIncrease",
                  "nodeType": "VariableDeclaration",
                  "scope": 31169,
                  "src": "277:37:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31156,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "277:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "276:39:96"
            },
            "returnParameters": {
              "id": 31161,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31160,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 31169,
                  "src": "351:7:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31159,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "351:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "350:9:96"
            },
            "scope": 31195,
            "src": "247:194:96",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 31175,
              "nodeType": "Block",
              "src": "489:37:96",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 31172,
                      "name": "_updateTargetVotingYield",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 18955,
                      "src": "495:24:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 31173,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "495:26:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 31174,
                  "nodeType": "ExpressionStatement",
                  "src": "495:26:96"
                }
              ]
            },
            "documentation": null,
            "id": 31176,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "updateTargetVotingYield",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "477:2:96"
            },
            "returnParameters": {
              "id": 31171,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "489:0:96"
            },
            "scope": 31195,
            "src": "445:81:96",
            "stateMutability": "nonpayable",
            "superFunction": 18966,
            "visibility": "external"
          },
          {
            "body": {
              "id": 31183,
              "nodeType": "Block",
              "src": "600:43:96",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31181,
                    "name": "numValidatorsInCurrentSet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 31155,
                    "src": "613:25:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 31180,
                  "id": 31182,
                  "nodeType": "Return",
                  "src": "606:32:96"
                }
              ]
            },
            "documentation": null,
            "id": 31184,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "numberValidatorsInCurrentSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "567:2:96"
            },
            "returnParameters": {
              "id": 31180,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31179,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 31184,
                  "src": "591:7:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31178,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "591:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "590:9:96"
            },
            "scope": 31195,
            "src": "530:113:96",
            "stateMutability": "view",
            "superFunction": 7879,
            "visibility": "public"
          },
          {
            "body": {
              "id": 31193,
              "nodeType": "Block",
              "src": "712:44:96",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 31191,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 31189,
                      "name": "numValidatorsInCurrentSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31155,
                      "src": "718:25:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 31190,
                      "name": "value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31186,
                      "src": "746:5:96",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "718:33:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 31192,
                  "nodeType": "ExpressionStatement",
                  "src": "718:33:96"
                }
              ]
            },
            "documentation": null,
            "id": 31194,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setNumberValidatorsInCurrentSet",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 31187,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31186,
                  "name": "value",
                  "nodeType": "VariableDeclaration",
                  "scope": 31194,
                  "src": "688:13:96",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 31185,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "688:7:96",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "687:15:96"
            },
            "returnParameters": {
              "id": 31188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "712:0:96"
            },
            "scope": 31195,
            "src": "647:109:96",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 31196,
        "src": "150:608:96"
      }
    ],
    "src": "0:759:96"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2022-05-06T03:53:12.968Z",
  "devdoc": {
    "methods": {
      "calculateTargetEpochRewards()": {
        "return": "The per validator epoch reward, the total rewards to voters, the total community reward, and the total carbon offsetting partner reward."
      },
      "checkProofOfPossession(address,bytes,bytes)": {
        "params": {
          "blsKey": "The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.",
          "blsPop": "The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.",
          "sender": "The address signed by the BLS key to generate the proof of possession."
        },
        "return": "True upon success."
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "params": {
          "_decimals": "precision",
          "aDenominator": "Denominator of first fraction",
          "aNumerator": "Numerator of first fraction",
          "bDenominator": "Denominator of exponentiated fraction",
          "bNumerator": "Numerator of exponentiated fraction",
          "exponent": "exponent to raise b to"
        },
        "return": "numerator/denominator of the computed quantity (not reduced)."
      },
      "getBlockNumberFromHeader(bytes)": {
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Block number."
      },
      "getCarbonOffsettingFraction()": {
        "return": "The percentage of total reward which goes to the carbon offsetting partner."
      },
      "getCommunityRewardFraction()": {
        "return": "The percentage of total reward which goes to the community funds."
      },
      "getEpochNumber()": {
        "return": "Current epoch number."
      },
      "getEpochNumberOfBlock(uint256)": {
        "params": {
          "blockNumber": "Block number where epoch number is calculated."
        },
        "return": "Epoch number."
      },
      "getEpochSize()": {
        "return": "The current epoch size in blocks."
      },
      "getParentSealBitmap(uint256)": {
        "params": {
          "blockNumber": "Block number to retrieve. Must be within 4 epochs of the current number."
        },
        "return": "Bitmap parent seal with set bits at indices corresponding to signing validators."
      },
      "getRewardsMultiplier()": {
        "return": "The rewards multiplier based on the current and target Gold supplies."
      },
      "getRewardsMultiplierParameters()": {
        "return": "The max multiplier and under/over spend adjustment factors."
      },
      "getTargetGoldTotalSupply()": {
        "return": "The target Gold supply according to the epoch rewards target schedule."
      },
      "getTargetTotalEpochPaymentsInGold()": {
        "return": "The total target epoch payments to validators, converted to Gold."
      },
      "getTargetVoterRewards()": {
        "return": "the total target epoch rewards for voters."
      },
      "getTargetVotingGoldFraction()": {
        "return": "The percentage of floating Gold voting to target."
      },
      "getTargetVotingYieldParameters()": {
        "return": "The target, max, and adjustment factor for target voting yield."
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Bitmap parent seal with set bits at indices correspoinding to signing validators."
      },
      "getVersionNumber()": {
        "return": "The storage, major, minor, and patch version of the contract."
      },
      "getVotingGoldFraction()": {
        "return": "The fraction of floating Gold being used for voting in validator elections."
      },
      "hashHeader(bytes)": {
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Header hash."
      },
      "initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,uint256)": {
        "details": "Should be called only once.",
        "params": {
          "_carbonOffsettingFraction": "The percentage of rewards going to carbon offsetting partner.",
          "_carbonOffsettingPartner": "The address of the carbon offsetting partner.",
          "_communityRewardFraction": "The percentage of rewards that go the community funds.",
          "_targetValidatorEpochPayment": "The target validator epoch payment.",
          "_targetVotingGoldFraction": "The percentage of floating Gold voting to target.",
          "registryAddress": "The address of the registry contract.",
          "rewardsMultiplierMax": "The max multiplier on target epoch rewards.",
          "rewardsMultiplierOverspendAdjustmentFactor": "Adjusts the multiplier on target epoch  rewards when the protocol is running ahead of the target Gold supply.",
          "rewardsMultiplierUnderspendAdjustmentFactor": "Adjusts the multiplier on target epoch  rewards when the protocol is running behind the target Gold supply.",
          "targetVotingYieldAdjustmentFactor": "The target block reward adjustment factor for voters.",
          "targetVotingYieldInitial": "The initial relative target block reward for voters.",
          "targetVotingYieldMax": "The max relative target block reward for voters."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "minQuorumSize(uint256)": {
        "details": "Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))"
      },
      "minQuorumSizeInCurrentSet()": {
        "return": "Byzantine quorum of validators."
      },
      "numberValidatorsInSet(uint256)": {
        "params": {
          "blockNumber": "Block number to retrieve the validator set from."
        },
        "return": "Size of the validator set."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setCarbonOffsettingFund(address,uint256)": {
        "params": {
          "partner": "The address of the carbon offsetting partner.",
          "value": "The percentage of the total reward to be sent to the carbon offsetting partner."
        },
        "return": "True upon success."
      },
      "setCommunityRewardFraction(uint256)": {
        "params": {
          "value": "The percentage of the total reward to be sent to the community funds."
        },
        "return": "True upon success."
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "setRewardsMultiplierParameters(uint256,uint256,uint256)": {
        "params": {
          "max": "The max multiplier on target epoch rewards.",
          "overspendAdjustmentFactor": "Adjusts the multiplier on target epoch rewards when the  protocol is running ahead of the target Gold supply.",
          "underspendAdjustmentFactor": "Adjusts the multiplier on target epoch rewards when the  protocol is running behind the target Gold supply."
        },
        "return": "True upon success."
      },
      "setTargetValidatorEpochPayment(uint256)": {
        "params": {
          "value": "The value in Celo Dollars."
        },
        "return": "True upon success."
      },
      "setTargetVotingGoldFraction(uint256)": {
        "params": {
          "value": "The percentage of floating Gold voting to target."
        },
        "return": "True upon success."
      },
      "setTargetVotingYield(uint256)": {
        "params": {
          "targetVotingYield": "The relative target block reward for voters."
        },
        "return": "True upon success."
      },
      "setTargetVotingYieldParameters(uint256,uint256)": {
        "params": {
          "adjustmentFactor": "The target block reward adjustment factor for voters.",
          "max": "The max relative target block reward for voters."
        },
        "return": "True upon success."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "params": {
          "index": "Index of requested validator in the validator set."
        },
        "return": "Address of validator at the requested index."
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "params": {
          "blockNumber": "Block number to retrieve the validator set from.",
          "index": "Index of requested validator in the validator set."
        },
        "return": "Address of validator at the requested index."
      }
    },
    "title": "A wrapper around EpochRewards that exposes internal functions for testing."
  },
  "userdoc": {
    "methods": {
      "calculateTargetEpochRewards()": {
        "notice": "Calculates the per validator epoch payment and the total rewards to voters."
      },
      "checkProofOfPossession(address,bytes,bytes)": {
        "notice": "Checks a BLS proof of possession."
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "calculate a * b^x for fractions a, b to `decimals` precision"
      },
      "getBlockNumberFromHeader(bytes)": {
        "notice": "Parses block number out of header."
      },
      "getCarbonOffsettingFraction()": {
        "notice": "Returns the carbon offsetting partner reward fraction."
      },
      "getCommunityRewardFraction()": {
        "notice": "Returns the community reward fraction."
      },
      "getEpochNumber()": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochNumberOfBlock(uint256)": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochSize()": {
        "notice": "Returns the current epoch size in blocks."
      },
      "getParentSealBitmap(uint256)": {
        "notice": "Gets the parent seal bitmap from the header at the given block number."
      },
      "getRewardsMultiplier()": {
        "notice": "Returns the rewards multiplier based on the current and target Gold supplies."
      },
      "getRewardsMultiplierParameters()": {
        "notice": "Returns the rewards multiplier parameters."
      },
      "getTargetGoldTotalSupply()": {
        "notice": "Returns the target Gold supply according to the epoch rewards target schedule."
      },
      "getTargetTotalEpochPaymentsInGold()": {
        "notice": "Returns the total target epoch payments to validators, converted to Gold."
      },
      "getTargetVoterRewards()": {
        "notice": "Returns the total target epoch rewards for voters."
      },
      "getTargetVotingGoldFraction()": {
        "notice": "Returns the target voting Gold fraction."
      },
      "getTargetVotingYieldParameters()": {
        "notice": "Returns the target voting yield parameters."
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "notice": "Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "getVotingGoldFraction()": {
        "notice": "Returns the fraction of floating Gold being used for voting in validator elections."
      },
      "hashHeader(bytes)": {
        "notice": "Computes hash of header."
      },
      "initialize(address,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,uint256,address,uint256)": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "isReserveLow()": {
        "notice": "Determines if the reserve is low enough to demand a diversion from   the community reward. Targets initial critical ratio of 2 with a linear   decline until 25 years have passed where the critical ratio will be 1."
      },
      "minQuorumSize(uint256)": {
        "notice": "Returns the minimum number of required signers for a given block number."
      },
      "minQuorumSizeInCurrentSet()": {
        "notice": "Computes byzantine quorum from current validator set size"
      },
      "numberValidatorsInSet(uint256)": {
        "notice": "Gets the size of the validator set that must sign the given block number."
      },
      "setCarbonOffsettingFund(address,uint256)": {
        "notice": "Sets the carbon offsetting fund."
      },
      "setCommunityRewardFraction(uint256)": {
        "notice": "Sets the community reward percentage"
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "setRewardsMultiplierParameters(uint256,uint256,uint256)": {
        "notice": "Sets the rewards multiplier parameters."
      },
      "setTargetValidatorEpochPayment(uint256)": {
        "notice": "Sets the target per-epoch payment in Celo Dollars for validators."
      },
      "setTargetVotingGoldFraction(uint256)": {
        "notice": "Sets the target voting Gold fraction."
      },
      "setTargetVotingYield(uint256)": {
        "notice": "Sets the target voting yield.  Uses fixed point arithmetic for protection against overflow."
      },
      "setTargetVotingYieldParameters(uint256,uint256)": {
        "notice": "Sets the target voting yield parameters."
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "notice": "Gets a validator address from the current validator set."
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "notice": "Gets a validator address from the validator set at the given block number."
      }
    }
  }
}