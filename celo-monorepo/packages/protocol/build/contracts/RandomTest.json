{
  "contractName": "RandomTest",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "RandomnessBlockRetentionWindowSet",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "blsKey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "blsPop",
          "type": "bytes"
        }
      ],
      "name": "checkProofOfPossession",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "commitments",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "randomness",
          "type": "bytes32"
        }
      ],
      "name": "computeCommitment",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "aNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "aDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exponent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "name": "fractionMulExp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getBlockNumberFromHeader",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getBlockRandomness",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getEpochNumberOfBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getParentSealBitmap",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getVerifiedSealBitmapFromHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "hashHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_randomnessBlockRetentionWindow",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "minQuorumSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minQuorumSizeInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberValidatorsInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "numberValidatorsInSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "random",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "randomnessBlockRetentionWindow",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "randomness",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "newCommitment",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "revealAndCommit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "setRandomnessBlockRetentionWindow",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromCurrentSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "randomness",
          "type": "bytes32"
        }
      ],
      "name": "addTestRandomness",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "cur",
          "type": "uint256"
        }
      ],
      "name": "getTestRandomness",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "randomness",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32",
          "name": "newCommitment",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "proposer",
          "type": "address"
        }
      ],
      "name": "testRevealAndCommit",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"RandomnessBlockRetentionWindowSet\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"randomness\",\"type\":\"bytes32\"}],\"name\":\"addTestRandomness\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"blsKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPop\",\"type\":\"bytes\"}],\"name\":\"checkProofOfPossession\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"commitments\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"randomness\",\"type\":\"bytes32\"}],\"name\":\"computeCommitment\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"aNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exponent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"fractionMulExp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getBlockNumberFromHeader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getBlockRandomness\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getEpochNumberOfBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getParentSealBitmap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"cur\",\"type\":\"uint256\"}],\"name\":\"getTestRandomness\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getVerifiedSealBitmapFromHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"hashHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_randomnessBlockRetentionWindow\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"minQuorumSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minQuorumSizeInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberValidatorsInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"numberValidatorsInSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"random\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"randomnessBlockRetentionWindow\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"randomness\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"revealAndCommit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"setRandomnessBlockRetentionWindow\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"randomness\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"newCommitment\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"proposer\",\"type\":\"address\"}],\"name\":\"testRevealAndCommit\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromCurrentSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"checkProofOfPossession(address,bytes,bytes)\":{\"params\":{\"blsKey\":\"The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.\",\"blsPop\":\"The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.\",\"sender\":\"The address signed by the BLS key to generate the proof of possession.\"},\"return\":\"True upon success.\"},\"computeCommitment(bytes32)\":{\"params\":{\"randomness\":\"The value for which the commitment hash is computed.\"},\"return\":\"Commitment parameter.\"},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"_decimals\":\"precision\",\"aDenominator\":\"Denominator of first fraction\",\"aNumerator\":\"Numerator of first fraction\",\"bDenominator\":\"Denominator of exponentiated fraction\",\"bNumerator\":\"Numerator of exponentiated fraction\",\"exponent\":\"exponent to raise b to\"},\"return\":\"numerator/denominator of the computed quantity (not reduced).\"},\"getBlockNumberFromHeader(bytes)\":{\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Block number.\"},\"getBlockRandomness(uint256)\":{\"params\":{\"blockNumber\":\"The number of block whose randomness value we want to know.\"},\"return\":\"The associated randomness value.\"},\"getEpochNumber()\":{\"return\":\"Current epoch number.\"},\"getEpochNumberOfBlock(uint256)\":{\"params\":{\"blockNumber\":\"Block number where epoch number is calculated.\"},\"return\":\"Epoch number.\"},\"getEpochSize()\":{\"return\":\"The current epoch size in blocks.\"},\"getParentSealBitmap(uint256)\":{\"params\":{\"blockNumber\":\"Block number to retrieve. Must be within 4 epochs of the current number.\"},\"return\":\"Bitmap parent seal with set bits at indices corresponding to signing validators.\"},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Bitmap parent seal with set bits at indices correspoinding to signing validators.\"},\"getVersionNumber()\":{\"return\":\"The storage, major, minor, and patch version of the contract.\"},\"hashHeader(bytes)\":{\"params\":{\"header\":\"RLP encoded header\"},\"return\":\"Header hash.\"},\"initialize(uint256)\":{\"params\":{\"_randomnessBlockRetentionWindow\":\"Number of old random blocks whose randomness values can be queried.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"minQuorumSize(uint256)\":{\"details\":\"Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))\"},\"minQuorumSizeInCurrentSet()\":{\"return\":\"Byzantine quorum of validators.\"},\"numberValidatorsInCurrentSet()\":{\"return\":\"Size of the current elected validator set.\"},\"numberValidatorsInSet(uint256)\":{\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\"},\"return\":\"Size of the validator set.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"random()\":{\"return\":\"Returns the current randomness value.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"revealAndCommit(bytes32,bytes32,address)\":{\"details\":\"If the Random contract is pointed to by the Registry, the first transaction in a block should be a special transaction to address 0x0 with 64 bytes of data - the concatenated `randomness` and `newCommitment`. Before running regular transactions, this function should be called.\",\"params\":{\"newCommitment\":\"The hash of randomness that will be revealed in the future.\",\"proposer\":\"Address of the block proposer.\",\"randomness\":\"Bytes that will be added to the entropy pool.\"}},\"setRandomnessBlockRetentionWindow(uint256)\":{\"params\":{\"value\":\"Number of old random blocks whose randomness values can be queried.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"params\":{\"index\":\"Index of requested validator in the validator set.\"},\"return\":\"Address of validator at the requested index.\"},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"params\":{\"blockNumber\":\"Block number to retrieve the validator set from.\",\"index\":\"Index of requested validator in the validator set.\"},\"return\":\"Address of validator at the requested index.\"}}},\"userdoc\":{\"methods\":{\"checkProofOfPossession(address,bytes,bytes)\":{\"notice\":\"Checks a BLS proof of possession.\"},\"computeCommitment(bytes32)\":{\"notice\":\"Compute the commitment hash for a given randomness value.\"},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"calculate a * b^x for fractions a, b to `decimals` precision\"},\"getBlockNumberFromHeader(bytes)\":{\"notice\":\"Parses block number out of header.\"},\"getBlockRandomness(uint256)\":{\"notice\":\"Get randomness values of previous blocks.\"},\"getEpochNumber()\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochNumberOfBlock(uint256)\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochSize()\":{\"notice\":\"Returns the current epoch size in blocks.\"},\"getParentSealBitmap(uint256)\":{\"notice\":\"Gets the parent seal bitmap from the header at the given block number.\"},\"getVerifiedSealBitmapFromHeader(bytes)\":{\"notice\":\"Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"hashHeader(bytes)\":{\"notice\":\"Computes hash of header.\"},\"initialize(uint256)\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"minQuorumSize(uint256)\":{\"notice\":\"Returns the minimum number of required signers for a given block number.\"},\"minQuorumSizeInCurrentSet()\":{\"notice\":\"Computes byzantine quorum from current validator set size\"},\"numberValidatorsInCurrentSet()\":{\"notice\":\"Gets the size of the current elected validator set.\"},\"numberValidatorsInSet(uint256)\":{\"notice\":\"Gets the size of the validator set that must sign the given block number.\"},\"random()\":{\"notice\":\"Querying the current randomness value.\"},\"revealAndCommit(bytes32,bytes32,address)\":{\"notice\":\"Implements step of the randomness protocol.\"},\"setRandomnessBlockRetentionWindow(uint256)\":{\"notice\":\"Sets the number of old random blocks whose randomness values can be queried.\"},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"notice\":\"Gets a validator address from the current validator set.\"},\"validatorSignerAddressFromSet(uint256,uint256)\":{\"notice\":\"Gets a validator address from the validator set at the given block number.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/test/RandomTest.sol\":\"RandomTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/CalledByVm.sol\":{\"keccak256\":\"0xd61979452e5da908f604c3797e288c0a819ba6091c0d24ed172af865e87fae6c\",\"urls\":[\"bzz-raw://1051ccf97c4dca2dabbdf9f458c324c92ca54460061c4327e5e25a905ecc351c\",\"dweb:/ipfs/QmVe1A5gqua4eY6wNKFrXu8E3hrU2v1GktDyFVZreHXkjA\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/Initializable.sol\":{\"keccak256\":\"0xad98825b5d3181f4ce2d2dbe84adeb0cd7960fd80fafb0813539d6d96ba42ab8\",\"urls\":[\"bzz-raw://f76468328c78b80eeaaaadb7b186e41da4a34134446fe11bb707106322b8e32f\",\"dweb:/ipfs/QmNyjyVjPX1GKFibDcJBJyZQ57nhusG3DhPjAGnY7iaU39\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/UsingPrecompiles.sol\":{\"keccak256\":\"0x9fd156a9a16dac8deb0f55f54e7f1d7eec89eed061577358e46195121d7065b7\",\"urls\":[\"bzz-raw://1395d9c956cb4b25c9b514e22f1f9a21d93c724a6af3e9ca1306227416d57886\",\"dweb:/ipfs/QmQ5LVzDgemZ1NNkV5r5DyeLgiHtLc2MX1kCjhW7STSDV7\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"keccak256\":\"0x9f902faa66069500c7b5e8c9a53ca6afff99dfe6cd3915aa0f3c4fe6a9905ba5\",\"urls\":[\"bzz-raw://880c77a981296abbf6fe9a7e3e0d5d441b19de70d310b10f4a469ce344e8e96c\",\"dweb:/ipfs/QmUAY1xYLXUQXwgBoRFaXFv5z9a6sMYT9v7WdEAAeSGCwW\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/Random.sol\":{\"keccak256\":\"0x57c03fc01f4dd3a066b5749cab29199319f517b69b977c87bdf62ad945837c80\",\"urls\":[\"bzz-raw://4ebaf19c749bdb2262ae9985dd5e0aadb7dd15c0cee19912dc0e0af0e38afb78\",\"dweb:/ipfs/QmRtKb5jG5rvn4xXxJRXSgkH3nLJp3EDfQ4Q2wCsWZ4uGt\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/interfaces/IRandom.sol\":{\"keccak256\":\"0xd65fd529d133cbde94628b39b0d2f0f4b6d0af2e8f97c0e6b4b2cd476479ed1d\",\"urls\":[\"bzz-raw://f2c6fe351990bfdeb55484bd3622d44c8f58579a7212d5cce71a82df846497f5\",\"dweb:/ipfs/QmRDDTXUqbA6dHfJe4ZS1442JDAfwoHq2eH9LHnQyzsh44\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/test/RandomTest.sol\":{\"keccak256\":\"0x4019ba2b0cc462a9add3b152cf1261bc3789d03b05d48ff9837b7ccd973f9fc0\",\"urls\":[\"bzz-raw://3dee867cbf4f0d7e82220de913d118bcdd52d24ce63008bbea3622cf3eff938e\",\"dweb:/ipfs/QmTKxodUHPjXmR2xAWZTfXGSdXgKCW7rK9E5442QV5BqZA\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]}},\"version\":1}",
  "bytecode": "0x608060405260018060006100176100dd60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350806100d6576001600060146101000a81548160ff0219169083151502179055505b50506100e5565b600033905090565b61315580620000f56000396000f3fe608060405234801561001057600080fd5b50600436106101f05760003560e01c80638da5cb5b1161010f578063e50e652d116100a2578063f2fde38b11610071578063f2fde38b14610b8e578063fae8db0a14610bd2578063fc48472614610c14578063fe4b84df14610c56576101f0565b8063e50e652d14610a2d578063e626642514610a6f578063e8fcf72314610abb578063ec68307214610b13576101f0565b80639b2b592f116100de5780639b2b592f1461096d578063c387742b146109af578063df4da461146109f1578063e45def9514610a0f576101f0565b80638da5cb5b146108b55780638f32d59b146108ff57806392e5d98f146109215780639a7b3be71461094f576101f0565b80635ec01e4d1161018757806375832efc1161015657806375832efc1461073857806387ca71661461079057806387ee8a0f146107c85780638a883626146107e6576101f0565b80635ec01e4d1461062357806367960e9114610641578063715018a6146107105780637385e5da1461071a576101f0565b80633b1eb4bf116101c35780633b1eb4bf146104675780634b2c2f44146104a957806354255be0146105785780635d180adb146105ab576101f0565b80630c0dd6c1146101f5578063123633ea1461024d578063158ef93e146102bb57806323f0ab65146102dd575b600080fd5b61024b6004803603606081101561020b57600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c84565b005b6102796004803603602081101561026357600080fd5b8101908080359060200190929190505050610c94565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102c3610de5565b604051808215151515815260200191505060405180910390f35b61044d600480360360608110156102f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561033057600080fd5b82018360208201111561034257600080fd5b8035906020019184600183028401116401000000008311171561036457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103c757600080fd5b8201836020820111156103d957600080fd5b803590602001918460018302840111640100000000831117156103fb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610df8565b604051808215151515815260200191505060405180910390f35b6104936004803603602081101561047d57600080fd5b8101908080359060200190929190505050610fb1565b6040518082815260200191505060405180910390f35b610562600480360360208110156104bf57600080fd5b81019080803590602001906401000000008111156104dc57600080fd5b8201836020820111156104ee57600080fd5b8035906020019184600183028401116401000000008311171561051057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610fcb565b6040518082815260200191505060405180910390f35b61058061115f565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b6105e1600480360360408110156105c157600080fd5b810190808035906020019092919080359060200190929190505050611186565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61062b6112d8565b6040518082815260200191505060405180910390f35b6106fa6004803603602081101561065757600080fd5b810190808035906020019064010000000081111561067457600080fd5b82018360208201111561068657600080fd5b803590602001918460018302840111640100000000831117156106a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112e9565b6040518082815260200191505060405180910390f35b61071861147d565b005b6107226115b6565b6040518082815260200191505060405180910390f35b61078e6004803603606081101561074e57600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115c6565b005b6107c6600480360360408110156107a657600080fd5b810190808035906020019092919080359060200190929190505050611678565b005b6107d0611686565b6040518082815260200191505060405180910390f35b61089f600480360360208110156107fc57600080fd5b810190808035906020019064010000000081111561081957600080fd5b82018360208201111561082b57600080fd5b8035906020019184600183028401116401000000008311171561084d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506117cd565b6040518082815260200191505060405180910390f35b6108bd611961565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61090761198a565b604051808215151515815260200191505060405180910390f35b61094d6004803603602081101561093757600080fd5b81019080803590602001909291905050506119e8565b005b610957611afc565b6040518082815260200191505060405180910390f35b6109996004803603602081101561098357600080fd5b8101908080359060200190929190505050611b0c565b6040518082815260200191505060405180910390f35b6109db600480360360208110156109c557600080fd5b8101908080359060200190929190505050611c55565b6040518082815260200191505060405180910390f35b6109f9611c85565b6040518082815260200191505060405180910390f35b610a17611dc1565b6040518082815260200191505060405180910390f35b610a5960048036036020811015610a4357600080fd5b8101908080359060200190929190505050611dc7565b6040518082815260200191505060405180910390f35b610aa560048036036040811015610a8557600080fd5b810190808035906020019092919080359060200190929190505050611e12565b6040518082815260200191505060405180910390f35b610afd60048036036020811015610ad157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e26565b6040518082815260200191505060405180910390f35b610b71600480360360c0811015610b2957600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611e3e565b604051808381526020018281526020019250505060405180910390f35b610bd060048036036020811015610ba457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612052565b005b610bfe60048036036020811015610be857600080fd5b81019080803590602001909291905050506120d8565b6040518082815260200191505060405180910390f35b610c4060048036036020811015610c2a57600080fd5b8101908080359060200190929190505050612221565b6040518082815260200191505060405180910390f35b610c8260048036036020811015610c6c57600080fd5b8101908080359060200190929190505050612234565b005b610c8f8383836122e7565b505050565b60006060600060fa73ffffffffffffffffffffffffffffffffffffffff16844360405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310610d0d5780518252602082019150602081019050602083039250610cea565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610d6d576040519150601f19603f3d011682016040523d82523d6000602084013e610d72565b606091505b50809350819250505080610dd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180612ef4603d913960400191505060405180910390fd5b610ddc8260006125cf565b92505050919050565b600060149054906101000a900460ff1681565b60008060fb73ffffffffffffffffffffffffffffffffffffffff16858585604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140183805190602001908083835b60208310610e815780518252602082019150602081019050602083039250610e5e565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b60208310610ed25780518252602082019150602081019050602083039250610eaf565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b60208310610f3b5780518252602082019150602081019050602083039250610f18565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610f9b576040519150601f19603f3d011682016040523d82523d6000602084013e610fa0565b606091505b505080915050809150509392505050565b6000610fc482610fbf611c85565b6125e6565b9050919050565b60006060600060f473ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b602083106110205780518252602082019150602081019050602083039250610ffd565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106110875780518252602082019150602081019050602083039250611064565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146110e7576040519150601f19603f3d011682016040523d82523d6000602084013e6110ec565b606091505b5080935081925050508061114b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612ebc6038913960400191505060405180910390fd5b61115682600061262e565b92505050919050565b60008060008060018060016000839350829250819150809050935093509350935090919293565b60006060600060fa73ffffffffffffffffffffffffffffffffffffffff16858560405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106111ff57805182526020820191506020810190506020830392506111dc565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461125f576040519150601f19603f3d011682016040523d82523d6000602084013e611264565b606091505b508093508192505050806112c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180612f666036913960400191505060405180910390fd5b6112ce8260006125cf565b9250505092915050565b60006112e443436126cf565b905090565b60006060600060f673ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b6020831061133e578051825260208201915060208101905060208303925061131b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106113a55780518252602082019150602081019050602083039250611382565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611405576040519150601f19603f3d011682016040523d82523d6000602084013e61140a565b606091505b50809350819250505080611469576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806130c96023913960400191505060405180910390fd5b61147482600061262e565b92505050919050565b61148561198a565b6114f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006115c143611dc7565b905090565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611668576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4f6e6c7920564d2063616e2063616c6c0000000000000000000000000000000081525060200191505060405180910390fd5b6116738383836122e7565b505050565b61168282826127ea565b5050565b60006060600060f973ffffffffffffffffffffffffffffffffffffffff1643604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106116f757805182526020820191506020810190506020830392506116d4565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611757576040519150601f19603f3d011682016040523d82523d6000602084013e61175c565b606091505b508093508192505050806117bb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180612f316035913960400191505060405180910390fd5b6117c68260006125cf565b9250505090565b60006060600060f773ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b6020831061182257805182526020820191506020810190506020830392506117ff565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106118895780518252602082019150602081019050602083039250611866565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146118e9576040519150601f19603f3d011682016040523d82523d6000602084013e6118ee565b606091505b5080935081925050508061194d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806130986031913960400191505060405180910390fd5b6119588260006125cf565b92505050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166119cc61293a565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6119f061198a565b611a62576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008111611abb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612e63602c913960400191505060405180910390fd5b806002819055507f337b24e614d34558109f3dee80fbcb3c5a4b08a6611bee45581772f64d1681e5816040518082815260200191505060405180910390a150565b6000611b0743610fb1565b905090565b60006060600060f973ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611b7d5780518252602082019150602081019050602083039250611b5a565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611bdd576040519150601f19603f3d011682016040523d82523d6000602084013e611be2565b606091505b50809350819250505080611c41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612e0f602e913960400191505060405180910390fd5b611c4c8260006125cf565b92505050919050565b60008160405160200180828152602001915050604051602081830303815290604052805190602001209050919050565b60006060600060f873ffffffffffffffffffffffffffffffffffffffff166040516020016040516020818303038152906040526040518082805190602001908083835b60208310611ceb5780518252602082019150602081019050602083039250611cc8565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611d4b576040519150601f19603f3d011682016040523d82523d6000602084013e611d50565b606091505b50809350819250505080611daf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061300c6025913960400191505060405180910390fd5b611dba8260006125cf565b9250505090565b60025481565b6000611e0b6003611dfd6002611def6002611de188611b0c565b61294290919063ffffffff16565b6129c890919063ffffffff16565b612a5090919063ffffffff16565b9050919050565b6000611e1e83836126cf565b905092915050565b60016020528060005260406000206000915090505481565b60008060008714158015611e53575060008514155b611ec5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f612064656e6f6d696e61746f72206973207a65726f000000000000000000000081525060200191505060405180910390fd5b6000806000606060fc73ffffffffffffffffffffffffffffffffffffffff168c8c8c8c8c8c6040516020018087815260200186815260200185815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b60208310611f5f5780518252602082019150602081019050602083039250611f3c565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611fbf576040519150601f19603f3d011682016040523d82523d6000602084013e611fc4565b606091505b50809250819350505081612023576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612fe56027913960400191505060405180910390fd5b61202e8160006125cf565b935061203b8160206125cf565b925083839550955050505050965096945050505050565b61205a61198a565b6120cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6120d581612a9a565b50565b60006060600060f573ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106121495780518252602082019150602081019050602083039250612126565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146121a9576040519150601f19603f3d011682016040523d82523d6000602084013e6121ae565b606091505b5080935081925050508061220d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061306c602c913960400191505060405180910390fd5b61221882600061262e565b92505050919050565b600061222d82436126cf565b9050919050565b600060149054906101000a900460ff16156122b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055506122db33612a9a565b6122e4816119e8565b50565b6122f36000801b611c55565b821415612368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f63616e6e6f7420636f6d6d6974207a65726f2072616e646f6d6e65737300000081525060200191505060405180910390fd5b6000801b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146124b7576000801b83141561240d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180613031603b913960400191505060405180910390fd5b600061241884611c55565b9050600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481146124b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612e8f602d913960400191505060405180910390fd5b50612513565b6000801b8314612512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180612dd3603c913960400191505060405180910390fd5b5b600080431461253557612530600143612bde90919063ffffffff16565b612538565b60005b9050612585436003600084815260200190815260200160002054866040516020018083815260200182815260200192505050604051602081830303815290604052805190602001206127ea565b82600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b60006125db838361262e565b60001c905092915050565b6000808284816125f257fe5b049050600083858161260057fe5b0614156126105780915050612628565b6126246001826129c890919063ffffffff16565b9150505b92915050565b60006126446020836129c890919063ffffffff16565b835110156126ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f736c6963696e67206f7574206f662072616e676500000000000000000000000081525060200191505060405180910390fd5b60006020830184015190508091505092915050565b60008183111561272a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612fbd6028913960400191505060405180910390fd5b600654831480612779575061274a60055483612bde90919063ffffffff16565b83118015612778575081600254101580612777575061277460025483612bde90919063ffffffff16565b83115b5b5b6127ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806130ec6035913960400191505060405180910390fd5b6003600084815260200190815260200160002054905092915050565b806003600084815260200190815260200160002081905550600061280c611c85565b838161281457fe5b06141561284d57600454600654101561284157600360006006548152602001908152602001600020600090555b81600681905550612936565b6000600554141561286c57816004819055506001600581905550612935565b60025460055411156128de57612883600454612c28565b6128a161289c60016004546129c890919063ffffffff16565b612c28565b6128b760026004546129c890919063ffffffff16565b6004819055506128d36001600554612bde90919063ffffffff16565b600581905550612934565b6002546005541415612916576128f5600454612c28565b61290b60016004546129c890919063ffffffff16565b600481905550612933565b61292c60016005546129c890919063ffffffff16565b6005819055505b5b5b5b5050565b600033905090565b60008083141561295557600090506129c2565b600082840290508284828161296657fe5b04146129bd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612f9c6021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015612a46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000612a9283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612c4c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612b20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612e3d6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000612c2083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d12565b905092915050565b6006548114612c495760036000828152602001908152602001600020600090555b50565b60008083118290612cf8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612cbd578082015181840152602081019050612ca2565b50505050905090810190601f168015612cea5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612d0457fe5b049050809150509392505050565b6000838311158290612dbf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d84578082015181840152602081019050612d69565b50505050905090810190601f168015612db15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe72616e646f6d6e6573732073686f756c64206265207a65726f206966207468657265206973206e6f2070726576696f757320636f6d6d69746d656e746572726f722063616c6c696e67206e756d62657256616c696461746f7273496e53657420707265636f6d70696c654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737372616e646f6d6e657373426c6f636b5265746574696f6e57696e646f772063616e6e6f74206265207a65726f636f6d6d69746d656e74206469646e2774206d617463682074686520706f737465642072616e646f6d6e6573736572726f722063616c6c696e672067657456657269666965645365616c4269746d617046726f6d48656164657220707265636f6d70696c656572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e67206e756d62657256616c696461746f7273496e43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d53657420707265636f6d70696c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616e6e6f742071756572792072616e646f6d6e657373206f662066757475726520626c6f636b736572726f722063616c6c696e67206672616374696f6e4d756c45787020707265636f6d70696c656572726f722063616c6c696e672067657445706f636853697a6520707265636f6d70696c6572616e646f6d6e6573732063616e6e6f74206265207a65726f20696620746865726520697320612070726576696f757320636f6d6d69746d656e746572726f722063616c6c696e6720676574506172656e745365616c4269746d617020707265636f6d70696c656572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d48656164657220707265636f6d70696c656572726f722063616c6c696e67206861736848656164657220707265636f6d70696c6543616e6e6f742071756572792072616e646f6d6e657373206f6c646572207468616e207468652073746f72656420686973746f7279a265627a7a723158205b66184cbad3458fa51558e5f5e7ffcdd0c03dd67eb3353b82a36dfd4e58dc0464736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101f05760003560e01c80638da5cb5b1161010f578063e50e652d116100a2578063f2fde38b11610071578063f2fde38b14610b8e578063fae8db0a14610bd2578063fc48472614610c14578063fe4b84df14610c56576101f0565b8063e50e652d14610a2d578063e626642514610a6f578063e8fcf72314610abb578063ec68307214610b13576101f0565b80639b2b592f116100de5780639b2b592f1461096d578063c387742b146109af578063df4da461146109f1578063e45def9514610a0f576101f0565b80638da5cb5b146108b55780638f32d59b146108ff57806392e5d98f146109215780639a7b3be71461094f576101f0565b80635ec01e4d1161018757806375832efc1161015657806375832efc1461073857806387ca71661461079057806387ee8a0f146107c85780638a883626146107e6576101f0565b80635ec01e4d1461062357806367960e9114610641578063715018a6146107105780637385e5da1461071a576101f0565b80633b1eb4bf116101c35780633b1eb4bf146104675780634b2c2f44146104a957806354255be0146105785780635d180adb146105ab576101f0565b80630c0dd6c1146101f5578063123633ea1461024d578063158ef93e146102bb57806323f0ab65146102dd575b600080fd5b61024b6004803603606081101561020b57600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610c84565b005b6102796004803603602081101561026357600080fd5b8101908080359060200190929190505050610c94565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102c3610de5565b604051808215151515815260200191505060405180910390f35b61044d600480360360608110156102f357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561033057600080fd5b82018360208201111561034257600080fd5b8035906020019184600183028401116401000000008311171561036457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156103c757600080fd5b8201836020820111156103d957600080fd5b803590602001918460018302840111640100000000831117156103fb57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610df8565b604051808215151515815260200191505060405180910390f35b6104936004803603602081101561047d57600080fd5b8101908080359060200190929190505050610fb1565b6040518082815260200191505060405180910390f35b610562600480360360208110156104bf57600080fd5b81019080803590602001906401000000008111156104dc57600080fd5b8201836020820111156104ee57600080fd5b8035906020019184600183028401116401000000008311171561051057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610fcb565b6040518082815260200191505060405180910390f35b61058061115f565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b6105e1600480360360408110156105c157600080fd5b810190808035906020019092919080359060200190929190505050611186565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61062b6112d8565b6040518082815260200191505060405180910390f35b6106fa6004803603602081101561065757600080fd5b810190808035906020019064010000000081111561067457600080fd5b82018360208201111561068657600080fd5b803590602001918460018302840111640100000000831117156106a857600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506112e9565b6040518082815260200191505060405180910390f35b61071861147d565b005b6107226115b6565b6040518082815260200191505060405180910390f35b61078e6004803603606081101561074e57600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506115c6565b005b6107c6600480360360408110156107a657600080fd5b810190808035906020019092919080359060200190929190505050611678565b005b6107d0611686565b6040518082815260200191505060405180910390f35b61089f600480360360208110156107fc57600080fd5b810190808035906020019064010000000081111561081957600080fd5b82018360208201111561082b57600080fd5b8035906020019184600183028401116401000000008311171561084d57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506117cd565b6040518082815260200191505060405180910390f35b6108bd611961565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61090761198a565b604051808215151515815260200191505060405180910390f35b61094d6004803603602081101561093757600080fd5b81019080803590602001909291905050506119e8565b005b610957611afc565b6040518082815260200191505060405180910390f35b6109996004803603602081101561098357600080fd5b8101908080359060200190929190505050611b0c565b6040518082815260200191505060405180910390f35b6109db600480360360208110156109c557600080fd5b8101908080359060200190929190505050611c55565b6040518082815260200191505060405180910390f35b6109f9611c85565b6040518082815260200191505060405180910390f35b610a17611dc1565b6040518082815260200191505060405180910390f35b610a5960048036036020811015610a4357600080fd5b8101908080359060200190929190505050611dc7565b6040518082815260200191505060405180910390f35b610aa560048036036040811015610a8557600080fd5b810190808035906020019092919080359060200190929190505050611e12565b6040518082815260200191505060405180910390f35b610afd60048036036020811015610ad157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611e26565b6040518082815260200191505060405180910390f35b610b71600480360360c0811015610b2957600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050611e3e565b604051808381526020018281526020019250505060405180910390f35b610bd060048036036020811015610ba457600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612052565b005b610bfe60048036036020811015610be857600080fd5b81019080803590602001909291905050506120d8565b6040518082815260200191505060405180910390f35b610c4060048036036020811015610c2a57600080fd5b8101908080359060200190929190505050612221565b6040518082815260200191505060405180910390f35b610c8260048036036020811015610c6c57600080fd5b8101908080359060200190929190505050612234565b005b610c8f8383836122e7565b505050565b60006060600060fa73ffffffffffffffffffffffffffffffffffffffff16844360405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b60208310610d0d5780518252602082019150602081019050602083039250610cea565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610d6d576040519150601f19603f3d011682016040523d82523d6000602084013e610d72565b606091505b50809350819250505080610dd1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180612ef4603d913960400191505060405180910390fd5b610ddc8260006125cf565b92505050919050565b600060149054906101000a900460ff1681565b60008060fb73ffffffffffffffffffffffffffffffffffffffff16858585604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140183805190602001908083835b60208310610e815780518252602082019150602081019050602083039250610e5e565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b60208310610ed25780518252602082019150602081019050602083039250610eaf565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b60208310610f3b5780518252602082019150602081019050602083039250610f18565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114610f9b576040519150601f19603f3d011682016040523d82523d6000602084013e610fa0565b606091505b505080915050809150509392505050565b6000610fc482610fbf611c85565b6125e6565b9050919050565b60006060600060f473ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b602083106110205780518252602082019150602081019050602083039250610ffd565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106110875780518252602082019150602081019050602083039250611064565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146110e7576040519150601f19603f3d011682016040523d82523d6000602084013e6110ec565b606091505b5080935081925050508061114b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526038815260200180612ebc6038913960400191505060405180910390fd5b61115682600061262e565b92505050919050565b60008060008060018060016000839350829250819150809050935093509350935090919293565b60006060600060fa73ffffffffffffffffffffffffffffffffffffffff16858560405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b602083106111ff57805182526020820191506020810190506020830392506111dc565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461125f576040519150601f19603f3d011682016040523d82523d6000602084013e611264565b606091505b508093508192505050806112c3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180612f666036913960400191505060405180910390fd5b6112ce8260006125cf565b9250505092915050565b60006112e443436126cf565b905090565b60006060600060f673ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b6020831061133e578051825260208201915060208101905060208303925061131b565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106113a55780518252602082019150602081019050602083039250611382565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611405576040519150601f19603f3d011682016040523d82523d6000602084013e61140a565b606091505b50809350819250505080611469576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260238152602001806130c96023913960400191505060405180910390fd5b61147482600061262e565b92505050919050565b61148561198a565b6114f7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b60006115c143611dc7565b905090565b600073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611668576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260108152602001807f4f6e6c7920564d2063616e2063616c6c0000000000000000000000000000000081525060200191505060405180910390fd5b6116738383836122e7565b505050565b61168282826127ea565b5050565b60006060600060f973ffffffffffffffffffffffffffffffffffffffff1643604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106116f757805182526020820191506020810190506020830392506116d4565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611757576040519150601f19603f3d011682016040523d82523d6000602084013e61175c565b606091505b508093508192505050806117bb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180612f316035913960400191505060405180910390fd5b6117c68260006125cf565b9250505090565b60006060600060f773ffffffffffffffffffffffffffffffffffffffff16846040516020018082805190602001908083835b6020831061182257805182526020820191506020810190506020830392506117ff565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040526040518082805190602001908083835b602083106118895780518252602082019150602081019050602083039250611866565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146118e9576040519150601f19603f3d011682016040523d82523d6000602084013e6118ee565b606091505b5080935081925050508061194d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260318152602001806130986031913960400191505060405180910390fd5b6119588260006125cf565b92505050919050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166119cc61293a565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6119f061198a565b611a62576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b60008111611abb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c815260200180612e63602c913960400191505060405180910390fd5b806002819055507f337b24e614d34558109f3dee80fbcb3c5a4b08a6611bee45581772f64d1681e5816040518082815260200191505060405180910390a150565b6000611b0743610fb1565b905090565b60006060600060f973ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b60208310611b7d5780518252602082019150602081019050602083039250611b5a565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611bdd576040519150601f19603f3d011682016040523d82523d6000602084013e611be2565b606091505b50809350819250505080611c41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180612e0f602e913960400191505060405180910390fd5b611c4c8260006125cf565b92505050919050565b60008160405160200180828152602001915050604051602081830303815290604052805190602001209050919050565b60006060600060f873ffffffffffffffffffffffffffffffffffffffff166040516020016040516020818303038152906040526040518082805190602001908083835b60208310611ceb5780518252602082019150602081019050602083039250611cc8565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611d4b576040519150601f19603f3d011682016040523d82523d6000602084013e611d50565b606091505b50809350819250505080611daf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602581526020018061300c6025913960400191505060405180910390fd5b611dba8260006125cf565b9250505090565b60025481565b6000611e0b6003611dfd6002611def6002611de188611b0c565b61294290919063ffffffff16565b6129c890919063ffffffff16565b612a5090919063ffffffff16565b9050919050565b6000611e1e83836126cf565b905092915050565b60016020528060005260406000206000915090505481565b60008060008714158015611e53575060008514155b611ec5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f612064656e6f6d696e61746f72206973207a65726f000000000000000000000081525060200191505060405180910390fd5b6000806000606060fc73ffffffffffffffffffffffffffffffffffffffff168c8c8c8c8c8c6040516020018087815260200186815260200185815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b60208310611f5f5780518252602082019150602081019050602083039250611f3c565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611fbf576040519150601f19603f3d011682016040523d82523d6000602084013e611fc4565b606091505b50809250819350505081612023576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180612fe56027913960400191505060405180910390fd5b61202e8160006125cf565b935061203b8160206125cf565b925083839550955050505050965096945050505050565b61205a61198a565b6120cc576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6120d581612a9a565b50565b60006060600060f573ffffffffffffffffffffffffffffffffffffffff1684604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b602083106121495780518252602082019150602081019050602083039250612126565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146121a9576040519150601f19603f3d011682016040523d82523d6000602084013e6121ae565b606091505b5080935081925050508061220d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602c81526020018061306c602c913960400191505060405180910390fd5b61221882600061262e565b92505050919050565b600061222d82436126cf565b9050919050565b600060149054906101000a900460ff16156122b7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055506122db33612a9a565b6122e4816119e8565b50565b6122f36000801b611c55565b821415612368576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f63616e6e6f7420636f6d6d6974207a65726f2072616e646f6d6e65737300000081525060200191505060405180910390fd5b6000801b600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054146124b7576000801b83141561240d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180613031603b913960400191505060405180910390fd5b600061241884611c55565b9050600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205481146124b1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602d815260200180612e8f602d913960400191505060405180910390fd5b50612513565b6000801b8314612512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603c815260200180612dd3603c913960400191505060405180910390fd5b5b600080431461253557612530600143612bde90919063ffffffff16565b612538565b60005b9050612585436003600084815260200190815260200160002054866040516020018083815260200182815260200192505050604051602081830303815290604052805190602001206127ea565b82600160008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190555050505050565b60006125db838361262e565b60001c905092915050565b6000808284816125f257fe5b049050600083858161260057fe5b0614156126105780915050612628565b6126246001826129c890919063ffffffff16565b9150505b92915050565b60006126446020836129c890919063ffffffff16565b835110156126ba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f736c6963696e67206f7574206f662072616e676500000000000000000000000081525060200191505060405180910390fd5b60006020830184015190508091505092915050565b60008183111561272a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180612fbd6028913960400191505060405180910390fd5b600654831480612779575061274a60055483612bde90919063ffffffff16565b83118015612778575081600254101580612777575061277460025483612bde90919063ffffffff16565b83115b5b5b6127ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260358152602001806130ec6035913960400191505060405180910390fd5b6003600084815260200190815260200160002054905092915050565b806003600084815260200190815260200160002081905550600061280c611c85565b838161281457fe5b06141561284d57600454600654101561284157600360006006548152602001908152602001600020600090555b81600681905550612936565b6000600554141561286c57816004819055506001600581905550612935565b60025460055411156128de57612883600454612c28565b6128a161289c60016004546129c890919063ffffffff16565b612c28565b6128b760026004546129c890919063ffffffff16565b6004819055506128d36001600554612bde90919063ffffffff16565b600581905550612934565b6002546005541415612916576128f5600454612c28565b61290b60016004546129c890919063ffffffff16565b600481905550612933565b61292c60016005546129c890919063ffffffff16565b6005819055505b5b5b5b5050565b600033905090565b60008083141561295557600090506129c2565b600082840290508284828161296657fe5b04146129bd576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180612f9c6021913960400191505060405180910390fd5b809150505b92915050565b600080828401905083811015612a46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000612a9283836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250612c4c565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612b20576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180612e3d6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000612c2083836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250612d12565b905092915050565b6006548114612c495760036000828152602001908152602001600020600090555b50565b60008083118290612cf8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612cbd578082015181840152602081019050612ca2565b50505050905090810190601f168015612cea5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581612d0457fe5b049050809150509392505050565b6000838311158290612dbf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015612d84578082015181840152602081019050612d69565b50505050905090810190601f168015612db15780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838503905080915050939250505056fe72616e646f6d6e6573732073686f756c64206265207a65726f206966207468657265206973206e6f2070726576696f757320636f6d6d69746d656e746572726f722063616c6c696e67206e756d62657256616c696461746f7273496e53657420707265636f6d70696c654f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737372616e646f6d6e657373426c6f636b5265746574696f6e57696e646f772063616e6e6f74206265207a65726f636f6d6d69746d656e74206469646e2774206d617463682074686520706f737465642072616e646f6d6e6573736572726f722063616c6c696e672067657456657269666965645365616c4269746d617046726f6d48656164657220707265636f6d70696c656572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e67206e756d62657256616c696461746f7273496e43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d53657420707265636f6d70696c65536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f7743616e6e6f742071756572792072616e646f6d6e657373206f662066757475726520626c6f636b736572726f722063616c6c696e67206672616374696f6e4d756c45787020707265636f6d70696c656572726f722063616c6c696e672067657445706f636853697a6520707265636f6d70696c6572616e646f6d6e6573732063616e6e6f74206265207a65726f20696620746865726520697320612070726576696f757320636f6d6d69746d656e746572726f722063616c6c696e6720676574506172656e745365616c4269746d617020707265636f6d70696c656572726f722063616c6c696e6720676574426c6f636b4e756d62657246726f6d48656164657220707265636f6d70696c656572726f722063616c6c696e67206861736848656164657220707265636f6d70696c6543616e6e6f742071756572792072616e646f6d6e657373206f6c646572207468616e207468652073746f72656420686973746f7279a265627a7a723158205b66184cbad3458fa51558e5f5e7ffcdd0c03dd67eb3353b82a36dfd4e58dc0464736f6c634300050d0032",
  "sourceMap": "51:491:122:-;;;81:4;1404::110;698:17:154;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;135:17:12;130:57;;176:4;162:11;;:18;;;;;;;;;;;;;;;;;;130:57;81:110;1360:52:110;51:491:122;;788:96:150;833:15;867:10;860:17;;788:96;:::o;51:491:122:-;;;;;;;",
  "deployedSourceMap": "51:491:122:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;51:491:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;371:169;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;371:169:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3716:367:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3716:367:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;53:23:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6211:266:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6211:266:22;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6211:266:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6211:266:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6211:266:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6211:266:22;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6211:266:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6211:266:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6211:266:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6211:266:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2555:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2555:147:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8361:343;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8361:343:22;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8361:343:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8361:343:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8361:343:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8361:343:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1094:117:110;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4387:378:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4387:378:22;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;5963:115:110;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7053:288:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7053:288:22;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;7053:288:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;7053:288:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;7053:288:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;7053:288:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1684:137:154;;;:::i;:::-;;9896:112:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2858:176:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2858:176:110;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;91:126:122;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;91:126:122;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;4902:326:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6606:329;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6606:329:22;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6606:329:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6606:329:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6606:329:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6606:329:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;899:77:154;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2028:247:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2028:247:110;;;;;;;;;;;;;;;;;:::i;:::-;;2803:109:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5444:321;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5444:321:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5710:134:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5710:134:110;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2125:266:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;673:45:110;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9617:147:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9617:147:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;220:148:122;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;220:148:122;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;622:46:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;622:46:110;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1244:763:22;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1244:763:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1970:107:154;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:154;;;;;;;;;;;;;;;;;;;:::i;:::-;;7632:322:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7632:322:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6279:145:110;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6279:145:110;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1641:195;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1641:195:110;;;;;;;;;;;;;;;;;:::i;:::-;;371:169:122;482:53;499:10;511:13;526:8;482:16;:53::i;:::-;371:169;;;:::o;3716:367:22:-;3798:7;3813:16;3835:12;409:8;3870:24;;3912:5;3927:12;3895:46;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3895:46:22;;;3870:72;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3870:72:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3853:89:22;;;;;;;;3956:7;3948:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4050:27;4070:3;4075:1;4050:19;:27::i;:::-;4035:43;;;;3716:367;;;:::o;53:23:12:-;;;;;;;;;;;;;:::o;6211:266:22:-;6334:4;6348:12;355:8;6380:30;;6428:6;6436;6444;6411:40;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6411:40:22;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6411:40:22;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6411:40:22;;;6380:72;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6380:72:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;6366:86:22;;;;;6465:7;6458:14;;;6211:266;;;;;:::o;2555:147::-;2628:7;2650:47;2669:11;2682:14;:12;:14::i;:::-;2650:18;:47::i;:::-;2643:54;;2555:147;;;:::o;8361:343::-;8444:7;8459:16;8481:12;764:9;8516:35;;8569:6;8552:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8552:24:22;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;8552:24:22;;;8516:61;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;8516:61:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;8499:78:22;;;;;;;;8591:7;8583:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8672:27;8692:3;8697:1;8672:19;:27::i;:::-;8665:34;;;;8361:343;;;:::o;1094:117:110:-;1145:7;1154;1163;1172;1195:1;1198;1201;1204;1187:19;;;;;;;;;;;;;;;;;;;;1094:117;;;;:::o;4387:378:22:-;4495:7;4512:16;4534:12;409:8;4569:24;;4611:5;4618:11;4594:36;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4594:36:22;;;4569:62;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;4569:62:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;4552:79:22;;;;;;;;4645:7;4637:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4732:27;4752:3;4757:1;4732:19;:27::i;:::-;4717:43;;;;4387:378;;;;:::o;5963:115:110:-;6004:7;6026:47;6046:12;6060;6026:19;:47::i;:::-;6019:54;;5963:115;:::o;7053:288:22:-;7115:7;7130:16;7152:12;635:8;7187:22;;7227:6;7210:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7210:24:22;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7210:24:22;;;7187:48;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7187:48:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;7170:65:22;;;;;;;;7249:7;7241:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7309:27;7329:3;7334:1;7309:19;:27::i;:::-;7302:34;;;;7053:288;;;:::o;1684:137:154:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;9896:112:22:-;9954:7;9976:27;9990:12;9976:13;:27::i;:::-;9969:34;;9896:112;:::o;2858:176:110:-;104:1:2;82:24;;:10;:24;;;74:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2976::110;2993:10;3005:13;3020:8;2976:16;:53::i;:::-;2858:176;;;:::o;91:126:122:-;174:38;188:11;201:10;174:13;:38::i;:::-;91:126;;:::o;4902:326:22:-;4963:7;4978:16;5000:12;467:8;5035:28;;5089:12;5064:39;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5064:39:22;;;5035:69;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5035:69:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;5018:86:22;;;;;;;;5118:7;5110:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5196:27;5216:3;5221:1;5196:19;:27::i;:::-;5189:34;;;;4902:326;:::o;6606:329::-;6682:7;6697:16;6719:12;583:8;6754:35;;6807:6;6790:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6790:24:22;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6790:24:22;;;6754:61;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6754:61:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;6737:78:22;;;;;;;;6829:7;6821:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6903:27;6923:3;6928:1;6903:19;:27::i;:::-;6896:34;;;;6606:329;;;:::o;899:77:154:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;2028:247:110:-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2125:1:110;2117:5;:9;2109:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2214:5;2181:30;:38;;;;2230:40;2264:5;2230:40;;;;;;;;;;;;;;;;;;2028:247;:::o;2803:109:22:-;2850:7;2872:35;2894:12;2872:21;:35::i;:::-;2865:42;;2803:109;:::o;5444:321::-;5517:7;5532:16;5554:12;467:8;5589:28;;5635:11;5618:29;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5618:29:22;;;5589:59;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5589:59:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;5572:76:22;;;;;;;;5662:7;5654:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5733:27;5753:3;5758:1;5733:19;:27::i;:::-;5726:34;;;;5444:321;;;:::o;5710:134:110:-;5778:7;5827:10;5810:28;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5810:28:110;;;5800:39;;;;;;5793:46;;5710:134;;;:::o;2125:266:22:-;2170:7;2185:16;2207:12;518:8;2242:21;;2264:18;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2264:18:22;;;2242:41;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2242:41:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2225:58:22;;;;;;;;2297:7;2289:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2359:27;2379:3;2384:1;2359:19;:27::i;:::-;2352:34;;;;2125:266;:::o;673:45:110:-;;;;:::o;9617:147:22:-;9682:7;9704:55;9757:1;9704:48;9750:1;9704:41;9743:1;9704:34;9726:11;9704:21;:34::i;:::-;:38;;:41;;;;:::i;:::-;:45;;:48;;;;:::i;:::-;:52;;:55;;;;:::i;:::-;9697:62;;9617:147;;;:::o;220:148:122:-;304:7;326:37;346:11;359:3;326:19;:37::i;:::-;319:44;;220:148;;;;:::o;622:46:110:-;;;;;;;;;;;;;;;;;:::o;1244:763:22:-;1438:7;1447;1486:1;1470:12;:17;;:38;;;;;1507:1;1491:12;:17;;1470:38;1462:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1540:23;1569:25;1600:12;1618:16;295:8;1657:23;;1705:10;1717:12;1731:10;1743:12;1757:8;1767:9;1688:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1688:89:22;;;1657:126;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1657:126:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1640:143:22;;;;;;;;1797:7;1789:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1872:27;1892:3;1897:1;1872:19;:27::i;:::-;1854:45;;1925:28;1945:3;1950:2;1925:19;:28::i;:::-;1905:48;;1967:15;1984:17;1959:43;;;;;;;;1244:763;;;;;;;;;:::o;1970:107:154:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;7632:322:22:-;7703:7;7718:16;7740:12;698:9;7775:33;;7826:11;7809:29;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;7809:29:22;;;7775:64;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;7775:64:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;7758:81:22;;;;;;;;7853:7;7845:64;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7922:27;7942:3;7947:1;7922:19;:27::i;:::-;7915:34;;;;7632:322;;;:::o;6279:145:110:-;6351:7;6373:46;6393:11;6406:12;6373:19;:46::i;:::-;6366:53;;6279:145;;;:::o;1641:195::-;233:11:12;;;;;;;;;;;232:12;224:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;297:4;283:11;;:18;;;;;;;;;;;;;;;;;;1729:30:110;1748:10;1729:18;:30::i;:::-;1765:66;1799:31;1765:33;:66::i;:::-;1641:195;:::o;3314:927::-;3441:20;3459:1;3441:20;;:17;:20::i;:::-;3424:13;:37;;3416:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3593:1;3568:26;;:11;:21;3580:8;3568:21;;;;;;;;;;;;;;;;:26;3564:442;;3626:1;3612:15;;:10;:15;;3604:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3699:26;3728:29;3746:10;3728:17;:29::i;:::-;3699:58;;3804:11;:21;3816:8;3804:21;;;;;;;;;;;;;;;;3782:18;:43;3765:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3564:442;;;;3933:1;3919:15;;:10;:15;3911:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3564:442;4031:19;4069:1;4053:12;:17;:43;;4077:19;4094:1;4077:12;:16;;:19;;;;:::i;:::-;4053:43;;;4073:1;4053:43;4031:65;;4102:90;4116:12;4157:7;:20;4165:11;4157:20;;;;;;;;;;;;4179:10;4140:50;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;4140:50:110;;;4130:61;;;;;;4102:13;:90::i;:::-;4223:13;4199:11;:21;4211:8;4199:21;;;;;;;;;;;;;;;:37;;;;3314:927;;;;:::o;8864:150:22:-;8948:7;8978:30;8998:2;9002:5;8978:19;:30::i;:::-;8970:39;;8963:46;;8864:150;;;;:::o;3124:379::-;3227:7;3335:19;3371:9;3357:11;:23;;;;;;3335:45;;3417:1;3404:9;3390:11;:23;;;;;;:28;3386:113;;;3435:11;3428:18;;;;;3386:113;3474:18;3490:1;3474:11;:15;;:18;;;;:::i;:::-;3467:25;;;3124:379;;;;;:::o;9174:255::-;9258:7;9294:13;9304:2;9294:5;:9;;:13;;;;:::i;:::-;9281:2;:9;:26;;9273:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9338:9;9400:2;9393:5;9389:14;9385:2;9381:23;9375:30;9370:35;;9423:1;9416:8;;;9174:255;;;;:::o;6670:499:110:-;6756:7;6794:3;6779:11;:18;;6771:71;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6878:14;;6863:11;:29;:199;;;;6919:20;6927:11;;6919:3;:7;;:20;;;;:::i;:::-;6905:11;:34;:156;;;;;6988:3;6954:30;;:37;;:106;;;;7021:39;7029:30;;7021:3;:7;;:39;;;;:::i;:::-;7007:11;:53;6954:106;6905:156;6863:199;6848:283;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7144:7;:20;7152:11;7144:20;;;;;;;;;;;;7137:27;;6670:499;;;;:::o;4556:956::-;4658:10;4635:7;:20;4643:11;4635:20;;;;;;;;;;;:33;;;;4710:1;4692:14;:12;:14::i;:::-;4678:11;:28;;;;;;:33;4674:834;;;4742:12;;4725:14;;:29;4721:84;;;4773:7;:23;4781:14;;4773:23;;;;;;;;;;;4766:30;;;4721:84;4829:11;4812:14;:28;;;;4674:834;;;4880:1;4865:11;;:16;4861:641;;;4908:11;4893:12;:26;;;;4943:1;4929:11;:15;;;;4861:641;;;4977:30;;4963:11;;:44;4959:543;;;5019:46;5052:12;;5019:32;:46::i;:::-;5075:53;5108:19;5125:1;5108:12;;:16;;:19;;;;:::i;:::-;5075:32;:53::i;:::-;5153:19;5170:1;5153:12;;:16;;:19;;;;:::i;:::-;5138:12;:34;;;;5196:18;5212:1;5196:11;;:15;;:18;;;;:::i;:::-;5182:11;:32;;;;4959:543;;;5248:30;;5233:11;;:45;5229:273;;;5290:46;5323:12;;5290:32;:46::i;:::-;5361:19;5378:1;5361:12;;:16;;:19;;;;:::i;:::-;5346:12;:34;;;;5229:273;;;5475:18;5491:1;5475:11;;:15;;:18;;;;:::i;:::-;5461:11;:32;;;;5229:273;4959:543;4861:641;4674:834;4556:956;;:::o;788:96:150:-;833:15;867:10;860:17;;788:96;:::o;2159:459:153:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;3073:130::-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3150:46;;3073:130;;;;:::o;2178:225:154:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;1274:134:153:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;7173:159:110:-;7270:14;;7255:11;:29;7251:77;;7301:7;:20;7309:11;7301:20;;;;;;;;;;;7294:27;;;7251:77;7173:159;:::o;3718:338:153:-;3804:7;3901:1;3897;:5;3904:12;3889:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3889:28:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;3927:17;;4048:1;4041:8;;;3718:338;;;;;:::o;1732:187::-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"../Random.sol\";\n\ncontract RandomTest is Random(true) {\n  function addTestRandomness(uint256 blockNumber, bytes32 randomness) external {\n    addRandomness(blockNumber, randomness);\n  }\n  function getTestRandomness(uint256 blockNumber, uint256 cur) external view returns (bytes32) {\n    return _getBlockRandomness(blockNumber, cur);\n  }\n  function testRevealAndCommit(bytes32 randomness, bytes32 newCommitment, address proposer)\n    external\n  {\n    _revealAndCommit(randomness, newCommitment, proposer);\n  }\n}\n",
  "sourcePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/test/RandomTest.sol",
  "ast": {
    "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/test/RandomTest.sol",
    "exportedSymbols": {
      "RandomTest": [
        36658
      ]
    },
    "id": 36659,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 36609,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:122"
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/Random.sol",
        "file": "../Random.sol",
        "id": 36610,
        "nodeType": "ImportDirective",
        "scope": 36659,
        "sourceUnit": 35925,
        "src": "26:23:122",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "74727565",
                "id": 36612,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "bool",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "81:4:122",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "value": "true"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 36611,
              "name": "Random",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35924,
              "src": "74:6:122",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Random_$35924",
                "typeString": "contract Random"
              }
            },
            "id": 36613,
            "nodeType": "InheritanceSpecifier",
            "src": "74:12:122"
          }
        ],
        "contractDependencies": [
          2757,
          4661,
          8166,
          9340,
          35924,
          36213,
          43492,
          43947
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 36658,
        "linearizedBaseContracts": [
          36658,
          35924,
          2757,
          8166,
          4661,
          43947,
          43492,
          9340,
          36213
        ],
        "name": "RandomTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 36625,
              "nodeType": "Block",
              "src": "168:49:122",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 36621,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36615,
                        "src": "188:11:122",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 36622,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36617,
                        "src": "201:10:122",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 36620,
                      "name": "addRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35817,
                      "src": "174:13:122",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 36623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "174:38:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36624,
                  "nodeType": "ExpressionStatement",
                  "src": "174:38:122"
                }
              ]
            },
            "documentation": null,
            "id": 36626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTestRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36615,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 36626,
                  "src": "118:19:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "118:7:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36617,
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "scope": 36626,
                  "src": "139:18:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36616,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "139:7:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "117:41:122"
            },
            "returnParameters": {
              "id": 36619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "168:0:122"
            },
            "scope": 36658,
            "src": "91:126:122",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 36640,
              "nodeType": "Block",
              "src": "313:55:122",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 36636,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36628,
                        "src": "346:11:122",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 36637,
                        "name": "cur",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36630,
                        "src": "359:3:122",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 36635,
                      "name": "_getBlockRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35907,
                      "src": "326:19:122",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256) view returns (bytes32)"
                      }
                    },
                    "id": 36638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "326:37:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 36634,
                  "id": 36639,
                  "nodeType": "Return",
                  "src": "319:44:122"
                }
              ]
            },
            "documentation": null,
            "id": 36641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTestRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36628,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 36641,
                  "src": "247:19:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "247:7:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36630,
                  "name": "cur",
                  "nodeType": "VariableDeclaration",
                  "scope": 36641,
                  "src": "268:11:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "268:7:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "246:34:122"
            },
            "returnParameters": {
              "id": 36634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36633,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 36641,
                  "src": "304:7:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36632,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:7:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "303:9:122"
            },
            "scope": 36658,
            "src": "220:148:122",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 36656,
              "nodeType": "Block",
              "src": "476:64:122",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 36651,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36643,
                        "src": "499:10:122",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 36652,
                        "name": "newCommitment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36645,
                        "src": "511:13:122",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 36653,
                        "name": "proposer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36647,
                        "src": "526:8:122",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 36650,
                      "name": "_revealAndCommit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35713,
                      "src": "482:16:122",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 36654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "482:53:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36655,
                  "nodeType": "ExpressionStatement",
                  "src": "482:53:122"
                }
              ]
            },
            "documentation": null,
            "id": 36657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevealAndCommit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36643,
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "scope": 36657,
                  "src": "400:18:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36642,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:7:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36645,
                  "name": "newCommitment",
                  "nodeType": "VariableDeclaration",
                  "scope": 36657,
                  "src": "420:21:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36644,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36647,
                  "name": "proposer",
                  "nodeType": "VariableDeclaration",
                  "scope": 36657,
                  "src": "443:16:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:122",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "399:61:122"
            },
            "returnParameters": {
              "id": 36649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "476:0:122"
            },
            "scope": 36658,
            "src": "371:169:122",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 36659,
        "src": "51:491:122"
      }
    ],
    "src": "0:543:122"
  },
  "legacyAST": {
    "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/test/RandomTest.sol",
    "exportedSymbols": {
      "RandomTest": [
        36658
      ]
    },
    "id": 36659,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 36609,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:122"
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/Random.sol",
        "file": "../Random.sol",
        "id": 36610,
        "nodeType": "ImportDirective",
        "scope": 36659,
        "sourceUnit": 35925,
        "src": "26:23:122",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "74727565",
                "id": 36612,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "bool",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "81:4:122",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "value": "true"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 36611,
              "name": "Random",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 35924,
              "src": "74:6:122",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Random_$35924",
                "typeString": "contract Random"
              }
            },
            "id": 36613,
            "nodeType": "InheritanceSpecifier",
            "src": "74:12:122"
          }
        ],
        "contractDependencies": [
          2757,
          4661,
          8166,
          9340,
          35924,
          36213,
          43492,
          43947
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 36658,
        "linearizedBaseContracts": [
          36658,
          35924,
          2757,
          8166,
          4661,
          43947,
          43492,
          9340,
          36213
        ],
        "name": "RandomTest",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 36625,
              "nodeType": "Block",
              "src": "168:49:122",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 36621,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36615,
                        "src": "188:11:122",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 36622,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36617,
                        "src": "201:10:122",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 36620,
                      "name": "addRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35817,
                      "src": "174:13:122",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_bytes32_$returns$__$",
                        "typeString": "function (uint256,bytes32)"
                      }
                    },
                    "id": 36623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "174:38:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36624,
                  "nodeType": "ExpressionStatement",
                  "src": "174:38:122"
                }
              ]
            },
            "documentation": null,
            "id": 36626,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "addTestRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36618,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36615,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 36626,
                  "src": "118:19:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36614,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "118:7:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36617,
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "scope": 36626,
                  "src": "139:18:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36616,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "139:7:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "117:41:122"
            },
            "returnParameters": {
              "id": 36619,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "168:0:122"
            },
            "scope": 36658,
            "src": "91:126:122",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 36640,
              "nodeType": "Block",
              "src": "313:55:122",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 36636,
                        "name": "blockNumber",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36628,
                        "src": "346:11:122",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 36637,
                        "name": "cur",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36630,
                        "src": "359:3:122",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 36635,
                      "name": "_getBlockRandomness",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35907,
                      "src": "326:19:122",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,uint256) view returns (bytes32)"
                      }
                    },
                    "id": 36638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "326:37:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 36634,
                  "id": 36639,
                  "nodeType": "Return",
                  "src": "319:44:122"
                }
              ]
            },
            "documentation": null,
            "id": 36641,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getTestRandomness",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36631,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36628,
                  "name": "blockNumber",
                  "nodeType": "VariableDeclaration",
                  "scope": 36641,
                  "src": "247:19:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36627,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "247:7:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36630,
                  "name": "cur",
                  "nodeType": "VariableDeclaration",
                  "scope": 36641,
                  "src": "268:11:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 36629,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "268:7:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "246:34:122"
            },
            "returnParameters": {
              "id": 36634,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36633,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 36641,
                  "src": "304:7:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36632,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "304:7:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "303:9:122"
            },
            "scope": 36658,
            "src": "220:148:122",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 36656,
              "nodeType": "Block",
              "src": "476:64:122",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 36651,
                        "name": "randomness",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36643,
                        "src": "499:10:122",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 36652,
                        "name": "newCommitment",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36645,
                        "src": "511:13:122",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 36653,
                        "name": "proposer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36647,
                        "src": "526:8:122",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 36650,
                      "name": "_revealAndCommit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 35713,
                      "src": "482:16:122",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,bytes32,address)"
                      }
                    },
                    "id": 36654,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "482:53:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36655,
                  "nodeType": "ExpressionStatement",
                  "src": "482:53:122"
                }
              ]
            },
            "documentation": null,
            "id": 36657,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testRevealAndCommit",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 36648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36643,
                  "name": "randomness",
                  "nodeType": "VariableDeclaration",
                  "scope": 36657,
                  "src": "400:18:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36642,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "400:7:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36645,
                  "name": "newCommitment",
                  "nodeType": "VariableDeclaration",
                  "scope": 36657,
                  "src": "420:21:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 36644,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "420:7:122",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 36647,
                  "name": "proposer",
                  "nodeType": "VariableDeclaration",
                  "scope": 36657,
                  "src": "443:16:122",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36646,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "443:7:122",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "399:61:122"
            },
            "returnParameters": {
              "id": 36649,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "476:0:122"
            },
            "scope": 36658,
            "src": "371:169:122",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          }
        ],
        "scope": 36659,
        "src": "51:491:122"
      }
    ],
    "src": "0:543:122"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2022-05-06T03:53:13.045Z",
  "devdoc": {
    "methods": {
      "checkProofOfPossession(address,bytes,bytes)": {
        "params": {
          "blsKey": "The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.",
          "blsPop": "The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.",
          "sender": "The address signed by the BLS key to generate the proof of possession."
        },
        "return": "True upon success."
      },
      "computeCommitment(bytes32)": {
        "params": {
          "randomness": "The value for which the commitment hash is computed."
        },
        "return": "Commitment parameter."
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "params": {
          "_decimals": "precision",
          "aDenominator": "Denominator of first fraction",
          "aNumerator": "Numerator of first fraction",
          "bDenominator": "Denominator of exponentiated fraction",
          "bNumerator": "Numerator of exponentiated fraction",
          "exponent": "exponent to raise b to"
        },
        "return": "numerator/denominator of the computed quantity (not reduced)."
      },
      "getBlockNumberFromHeader(bytes)": {
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Block number."
      },
      "getBlockRandomness(uint256)": {
        "params": {
          "blockNumber": "The number of block whose randomness value we want to know."
        },
        "return": "The associated randomness value."
      },
      "getEpochNumber()": {
        "return": "Current epoch number."
      },
      "getEpochNumberOfBlock(uint256)": {
        "params": {
          "blockNumber": "Block number where epoch number is calculated."
        },
        "return": "Epoch number."
      },
      "getEpochSize()": {
        "return": "The current epoch size in blocks."
      },
      "getParentSealBitmap(uint256)": {
        "params": {
          "blockNumber": "Block number to retrieve. Must be within 4 epochs of the current number."
        },
        "return": "Bitmap parent seal with set bits at indices corresponding to signing validators."
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Bitmap parent seal with set bits at indices correspoinding to signing validators."
      },
      "getVersionNumber()": {
        "return": "The storage, major, minor, and patch version of the contract."
      },
      "hashHeader(bytes)": {
        "params": {
          "header": "RLP encoded header"
        },
        "return": "Header hash."
      },
      "initialize(uint256)": {
        "params": {
          "_randomnessBlockRetentionWindow": "Number of old random blocks whose randomness values can be queried."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "minQuorumSize(uint256)": {
        "details": "Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))"
      },
      "minQuorumSizeInCurrentSet()": {
        "return": "Byzantine quorum of validators."
      },
      "numberValidatorsInCurrentSet()": {
        "return": "Size of the current elected validator set."
      },
      "numberValidatorsInSet(uint256)": {
        "params": {
          "blockNumber": "Block number to retrieve the validator set from."
        },
        "return": "Size of the validator set."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "random()": {
        "return": "Returns the current randomness value."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "revealAndCommit(bytes32,bytes32,address)": {
        "details": "If the Random contract is pointed to by the Registry, the first transaction in a block should be a special transaction to address 0x0 with 64 bytes of data - the concatenated `randomness` and `newCommitment`. Before running regular transactions, this function should be called.",
        "params": {
          "newCommitment": "The hash of randomness that will be revealed in the future.",
          "proposer": "Address of the block proposer.",
          "randomness": "Bytes that will be added to the entropy pool."
        }
      },
      "setRandomnessBlockRetentionWindow(uint256)": {
        "params": {
          "value": "Number of old random blocks whose randomness values can be queried."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "params": {
          "index": "Index of requested validator in the validator set."
        },
        "return": "Address of validator at the requested index."
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "params": {
          "blockNumber": "Block number to retrieve the validator set from.",
          "index": "Index of requested validator in the validator set."
        },
        "return": "Address of validator at the requested index."
      }
    }
  },
  "userdoc": {
    "methods": {
      "checkProofOfPossession(address,bytes,bytes)": {
        "notice": "Checks a BLS proof of possession."
      },
      "computeCommitment(bytes32)": {
        "notice": "Compute the commitment hash for a given randomness value."
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "calculate a * b^x for fractions a, b to `decimals` precision"
      },
      "getBlockNumberFromHeader(bytes)": {
        "notice": "Parses block number out of header."
      },
      "getBlockRandomness(uint256)": {
        "notice": "Get randomness values of previous blocks."
      },
      "getEpochNumber()": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochNumberOfBlock(uint256)": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochSize()": {
        "notice": "Returns the current epoch size in blocks."
      },
      "getParentSealBitmap(uint256)": {
        "notice": "Gets the parent seal bitmap from the header at the given block number."
      },
      "getVerifiedSealBitmapFromHeader(bytes)": {
        "notice": "Verifies the BLS signature on the header and returns the seal bitmap. The validator set used for verification is retrieved based on the parent hash field of the header.  If the parent hash is not in the blockchain, verification fails."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "hashHeader(bytes)": {
        "notice": "Computes hash of header."
      },
      "initialize(uint256)": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "minQuorumSize(uint256)": {
        "notice": "Returns the minimum number of required signers for a given block number."
      },
      "minQuorumSizeInCurrentSet()": {
        "notice": "Computes byzantine quorum from current validator set size"
      },
      "numberValidatorsInCurrentSet()": {
        "notice": "Gets the size of the current elected validator set."
      },
      "numberValidatorsInSet(uint256)": {
        "notice": "Gets the size of the validator set that must sign the given block number."
      },
      "random()": {
        "notice": "Querying the current randomness value."
      },
      "revealAndCommit(bytes32,bytes32,address)": {
        "notice": "Implements step of the randomness protocol."
      },
      "setRandomnessBlockRetentionWindow(uint256)": {
        "notice": "Sets the number of old random blocks whose randomness values can be queried."
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "notice": "Gets a validator address from the current validator set."
      },
      "validatorSignerAddressFromSet(uint256,uint256)": {
        "notice": "Gets a validator address from the validator set at the given block number."
      }
    }
  }
}