{
  "contractName": "DoubleSigningSlasherTest",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "DoubleSigningSlashPerformed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "SlashingIncentivesSet",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "headerA",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "headerB",
          "type": "bytes"
        }
      ],
      "name": "checkForDoubleSigning",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "blsKey",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "blsPop",
          "type": "bytes"
        }
      ],
      "name": "checkProofOfPossession",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "aNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "aDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bNumerator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "bDenominator",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "exponent",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_decimals",
          "type": "uint256"
        }
      ],
      "name": "fractionMulExp",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getBlockNumberFromHeader",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getEpochNumberOfBlock",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getEpochSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "getParentSealBitmap",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "getVerifiedSealBitmapFromHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "address",
          "name": "validator",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "groupMembershipHistoryIndex",
          "type": "uint256"
        }
      ],
      "name": "groupMembershipAtBlock",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        }
      ],
      "name": "hashHeader",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_penalty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reward",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "minQuorumSize",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minQuorumSizeInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "numberValidatorsInCurrentSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "numberValidatorsInSet",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "number",
          "type": "uint256"
        }
      ],
      "name": "setBlockNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "epoch",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        }
      ],
      "name": "setEpochSigner",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "num",
          "type": "uint256"
        }
      ],
      "name": "setNumberValidators",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        },
        {
          "internalType": "bytes32",
          "name": "bitmap",
          "type": "bytes32"
        }
      ],
      "name": "setParentSealBitmap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "name": "setSlashingIncentives",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "bytes",
          "name": "header",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "bitmap",
          "type": "bytes32"
        }
      ],
      "name": "setVerifiedSealBitmap",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "signer",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "headerA",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "headerB",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "groupMembershipHistoryIndex",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "validatorElectionLessers",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "validatorElectionGreaters",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "validatorElectionIndices",
          "type": "uint256[]"
        },
        {
          "internalType": "address[]",
          "name": "groupElectionLessers",
          "type": "address[]"
        },
        {
          "internalType": "address[]",
          "name": "groupElectionGreaters",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "groupElectionIndices",
          "type": "uint256[]"
        }
      ],
      "name": "slash",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "slashingIncentives",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "penalty",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "reward",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromCurrentSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "blockNumber",
          "type": "uint256"
        }
      ],
      "name": "validatorSignerAddressFromSet",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"DoubleSigningSlashPerformed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"SlashingIncentivesSet\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"headerA\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"headerB\",\"type\":\"bytes\"}],\"name\":\"checkForDoubleSigning\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"blsKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"blsPop\",\"type\":\"bytes\"}],\"name\":\"checkProofOfPossession\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"aNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"aDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bNumerator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"bDenominator\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"exponent\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_decimals\",\"type\":\"uint256\"}],\"name\":\"fractionMulExp\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getBlockNumberFromHeader\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getEpochNumberOfBlock\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getEpochSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"getParentSealBitmap\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"getVerifiedSealBitmapFromHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"address\",\"name\":\"validator\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"groupMembershipHistoryIndex\",\"type\":\"uint256\"}],\"name\":\"groupMembershipAtBlock\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"}],\"name\":\"hashHeader\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_penalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reward\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"minQuorumSize\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minQuorumSizeInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"numberValidatorsInCurrentSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"numberValidatorsInSet\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"number\",\"type\":\"uint256\"}],\"name\":\"setBlockNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"epoch\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"}],\"name\":\"setEpochSigner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"num\",\"type\":\"uint256\"}],\"name\":\"setNumberValidators\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"bitmap\",\"type\":\"bytes32\"}],\"name\":\"setParentSealBitmap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"setSlashingIncentives\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"header\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"bitmap\",\"type\":\"bytes32\"}],\"name\":\"setVerifiedSealBitmap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"signer\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"headerA\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"headerB\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"groupMembershipHistoryIndex\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"validatorElectionLessers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"validatorElectionGreaters\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"validatorElectionIndices\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"groupElectionLessers\",\"type\":\"address[]\"},{\"internalType\":\"address[]\",\"name\":\"groupElectionGreaters\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"groupElectionIndices\",\"type\":\"uint256[]\"}],\"name\":\"slash\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"slashingIncentives\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"penalty\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromCurrentSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"blockNumber\",\"type\":\"uint256\"}],\"name\":\"validatorSignerAddressFromSet\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"checkForDoubleSigning(address,uint256,bytes,bytes)\":{\"params\":{\"headerA\":\"First double signed block header.\",\"headerB\":\"Second double signed block header.\",\"index\":\"Validator index at the block.\",\"signer\":\"The signer to be slashed.\"},\"return\":\"Block number where double signing occured. Throws if no double signing is detected.\"},\"checkProofOfPossession(address,bytes,bytes)\":{\"params\":{\"blsKey\":\"The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.\",\"blsPop\":\"The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.\",\"sender\":\"The address signed by the BLS key to generate the proof of possession.\"},\"return\":\"True upon success.\"},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"params\":{\"_decimals\":\"precision\",\"aDenominator\":\"Denominator of first fraction\",\"aNumerator\":\"Numerator of first fraction\",\"bDenominator\":\"Denominator of exponentiated fraction\",\"bNumerator\":\"Numerator of exponentiated fraction\",\"exponent\":\"exponent to raise b to\"},\"return\":\"numerator/denominator of the computed quantity (not reduced).\"},\"getEpochNumber()\":{\"return\":\"Current epoch number.\"},\"getEpochNumberOfBlock(uint256)\":{\"params\":{\"blockNumber\":\"Block number where epoch number is calculated.\"},\"return\":\"Epoch number.\"},\"getEpochSize()\":{\"return\":\"The current epoch size in blocks.\"},\"getVersionNumber()\":{\"return\":\"The storage, major, minor, and patch version of the contract.\"},\"groupMembershipAtBlock(address,uint256,uint256)\":{\"params\":{\"blockNumber\":\"Block number associated with slashing.\",\"groupMembershipHistoryIndex\":\"Index used for history lookup.\",\"validator\":\"Validator that was slashed.\"},\"return\":\"Group to be slashed.\"},\"initialize(address,uint256,uint256)\":{\"params\":{\"_penalty\":\"Penalty for the slashed signer.\",\"_reward\":\"Reward that the observer gets.\",\"registryAddress\":\"The address of the registry core smart contract.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"minQuorumSize(uint256)\":{\"details\":\"Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))\"},\"minQuorumSizeInCurrentSet()\":{\"return\":\"Byzantine quorum of validators.\"},\"numberValidatorsInCurrentSet()\":{\"return\":\"Size of the current elected validator set.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"setSlashingIncentives(uint256,uint256)\":{\"params\":{\"penalty\":\"Penalty for the slashed signer.\",\"reward\":\"Reward that the observer gets.\"}},\"slash(address,uint256,bytes,bytes,uint256,address[],address[],uint256[],address[],address[],uint256[])\":{\"params\":{\"groupElectionGreaters\":\"Greater pointers for group slashing.\",\"groupElectionIndices\":\"Vote indices for group slashing.\",\"groupElectionLessers\":\"Lesser pointers for group slashing.\",\"groupMembershipHistoryIndex\":\"Group membership index from where the group should be found.\",\"headerA\":\"First double signed block header.\",\"headerB\":\"Second double signed block header.\",\"index\":\"Validator index at the block.\",\"signer\":\"The signer to be slashed.\",\"validatorElectionGreaters\":\"Greater pointers for validator slashing.\",\"validatorElectionIndices\":\"Vote indices for validator slashing.\",\"validatorElectionLessers\":\"Lesser pointers for validator slashing.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"params\":{\"index\":\"Index of requested validator in the validator set.\"},\"return\":\"Address of validator at the requested index.\"}}},\"userdoc\":{\"methods\":{\"checkForDoubleSigning(address,uint256,bytes,bytes)\":{\"notice\":\"Given two RLP encoded blocks, calls into precompiles to require that the two block hashes are different, have the same height, have a quorum of signatures, and that `signer` was part of the quorum.\"},\"checkProofOfPossession(address,bytes,bytes)\":{\"notice\":\"Checks a BLS proof of possession.\"},\"fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)\":{\"notice\":\"calculate a * b^x for fractions a, b to `decimals` precision\"},\"getEpochNumber()\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochNumberOfBlock(uint256)\":{\"notice\":\"Returns the epoch number at a block.\"},\"getEpochSize()\":{\"notice\":\"Returns the current epoch size in blocks.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"groupMembershipAtBlock(address,uint256,uint256)\":{\"notice\":\"Returns the group to be slashed.\"},\"initialize(address,uint256,uint256)\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"minQuorumSize(uint256)\":{\"notice\":\"Returns the minimum number of required signers for a given block number.\"},\"minQuorumSizeInCurrentSet()\":{\"notice\":\"Computes byzantine quorum from current validator set size\"},\"numberValidatorsInCurrentSet()\":{\"notice\":\"Gets the size of the current elected validator set.\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"setSlashingIncentives(uint256,uint256)\":{\"notice\":\"Sets slashing incentives.\"},\"slash(address,uint256,bytes,bytes,uint256,address[],address[],uint256[],address[],address[],uint256[])\":{\"notice\":\"Requires that `eval` returns true and that this evidence has not already been used to slash `signer`. If so, fetches the `account` associated with `signer` and the group that `signer` was a member of during the corresponding epoch. Then, calls `LockedGold.slash` on both the validator and group accounts. Calls `Validators.removeSlashedMember` to remove the validator from its current group if it is a member of one. Finally, stores that hash(signer, blockNumber) has been slashed.\"},\"validatorSignerAddressFromCurrentSet(uint256)\":{\"notice\":\"Gets a validator address from the current validator set.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/test/DoubleSigningSlasherTest.sol\":\"DoubleSigningSlasherTest\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/Initializable.sol\":{\"keccak256\":\"0xad98825b5d3181f4ce2d2dbe84adeb0cd7960fd80fafb0813539d6d96ba42ab8\",\"urls\":[\"bzz-raw://f76468328c78b80eeaaaadb7b186e41da4a34134446fe11bb707106322b8e32f\",\"dweb:/ipfs/QmNyjyVjPX1GKFibDcJBJyZQ57nhusG3DhPjAGnY7iaU39\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/UsingPrecompiles.sol\":{\"keccak256\":\"0x9fd156a9a16dac8deb0f55f54e7f1d7eec89eed061577358e46195121d7065b7\",\"urls\":[\"bzz-raw://1395d9c956cb4b25c9b514e22f1f9a21d93c724a6af3e9ca1306227416d57886\",\"dweb:/ipfs/QmQ5LVzDgemZ1NNkV5r5DyeLgiHtLc2MX1kCjhW7STSDV7\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/UsingRegistry.sol\":{\"keccak256\":\"0xfdd9e70bd58259b491ec54779715d7469ab4f804836bf5f63ff86921d0cae056\",\"urls\":[\"bzz-raw://e55f23f464e49c42b1f31782dcb88cbd2ca64e050d5f110ccdc2ffd50cd582ff\",\"dweb:/ipfs/QmfBiet9GbT9S9rn9SG9CkyXQGAMQRuk4EBmChY1m4kv47\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IAccounts.sol\":{\"keccak256\":\"0x6132a2e3105dbf00b52447db8bc307b052b2d02c0d00497bd0074ae3ce48027a\",\"urls\":[\"bzz-raw://07380d2593f1359e1440153597d16d1b4085a421f52909fafe3fa58f13088c62\",\"dweb:/ipfs/QmSjtmfFswK15Ta5NePg5voNVh9X63muCLCbQKgAZFG4rg\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"keccak256\":\"0x9f902faa66069500c7b5e8c9a53ca6afff99dfe6cd3915aa0f3c4fe6a9905ba5\",\"urls\":[\"bzz-raw://880c77a981296abbf6fe9a7e3e0d5d441b19de70d310b10f4a469ce344e8e96c\",\"dweb:/ipfs/QmUAY1xYLXUQXwgBoRFaXFv5z9a6sMYT9v7WdEAAeSGCwW\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"keccak256\":\"0xd4711baf3e38a0abeb3ef48eaab21aeb917f5e0a185cf463fddeb4bf20277b68\",\"urls\":[\"bzz-raw://8f350863943ab54dcf4d5ea525c16748f59263bf36c1d85251c1164d0e592032\",\"dweb:/ipfs/QmXAG6fvVQKM86rVsk6R3ndEoHtS9fcAAVxBApJ5j3LWeK\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IFreezer.sol\":{\"keccak256\":\"0x12508a9d528d1b63dc06644e9d97e864acc94f8a763cf8555e90bcdf1b2f8b21\",\"urls\":[\"bzz-raw://32df109167a13e684c9b296a0e13dda1899e418788eb59bf59aedd7a3ce65466\",\"dweb:/ipfs/QmR6BJCRFMSQpBpnSH2vzLE959FhXnmreDocWWc7fUYnnu\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IRegistry.sol\":{\"keccak256\":\"0x78ba82722d28e815c117f33d4659404f0707dab1c9b51f1bce5d4c15d6c94537\",\"urls\":[\"bzz-raw://0cea84b948896aece11c64b97c22b0f08f86cb45e166a004db4a88a98952cbfa\",\"dweb:/ipfs/QmR4uSGcs4nmph6duroscchstSwMzWSV8CDvD2SSnWuHbs\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/DoubleSigningSlasher.sol\":{\"keccak256\":\"0x61b492cdc1623919112455e1bf8b32702cf178508a5aed80606bb33f87abcbb9\",\"urls\":[\"bzz-raw://59d13370b74a01f833f23d1da691f93779d39657e90c462e664844210d115f4d\",\"dweb:/ipfs/Qmezenqgx5LCFzKK7aQtjuo2LpAyqP4umuspWoxyrvTv7Q\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/SlasherUtil.sol\":{\"keccak256\":\"0x54c3fc6d294743655e1de44df5c08403eae5adb5ea55f80c76a1c07a7f505b11\",\"urls\":[\"bzz-raw://a347be6249497c6899b0b30383a0d374755f963be80c8fbdd5dd3ab4c85ef1fe\",\"dweb:/ipfs/Qmd1iMXHNs67y47ciMeazry4LBdLmki3o9Fh9Zzwte52Dv\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/IElection.sol\":{\"keccak256\":\"0xebcd0d7dbbb2df503967ad63c9ddd437cef89a94ba2cc2f9ce274f41a4c901ee\",\"urls\":[\"bzz-raw://84dcf3a9952f1ce9a9110abb1783dfead290fd17c28216c5acb22de9d090921d\",\"dweb:/ipfs/QmeNoLz8WcHX9GLcBfQChXFHsFDRaVRRXnPXXvB2qVTaSZ\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/IGovernance.sol\":{\"keccak256\":\"0x227bf6a6b56411c368c9752761e2202ad71f2199deb2b114b125712b63372b7e\",\"urls\":[\"bzz-raw://cabeae6e6c47364291f12cf69658dcf5bdd8ac7eebda53d48a2b03aab96386a3\",\"dweb:/ipfs/QmUtPSC4hVz79XVVjFwQ6CozMd6oAR1m6yrPFkHD5sCdB1\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/ILockedGold.sol\":{\"keccak256\":\"0x577d01d8a1fbf47980fb5ffd36de2084ec255889b15671adfecd3a285df4f253\",\"urls\":[\"bzz-raw://6b955b6829748cd136fa92c3a434f5419e4eb024d535a854900ad48bd4151b67\",\"dweb:/ipfs/QmXM5uL5dsKecYyedAzsrZXAp81NtWQErbbVEFccJ6ZqiY\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/IValidators.sol\":{\"keccak256\":\"0x524a9e48689537421f97296ffd57fa0f2887117f9af9e71dd5ed17e66ba92d2a\",\"urls\":[\"bzz-raw://cf5d0c2f6ee9b2c8e270162455177e9c3bac79ac07d4f37c86f7f2ee5978a756\",\"dweb:/ipfs/QmZTKmytn1Wi3QfU3bHuSaSeYQzRrFKehyngrg37rHD3vV\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/test/DoubleSigningSlasherTest.sol\":{\"keccak256\":\"0xcef2f182b82a817a28b6aab584d695e716378a5374f15b2c224fe9358ef2ad05\",\"urls\":[\"bzz-raw://36a3911cfedc405c052c3a764177a5c1d7505f696c15c6718a14a683500d8925\",\"dweb:/ipfs/QmPi6S49h33951mqMs8vELbMxpPpg1bWUDxVDCjPQ6grCK\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/test/MockUsingPrecompiles.sol\":{\"keccak256\":\"0x905b909244747a872ecc4a969faea195c7a65c4d53a980d6a7e5e6a447670cd5\",\"urls\":[\"bzz-raw://8f43d0d5ff5d8c01a8967258c448dec61b3e265ceddee7ea92c0652f0502a8fc\",\"dweb:/ipfs/QmZKSMo99brEg38uH8WKfznMHdxpnAgFpXp7HFHGeVGnV5\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/interfaces/IAttestations.sol\":{\"keccak256\":\"0x979aaac636fe6a64f97034bf0bf062b5f0efd6e6f9f3fe84e81180f82eeb7a3e\",\"urls\":[\"bzz-raw://c1255d08278188247ef81fb09edd2d1d4a019fb0fe80fd3d9850415c5eb5caaf\",\"dweb:/ipfs/QmcJvqSM35nAR8p8LwVczhnaY6VwTRThNjfCzkzeiAkz45\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/interfaces/IRandom.sol\":{\"keccak256\":\"0xd65fd529d133cbde94628b39b0d2f0f4b6d0af2e8f97c0e6b4b2cd476479ed1d\",\"urls\":[\"bzz-raw://f2c6fe351990bfdeb55484bd3622d44c8f58579a7212d5cce71a82df846497f5\",\"dweb:/ipfs/QmRDDTXUqbA6dHfJe4ZS1442JDAfwoHq2eH9LHnQyzsh44\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/IExchange.sol\":{\"keccak256\":\"0xf2934d473f1b42566dbd90b4777725c966524bab78ce734b51f2510c6ef83ebb\",\"urls\":[\"bzz-raw://9fa1c7d72149b281ce9f54e636e37753fffcfa45833753ca700b8861a2a25a22\",\"dweb:/ipfs/QmUAgNosF21EroMTGgEjy6qJZU7njH3YMQwqj7j515HDVa\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/IReserve.sol\":{\"keccak256\":\"0x8da4d702b47a7e60981ca416f2d0f24a3c1dea9ab44f04b695c0fde02c84a38e\",\"urls\":[\"bzz-raw://198fb3cd945e374926e3d6bcb2469b7f5c635e78b40417a4b3a1eacabeca234b\",\"dweb:/ipfs/Qma8RRSqksFCzL5gWTXmGtJvC4Mw1bgquvN33nKhrRwUrD\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/ISortedOracles.sol\":{\"keccak256\":\"0x8f80e430800fff2f04f3981c4b73a2a374b2c2150543a2de51fcf7ba4fb08789\",\"urls\":[\"bzz-raw://f1a472385d5fa1b1cc4ab6ff948cd11f86c55328841d89f39f02b64449d3ac1a\",\"dweb:/ipfs/QmSYfwR8RJ2nyzt9VJtLKqaUHwAPfz579vhcQP7LRLaqTe\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/IStableToken.sol\":{\"keccak256\":\"0x091e577acecdf050fe4c41133b11fe330d07050c5fe78b65bfce32ccc29e51c6\",\"urls\":[\"bzz-raw://94f7d7578274be8212b8c9a3f0759d884969b05a7f0c64c7c9352102f4e51ab4\",\"dweb:/ipfs/Qmd3bERcFLrrvpURuzKUg6YCSFisNQ36YpRLWkxEcS1Tkj\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106102065760003560e01c80637b1039991161011a5780639b2b592f116100ad578063df4da4611161007c578063df4da46114611357578063e50e652d14611375578063ec683072146113b7578063f2fde38b14611432578063fae8db0a1461147657610206565b80639b2b592f14611241578063a91ee0dc14611283578063bd0d9979146112c7578063d041d18a146112ff57610206565b80638cc26910116100e95780638cc2691014610cb85780638da5cb5b146111b75780638f32d59b146112015780639a7b3be71461122357610206565b80637b10399914610ae957806387ee8a0f14610b3357806388498aaf14610b515780638a88362614610be957610206565b80634b2c2f441161019d5780636c56c16d1161016c5780636c56c16d14610958578063715018a6146109905780637385e5da1461099a5780637a1ac61e146109b85780637a3aebe414610a1057610206565b80634b2c2f441461070f57806354255be0146107de5780635d180adb1461081157806367960e911461088957610206565b806323f0ab65116101d957806323f0ab651461045057806329d24b64146105da5780633b1eb4bf14610608578063462450c41461064a57610206565b806309f994471461020b5780630a05cd841461039b578063123633ea146103c0578063158ef93e1461042e575b600080fd5b6103856004803603608081101561022157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019064010000000081111561026857600080fd5b82018360208201111561027a57600080fd5b8035906020019184600183028401116401000000008311171561029c57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290803590602001906401000000008111156102ff57600080fd5b82018360208201111561031157600080fd5b8035906020019184600183028401116401000000008311171561033357600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506114b8565b6040518082815260200191505060405180910390f35b6103a36118b1565b604051808381526020018281526020019250505060405180910390f35b6103ec600480360360208110156103d657600080fd5b81019080803590602001909291905050506118c3565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610436611a14565b604051808215151515815260200191505060405180910390f35b6105c06004803603606081101561046657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001906401000000008111156104a357600080fd5b8201836020820111156104b557600080fd5b803590602001918460018302840111640100000000831117156104d757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561053a57600080fd5b82018360208201111561054c57600080fd5b8035906020019184600183028401116401000000008311171561056e57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611a27565b604051808215151515815260200191505060405180910390f35b610606600480360360208110156105f057600080fd5b8101908080359060200190929190505050611be0565b005b6106346004803603602081101561061e57600080fd5b8101908080359060200190929190505050611bea565b6040518082815260200191505060405180910390f35b61070d6004803603604081101561066057600080fd5b810190808035906020019064010000000081111561067d57600080fd5b82018360208201111561068f57600080fd5b803590602001918460018302840111640100000000831117156106b157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050611c04565b005b6107c86004803603602081101561072557600080fd5b810190808035906020019064010000000081111561074257600080fd5b82018360208201111561075457600080fd5b8035906020019184600183028401116401000000008311171561077657600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611c91565b6040518082815260200191505060405180910390f35b6107e6611d1f565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b6108476004803603604081101561082757600080fd5b810190808035906020019092919080359060200190929190505050611d46565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6109426004803603602081101561089f57600080fd5b81019080803590602001906401000000008111156108bc57600080fd5b8201836020820111156108ce57600080fd5b803590602001918460018302840111640100000000831117156108f057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050611dba565b6040518082815260200191505060405180910390f35b61098e6004803603604081101561096e57600080fd5b810190808035906020019092919080359060200190929190505050611dcb565b005b610998611de7565b005b6109a2611f20565b6040518082815260200191505060405180910390f35b610a0e600480360360608110156109ce57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190929190505050611f30565b005b610ad360048036036040811015610a2657600080fd5b8101908080359060200190640100000000811115610a4357600080fd5b820183602082011115610a5557600080fd5b80359060200191846001830284011164010000000083111715610a7757600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190929190505050611fef565b6040518082815260200191505060405180910390f35b610af1612080565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610b3b6120a6565b6040518082815260200191505060405180910390f35b610ba760048036036060811015610b6757600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff16906020019092919080359060200190929190803590602001909291905050506121ed565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610ca260048036036020811015610bff57600080fd5b8101908080359060200190640100000000811115610c1c57600080fd5b820183602082011115610c2e57600080fd5b80359060200191846001830284011164010000000083111715610c5057600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929050505061235e565b6040518082815260200191505060405180910390f35b6111b56004803603610160811015610ccf57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019092919080359060200190640100000000811115610d1657600080fd5b820183602082011115610d2857600080fd5b80359060200191846001830284011164010000000083111715610d4a57600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610dad57600080fd5b820183602082011115610dbf57600080fd5b80359060200191846001830284011164010000000083111715610de157600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019092919080359060200190640100000000811115610e4e57600080fd5b820183602082011115610e6057600080fd5b80359060200191846020830284011164010000000083111715610e8257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610ee257600080fd5b820183602082011115610ef457600080fd5b80359060200191846020830284011164010000000083111715610f1657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f82011690508083019250505050505050919291929080359060200190640100000000811115610f7657600080fd5b820183602082011115610f8857600080fd5b80359060200191846020830284011164010000000083111715610faa57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561100a57600080fd5b82018360208201111561101c57600080fd5b8035906020019184602083028401116401000000008311171561103e57600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561109e57600080fd5b8201836020820111156110b057600080fd5b803590602001918460208302840111640100000000831117156110d257600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192908035906020019064010000000081111561113257600080fd5b82018360208201111561114457600080fd5b8035906020019184602083028401116401000000008311171561116657600080fd5b919080806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505091929192905050506123ec565b005b6111bf612538565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b611209612561565b604051808215151515815260200191505060405180910390f35b61122b6125bf565b6040518082815260200191505060405180910390f35b61126d6004803603602081101561125757600080fd5b81019080803590602001909291905050506125cf565b6040518082815260200191505060405180910390f35b6112c56004803603602081101561129957600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506125db565b005b6112fd600480360360408110156112dd57600080fd5b81019080803590602001909291908035906020019092919050505061277f565b005b6113556004803603606081101561131557600080fd5b810190808035906020019092919080359060200190929190803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506128a8565b005b61135f61292d565b6040518082815260200191505060405180910390f35b6113a16004803603602081101561138b57600080fd5b8101908080359060200190929190505050612a69565b6040518082815260200191505060405180910390f35b611415600480360360c08110156113cd57600080fd5b81019080803590602001909291908035906020019092919080359060200190929190803590602001909291908035906020019092919080359060200190929190505050612ab4565b604051808381526020018281526020019250505060405180910390f35b6114746004803603602081101561144857600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050612cc8565b005b6114a26004803603602081101561148c57600080fd5b8101908080359060200190929190505050612d4e565b6040518082815260200191505060405180910390f35b60006114c382611dba565b6114cc84611dba565b1415611523576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613dc36021913960400191505060405180910390fd5b600061152e8461235e565b90506115398361235e565b8114611590576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180613e056027913960400191505060405180910390fd5b611599816125cf565b851061160d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f4261642076616c696461746f7220696e6465780000000000000000000000000081525060200191505060405180910390fd5b6116178582611d46565b73ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff16146116b7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5761736e27742061207369676e6572207769746820676976656e20696e64657881525060200191505060405180910390fd5b60006116c285611c91565b60001c905060006116d285611c91565b60001c90506000876001901b83161415611754576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f4469646e2774207369676e20666972737420626c6f636b00000000000000000081525060200191505060405180910390fd5b6000876001901b821614156117d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f4469646e2774207369676e207365636f6e6420626c6f636b000000000000000081525060200191505060405180910390fd5b6117da83612a69565b6117e383612d6b565b101561183a576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180613ce26025913960400191505060405180910390fd5b61184383612a69565b61184c82612d6b565b10156118a3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613e786026913960400191505060405180910390fd5b829350505050949350505050565b60028060000154908060010154905082565b60006060600060fa73ffffffffffffffffffffffffffffffffffffffff16844360405160200180838152602001828152602001925050506040516020818303038152906040526040518082805190602001908083835b6020831061193c5780518252602082019150602081019050602083039250611919565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d806000811461199c576040519150601f19603f3d011682016040523d82523d6000602084013e6119a1565b606091505b50809350819250505080611a00576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603d815260200180613d51603d913960400191505060405180910390fd5b611a0b826000612dd6565b92505050919050565b600060149054906101000a900460ff1681565b60008060fb73ffffffffffffffffffffffffffffffffffffffff16858585604051602001808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1660601b815260140183805190602001908083835b60208310611ab05780518252602082019150602081019050602083039250611a8d565b6001836020036101000a03801982511681845116808217855250505050505090500182805190602001908083835b60208310611b015780518252602082019150602081019050602083039250611ade565b6001836020036101000a03801982511681845116808217855250505050505090500193505050506040516020818303038152906040526040518082805190602001908083835b60208310611b6a5780518252602082019150602081019050602083039250611b47565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114611bca576040519150601f19603f3d011682016040523d82523d6000602084013e611bcf565b606091505b505080915050809150509392505050565b8060088190555050565b6000611bfd82611bf861292d565b612ded565b9050919050565b8060056000846040516020018082805190602001908083835b60208310611c405780518252602082019150602081019050602083039250611c1d565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001208152602001908152602001600020819055505050565b600060056000836040516020018082805190602001908083835b60208310611cce5780518252602082019150602081019050602083039250611cab565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001208152602001908152602001600020549050919050565b60008060008060018060016000839350829250819150809050935093509350935090919293565b600060076000611d5584612e35565b85604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120815260200190815260200160002060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905092915050565b600081805190602001209050919050565b8060066000848152602001908152602001600020819055505050565b611def612561565b611e61576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000611f2b43612a69565b905090565b600060149054906101000a900460ff1615611fb3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff021916908315150217905550611fd733612e74565b611fe0836125db565b611fea828261277f565b505050565b60008160096000856040516020018082805190602001908083835b6020831061202d578051825260208201915060208101905060208303925061200a565b6001836020036101000a0380198251168184511680821785525050505050509050019150506040516020818303038152906040528051906020012081526020019081526020016000208190555092915050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006060600060f973ffffffffffffffffffffffffffffffffffffffff1643604051602001808281526020019150506040516020818303038152906040526040518082805190602001908083835b6020831061211757805182526020820191506020810190506020830392506120f4565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114612177576040519150601f19603f3d011682016040523d82523d6000602084013e61217c565b606091505b508093508192505050806121db576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526035815260200180613d8e6035913960400191505060405180910390fd5b6121e6826000612dd6565b9250505090565b6000806121f984611bea565b90506000811415612272576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f43616e6e6f7420736c617368206f6e2065706f6368203000000000000000000081525060200191505060405180910390fd5b61227a612fb8565b73ffffffffffffffffffffffffffffffffffffffff1663eb1d0b42866122aa6001856130b390919063ffffffff16565b866040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001838152602001828152602001935050505060206040518083038186803b15801561231957600080fd5b505afa15801561232d573d6000803e3d6000fd5b505050506040513d602081101561234357600080fd5b81019080805190602001909291905050509150509392505050565b600060096000836040516020018082805190602001908083835b6020831061239b5780518252602082019150602081019050602083039250612378565b6001836020036101000a038019825116818451168082178552505050505050905001915050604051602081830303815290604052805190602001208152602001908152602001600020549050919050565b6123f68b8a6130fd565b6124008b896130fd565b600061240e8c8c8c8c6114b8565b9050600061241a613249565b73ffffffffffffffffffffffffffffffffffffffff166393c5c4878e6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561249657600080fd5b505afa1580156124aa573d6000803e3d6000fd5b505050506040513d60208110156124c057600080fd5b810190808051906020019092919050505090506124e58133848c8c8c8c8c8c8c613344565b818173ffffffffffffffffffffffffffffffffffffffff167fca7992de940988854714f90c0236621d5b6b850313f03eeea47f7028aaecea4060405160405180910390a350505050505050505050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166125a361385f565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b60006125ca43611bea565b905090565b60006008549050919050565b6125e3612561565b612655576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156126f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b612787612561565b6127f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b808211612851576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526024815260200180613d076024913960400191505060405180910390fd5b81600260000181905550806002600101819055507f716dc7c34384df36c6ccc5a2949f2ce9b019f5d4075ef39139a80038a4fdd1c38282604051808381526020018281526020019250505060405180910390a15050565b80600760008585604051602001808381526020018281526020019250505060405160208183030381529060405280519060200120815260200190815260200160002060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550505050565b60006060600060f873ffffffffffffffffffffffffffffffffffffffff166040516020016040516020818303038152906040526040518082805190602001908083835b602083106129935780518252602082019150602081019050602083039250612970565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d80600081146129f3576040519150601f19603f3d011682016040523d82523d6000602084013e6129f8565b606091505b50809350819250505080612a57576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180613e536025913960400191505060405180910390fd5b612a62826000612dd6565b9250505090565b6000612aad6003612a9f6002612a916002612a83886125cf565b61386790919063ffffffff16565b6138ed90919063ffffffff16565b61397590919063ffffffff16565b9050919050565b60008060008714158015612ac9575060008514155b612b3b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f612064656e6f6d696e61746f72206973207a65726f000000000000000000000081525060200191505060405180910390fd5b6000806000606060fc73ffffffffffffffffffffffffffffffffffffffff168c8c8c8c8c8c6040516020018087815260200186815260200185815260200184815260200183815260200182815260200196505050505050506040516020818303038152906040526040518082805190602001908083835b60208310612bd55780518252602082019150602081019050602083039250612bb2565b6001836020036101000a038019825116818451168082178552505050505050905001915050600060405180830381855afa9150503d8060008114612c35576040519150601f19603f3d011682016040523d82523d6000602084013e612c3a565b606091505b50809250819350505081612c99576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180613e2c6027913960400191505060405180910390fd5b612ca4816000612dd6565b9350612cb1816020612dd6565b925083839550955050505050965096945050505050565b612cd0612561565b612d42576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b612d4b81612e74565b50565b600060066000838152602001908152602001600020549050919050565b60008060009050600083905060008090505b610100811015612dcb5760018083161415612da957612da66001846138ed90919063ffffffff16565b92505b600182901c9150612dc46001826138ed90919063ffffffff16565b9050612d7d565b508192505050919050565b6000612de283836139bf565b60001c905092915050565b600080828481612df957fe5b0490506000838581612e0757fe5b061415612e175780915050612e2f565b612e2b6001826138ed90919063ffffffff16565b9150505b92915050565b600080606490506000818481612e4757fe5b0490506000828581612e5557fe5b061415612e66578092505050612e6f565b60018101925050505b919050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612efa576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613d2b6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f56616c696461746f727300000000000000000000000000000000000000000000815250600a019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561307357600080fd5b505afa158015613087573d6000803e3d6000fd5b505050506040513d602081101561309d57600080fd5b8101908080519060200190929190505050905090565b60006130f583836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250613a60565b905092915050565b600061310882611dba565b9050600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082815260200190815260200160002060009054906101000a900460ff16156131db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600f8152602001807f416c726561647920736c6173686564000000000000000000000000000000000081525060200191505060405180910390fd5b6001600460008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060006101000a81548160ff021916908315150217905550505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f4163636f756e74730000000000000000000000000000000000000000000000008152506008019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561330457600080fd5b505afa158015613318573d6000803e3d6000fd5b505050506040513d602081101561332e57600080fd5b8101908080519060200190929190505050905090565b600061334e613b20565b90508073ffffffffffffffffffffffffffffffffffffffff166331993fc98c6002600001548d6002600101548c8c8c6040518863ffffffff1660e01b8152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561344757808201518184015260208101905061342c565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561348957808201518184015260208101905061346e565b50505050905001848103825285818151815260200191508051906020019060200280838360005b838110156134cb5780820151818401526020810190506134b0565b505050509050019a5050505050505050505050600060405180830381600087803b1580156134f857600080fd5b505af115801561350c573d6000803e3d6000fd5b50505050600061351d8c8b8b6121ed565b9050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561355657fe5b8173ffffffffffffffffffffffffffffffffffffffff166331993fc9826002600001548e6002600101548a8a8a6040518863ffffffff1660e01b8152600401808873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018781526020018673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001858152602001806020018060200180602001848103845287818151815260200191508051906020019060200280838360005b8381101561364d578082015181840152602081019050613632565b50505050905001848103835286818151815260200191508051906020019060200280838360005b8381101561368f578082015181840152602081019050613674565b50505050905001848103825285818151815260200191508051906020019060200280838360005b838110156136d15780820151818401526020810190506136b6565b505050509050019a5050505050505050505050600060405180830381600087803b1580156136fe57600080fd5b505af1158015613712573d6000803e3d6000fd5b505050506000613720612fb8565b90508073ffffffffffffffffffffffffffffffffffffffff1663e33301aa8e6040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b1580156137a157600080fd5b505af11580156137b5573d6000803e3d6000fd5b505050508073ffffffffffffffffffffffffffffffffffffffff1663c22d3bba836040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15801561383857600080fd5b505af115801561384c573d6000803e3d6000fd5b5050505050505050505050505050505050565b600033905090565b60008083141561387a57600090506138e7565b600082840290508284828161388b57fe5b04146138e2576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613de46021913960400191505060405180910390fd5b809150505b92915050565b60008082840190508381101561396b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b60006139b783836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613c1b565b905092915050565b60006139d56020836138ed90919063ffffffff16565b83511015613a4b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f736c6963696e67206f7574206f662072616e676500000000000000000000000081525060200191505060405180910390fd5b60006020830184015190508091505092915050565b6000838311158290613b0d576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613ad2578082015181840152602081019050613ab7565b50505050905090810190601f168015613aff5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f4c6f636b6564476f6c6400000000000000000000000000000000000000000000815250600a019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613bdb57600080fd5b505afa158015613bef573d6000803e3d6000fd5b505050506040513d6020811015613c0557600080fd5b8101908080519060200190929190505050905090565b60008083118290613cc7576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b83811015613c8c578082015181840152602081019050613c71565b50505050905090810190601f168015613cb95780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b506000838581613cd357fe5b04905080915050939250505056fe4e6f7420656e6f756768207369676e65727320696e2074686520666972737420626c6f636b50656e616c74792068617320746f206265206c6172676572207468616e207265776172644f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573736572726f722063616c6c696e672076616c696461746f725369676e65724164647265737346726f6d43757272656e7453657420707265636f6d70696c656572726f722063616c6c696e67206e756d62657256616c696461746f7273496e43757272656e7453657420707265636f6d70696c65426c6f636b20686173686573206861766520746f20626520646966666572656e74536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77426c6f636b2068656164657273206172652066726f6d20646966666572656e74206865696768746572726f722063616c6c696e67206672616374696f6e4d756c45787020707265636f6d70696c656572726f722063616c6c696e672067657445706f636853697a6520707265636f6d70696c654e6f7420656e6f756768207369676e65727320696e20746865207365636f6e6420626c6f636ba265627a7a72315820d0e1c6aebab9af8dcd21be3b236160d2ad71ef399ef7c39c2b06a97bb75501a464736f6c634300050d0032",
  "sourceMap": "102:88:93:-;;;160:4;1049::62;927::73;698:17:154;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;135:17:12;130:57;;176:4;162:11;;:18;;;;;;;;;;;;;;;;;;130:57;81:110;883:52:73;1007:50:62;102:88:93;;788:96:150;833:15;867:10;860:17;;788:96;:::o;102:88:93:-;;;;;;;",
  "deployedSourceMap": "102:88:93:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;102:88:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2497:1190:62;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;2497:1190:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2497:1190:62;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2497:1190:62;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2497:1190:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2497:1190:62;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2497:1190:62;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2497:1190:62;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2497:1190:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2497:1190:62;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;624:44:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;3716:367:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3716:367:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;53:23:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;6211:266:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6211:266:22;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6211:266:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6211:266:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6211:266:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6211:266:22;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;6211:266:22;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;6211:266:22;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;6211:266:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;6211:266:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1581:79:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1581:79:101;;;;;;;;;;;;;;;;;:::i;:::-;;2555:147:22;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2555:147:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;267:150:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;267:150:101;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;267:150:101;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;267:150:101;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;267:150:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;267:150:101;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;421:165;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;421:165:101;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;421:165:101;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;421:165:101;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;421:165:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;421:165:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;741:117:62;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1214:208:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1214:208:101;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2129:106;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2129:106:101;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;2129:106:101;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;2129:106:101;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;2129:106:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;2129:106:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;721:122;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;721:122:101;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1684:137:154;;;:::i;:::-;;9896:112:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1350:232:62;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1350:232:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1970:155:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:155:101;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1970:155:101;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1970:155:101;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1970:155:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1970:155:101;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2540:25:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;4902:326:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1660:441:73;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1660:441:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1814:152:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1814:152:101;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;1814:152:101;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;1814:152:101;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;1814:152:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;1814:152:101;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5194:1028:62;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;5194:1028:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5194:1028:62;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5194:1028:62;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5194:1028:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5194:1028:62;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5194:1028:62;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5194:1028:62;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5194:1028:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5194:1028:62;;;;;;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5194:1028:62;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5194:1028:62;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5194:1028:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5194:1028:62;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5194:1028:62;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5194:1028:62;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5194:1028:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5194:1028:62;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5194:1028:62;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5194:1028:62;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5194:1028:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5194:1028:62;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5194:1028:62;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5194:1028:62;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5194:1028:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5194:1028:62;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5194:1028:62;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5194:1028:62;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5194:1028:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5194:1028:62;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5194:1028:62;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5194:1028:62;;;;;;101:9:-1;95:2;81:12;77:21;67:8;63:36;60:51;39:11;25:12;22:29;11:108;8:2;;;132:1;129;122:12;8:2;5194:1028:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5194:1028:62;;;;;;;;;;;;;;;:::i;:::-;;899:77:154;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;2803:109:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1664:101:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1664:101:101;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3089:230:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3089:230:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;1092:288:73;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1092:288:73;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;1426:151:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1426:151:101;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2125:266:22;;;:::i;:::-;;;;;;;;;;;;;;;;;;;9617:147;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9617:147:22;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1244:763;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;1244:763:22;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1970:107:154;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:154;;;;;;;;;;;;;;;;;;;:::i;:::-;;590:127:101;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;590:127:101;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;2497:1190:62;2644:7;2690:19;2701:7;2690:10;:19::i;:::-;2667;2678:7;2667:10;:19::i;:::-;:42;;2659:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2753:19;2775:33;2800:7;2775:24;:33::i;:::-;2753:55;;2844:33;2869:7;2844:24;:33::i;:::-;2829:11;:48;2814:118;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2954:34;2976:11;2954:21;:34::i;:::-;2946:5;:42;2938:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3043:49;3073:5;3080:11;3043:29;:49::i;:::-;3033:59;;:6;:59;;;3018:122;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3146:12;3169:40;3201:7;3169:31;:40::i;:::-;3161:49;;3146:64;;3216:12;3239:40;3271:7;3239:31;:40::i;:::-;3231:49;;3216:64;;3317:1;3307:5;3302:1;:10;;3294:4;:19;:24;;3286:60;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3383:1;3373:5;3368:1;:10;;3360:4;:19;:24;;3352:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3456:26;3470:11;3456:13;:26::i;:::-;3434:18;3447:4;3434:12;:18::i;:::-;:48;;3419:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3578:26;3592:11;3578:13;:26::i;:::-;3556:18;3569:4;3556:12;:18::i;:::-;:48;;3541:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3671:11;3664:18;;;;;2497:1190;;;;;;:::o;624:44:73:-;;;;;;;;;;;;;;:::o;3716:367:22:-;3798:7;3813:16;3835:12;409:8;3870:24;;3912:5;3927:12;3895:46;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3895:46:22;;;3870:72;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;3870:72:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;3853:89:22;;;;;;;;3956:7;3948:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4050:27;4070:3;4075:1;4050:19;:27::i;:::-;4035:43;;;;3716:367;;;:::o;53:23:12:-;;;;;;;;;;;;;:::o;6211:266:22:-;6334:4;6348:12;355:8;6380:30;;6428:6;6436;6444;6411:40;;;;;;;;;;;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6411:40:22;;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6411:40:22;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;6411:40:22;;;6380:72;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;6380:72:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;6366:86:22;;;;;6465:7;6458:14;;;6211:266;;;;;:::o;1581:79:101:-;1652:3;1636:13;:19;;;;1581:79;:::o;2555:147:22:-;2628:7;2650:47;2669:11;2682:14;:12;:14::i;:::-;2650:18;:47::i;:::-;2643:54;;2555:147;;;:::o;267:150:101:-;406:6;348:18;:55;394:6;377:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;377:24:101;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;377:24:101;;;367:35;;;;;;348:55;;;;;;;;;;;:64;;;;267:150;;:::o;421:165::-;504:7;526:18;:55;572:6;555:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;555:24:101;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;555:24:101;;;545:35;;;;;;526:55;;;;;;;;;;;;519:62;;421:165;;;:::o;741:117:62:-;792:7;801;810;819;842:1;845;848;851;834:19;;;;;;;;;;;;;;;;;;;;741:117;;;;:::o;1214:208:101:-;1322:7;1346:11;:71;1385:22;1395:11;1385:9;:22::i;:::-;1409:5;1368:47;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1368:47:101;;;1358:58;;;;;;1346:71;;;;;;;;;;;;;;;;;;;;;1339:78;;1214:208;;;;:::o;2129:106::-;2191:7;2223:6;2213:17;;;;;;2206:24;;2129:106;;;:::o;721:122::-;832:6;800:16;:29;817:11;800:29;;;;;;;;;;;:38;;;;721:122;;:::o;1684:137:154:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;9896:112:22:-;9954:7;9976:27;9990:12;9976:13;:27::i;:::-;9969:34;;9896:112;:::o;1350:232:62:-;233:11:12;;;;;;;;;;;232:12;224:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;297:4;283:11;;:18;;;;;;;;;;;;;;;;;;1467:30:62;1486:10;1467:18;:30::i;:::-;1503:28;1515:15;1503:11;:28::i;:::-;1537:40;1559:8;1569:7;1537:21;:40::i;:::-;1350:232;;;:::o;1970:155:101:-;2047:7;2114:6;2062:12;:49;2102:6;2085:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2085:24:101;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2085:24:101;;;2075:35;;;;;;2062:49;;;;;;;;;;;:58;;;;1970:155;;;;:::o;2540:25:23:-;;;;;;;;;;;;;:::o;4902:326:22:-;4963:7;4978:16;5000:12;467:8;5035:28;;5089:12;5064:39;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;5064:39:22;;;5035:69;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;5035:69:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;5018:86:22;;;;;;;;5118:7;5110:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5196:27;5216:3;5221:1;5196:19;:27::i;:::-;5189:34;;;;4902:326;:::o;1660:441:73:-;1806:7;1821:13;1837:34;1859:11;1837:21;:34::i;:::-;1821:50;;1894:1;1885:5;:10;;1877:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2004:15;:13;:15::i;:::-;:38;;;2043:9;2054:12;2064:1;2054:5;:9;;:12;;;;:::i;:::-;2068:27;2004:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2004:92:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2004:92:73;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;2004:92:73;;;;;;;;;;;;;;;;1991:105;;;1660:441;;;;;:::o;1814:152:101:-;1890:7;1912:12;:49;1952:6;1935:24;;;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1935:24:101;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1935:24:101;;;1925:35;;;;;;1912:49;;;;;;;;;;;;1905:56;;1814:152;;;:::o;5194:1028:62:-;5630:38;5652:6;5660:7;5630:21;:38::i;:::-;5674;5696:6;5704:7;5674:21;:38::i;:::-;5718:19;5740:54;5762:6;5770:5;5777:7;5786;5740:21;:54::i;:::-;5718:76;;5800:17;5820:13;:11;:13::i;:::-;:29;;;5850:6;5820:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5820:37:62;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5820:37:62;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5820:37:62;;;;;;;;;;;;;;;;5800:57;;5863:292;5886:9;5903:10;5921:11;5940:27;5975:24;6007:25;6040:24;6072:20;6100:21;6129:20;5863:15;:292::i;:::-;6205:11;6194:9;6166:51;;;;;;;;;;;;5194:1028;;;;;;;;;;;;;:::o;899:77:154:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;2803:109:22:-;2850:7;2872:35;2894:12;2872:21;:35::i;:::-;2865:42;;2803:109;:::o;1664:101:101:-;1725:7;1747:13;;1740:20;;1664:101;;;:::o;3089:230:23:-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3193:1:23;3166:29;;:15;:29;;;;3158:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:15;3238:8;;:37;;;;;;;;;;;;;;;;;;3298:15;3286:28;;;;;;;;;;;;3089:230;:::o;1092:288:73:-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1197:6:73;1187:7;:16;1179:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1279:7;1250:18;:26;;:36;;;;1320:6;1292:18;:25;;:34;;;;1337:38;1359:7;1368:6;1337:38;;;;;;;;;;;;;;;;;;;;;;;;1092:288;;:::o;1426:151:101:-;1566:6;1509:11;:54;1548:5;1555;1531:30;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1531:30:101;;;1521:41;;;;;;1509:54;;;;;;;;;;;;:63;;;;;;;;;;;;;;;;;;1426:151;;;:::o;2125:266:22:-;2170:7;2185:16;2207:12;518:8;2242:21;;2264:18;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2264:18:22;;;2242:41;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;2242:41:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;2225:58:22;;;;;;;;2297:7;2289:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2359:27;2379:3;2384:1;2359:19;:27::i;:::-;2352:34;;;;2125:266;:::o;9617:147::-;9682:7;9704:55;9757:1;9704:48;9750:1;9704:41;9743:1;9704:34;9726:11;9704:21;:34::i;:::-;:38;;:41;;;;:::i;:::-;:45;;:48;;;;:::i;:::-;:52;;:55;;;;:::i;:::-;9697:62;;9617:147;;;:::o;1244:763::-;1438:7;1447;1486:1;1470:12;:17;;:38;;;;;1507:1;1491:12;:17;;1470:38;1462:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1540:23;1569:25;1600:12;1618:16;295:8;1657:23;;1705:10;1717:12;1731:10;1743:12;1757:8;1767:9;1688:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1688:89:22;;;1657:126;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;1657:126:22;;;;;;;;;;;;;;;;;;;;;;;14:1:-1;21;16:31;;;;75:4;69:11;64:16;;144:4;140:9;133:4;115:16;111:27;107:43;104:1;100:51;94:4;87:65;169:16;166:1;159:27;225:16;222:1;215:4;212:1;208:12;193:49;7:242;;16:31;36:4;31:9;;7:242;;1640:143:22;;;;;;;;1797:7;1789:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1872:27;1892:3;1897:1;1872:19;:27::i;:::-;1854:45;;1925:28;1945:3;1950:2;1925:19;:28::i;:::-;1905:48;;1967:15;1984:17;1959:43;;;;;;;;1244:763;;;;;;;;;:::o;1970:107:154:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;590:127:101:-;661:7;683:16;:29;700:11;683:29;;;;;;;;;;;;676:36;;590:127;;;:::o;1714:247:62:-;1770:7;1785:11;1799:1;1785:15;;1806:11;1820:1;1806:15;;1832:9;1844:1;1832:13;;1827:114;1851:3;1847:1;:7;1827:114;;;1893:1;1888;1882:3;:7;:12;1878:34;;;1902:10;1910:1;1902:3;:7;;:10;;;;:::i;:::-;1896:16;;1878:34;1933:1;1926:3;:8;;1920:14;;1860:8;1866:1;1860;:5;;:8;;;;:::i;:::-;1856:12;;1827:114;;;;1953:3;1946:10;;;;1714:247;;;:::o;8864:150:22:-;8948:7;8978:30;8998:2;9002:5;8978:19;:30::i;:::-;8970:39;;8963:46;;8864:150;;;;:::o;3124:379::-;3227:7;3335:19;3371:9;3357:11;:23;;;;;;3335:45;;3417:1;3404:9;3390:11;:23;;;;;;:28;3386:113;;;3435:11;3428:18;;;;;3386:113;3474:18;3490:1;3474:11;:15;;:18;;;;:::i;:::-;3467:25;;;3124:379;;;;;:::o;847:363:101:-;910:7;925:17;945:3;925:23;;1045:19;1081:9;1067:11;:23;;;;;;1045:45;;1127:1;1114:9;1100:11;:23;;;;;;:28;1096:110;;;1145:11;1138:18;;;;;;1096:110;1198:1;1184:11;:15;1177:22;;;;847:363;;;;:::o;2178:225:154:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;5236:143:23:-;5284:11;5322:8;;;;;;;;;;;:27;;;2467:30;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2467:30:23;;;2457:41;;;;;;5322:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5322:51:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5322:51:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5322:51:23;;;;;;;;;;;;;;;;5303:71;;5236:143;:::o;1274:134:153:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;3691:218:62:-;3774:13;3790:18;3801:6;3790:10;:18::i;:::-;3774:34;;3823:9;:17;3833:6;3823:17;;;;;;;;;;;;;;;:24;3841:5;3823:24;;;;;;;;;;;;;;;;;;;;;3822:25;3814:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3900:4;3873:9;:17;3883:6;3873:17;;;;;;;;;;;;;;;:24;3891:5;3873:24;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;3691:218;;;:::o;3323:135:23:-;3369:9;3403:8;;;;;;;;;;;:27;;;997:28;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;997:28:23;;;987:39;;;;;;3403:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3403:49:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3403:49:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3403:49:23;;;;;;;;;;;;;;;;3386:67;;3323:135;:::o;2105:1185:73:-;2532:22;2557:15;:13;:15::i;:::-;2532:40;;2578:10;:16;;;2602:9;2619:18;:26;;;2653:9;2670:18;:25;;;2703:24;2735:25;2768:24;2578:220;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2578:220:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2578:220:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2578:220:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2578:220:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2578:220:73;;;;2804:13;2820:74;2843:9;2854:10;2866:27;2820:22;:74::i;:::-;2804:90;;2924:1;2907:19;;:5;:19;;;;2900:27;;;;2933:10;:16;;;2957:5;2970:18;:26;;;3004:9;3021:18;:25;;;3054:20;3082:21;3111:20;2933:204;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2933:204:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2933:204:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;2933:204:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2933:204:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;2933:204:73;;;;3143:22;3168:15;:13;:15::i;:::-;3143:40;;3189:10;:38;;;3228:9;3189:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3189:49:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3189:49:73;;;;3244:10;:34;;;3279:5;3244:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3244:41:73;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3244:41:73;;;;2105:1185;;;;;;;;;;;;;:::o;788:96:150:-;833:15;867:10;860:17;;788:96;:::o;2159:459:153:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;3073:130::-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3150:46;;3073:130;;;;:::o;9174:255:22:-;9258:7;9294:13;9304:2;9294:5;:9;;:13;;;;:::i;:::-;9281:2;:9;:26;;9273:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9338:9;9400:2;9393:5;9389:14;9385:2;9381:23;9375:30;9370:35;;9423:1;9416:8;;;9174:255;;;;:::o;1732:187:153:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;4510:144:23:-;4558:11;4596:8;;;;;;;;;;;:27;;;2036:30;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2036:30:23;;;2026:41;;;;;;4596:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4596:52:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4596:52:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4596:52:23;;;;;;;;;;;;;;;;4577:72;;4510:144;:::o;3718:338:153:-;3804:7;3901:1;3897;:5;3904:12;3889:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3889:28:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;3927:17;;4048:1;4041:8;;;3718:338;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"../DoubleSigningSlasher.sol\";\nimport \"./MockUsingPrecompiles.sol\";\n\ncontract DoubleSigningSlasherTest is DoubleSigningSlasher(true), MockUsingPrecompiles {}\n",
  "sourcePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/test/DoubleSigningSlasherTest.sol",
  "ast": {
    "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/test/DoubleSigningSlasherTest.sol",
    "exportedSymbols": {
      "DoubleSigningSlasherTest": [
        31110
      ]
    },
    "id": 31111,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 31102,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:93"
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/DoubleSigningSlasher.sol",
        "file": "../DoubleSigningSlasher.sol",
        "id": 31103,
        "nodeType": "ImportDirective",
        "scope": 31111,
        "sourceUnit": 14430,
        "src": "26:37:93",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/test/MockUsingPrecompiles.sol",
        "file": "./MockUsingPrecompiles.sol",
        "id": 31104,
        "nodeType": "ImportDirective",
        "scope": 31111,
        "sourceUnit": 32001,
        "src": "64:36:93",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "74727565",
                "id": 31106,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "bool",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "160:4:93",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "value": "true"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 31105,
              "name": "DoubleSigningSlasher",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14429,
              "src": "139:20:93",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DoubleSigningSlasher_$14429",
                "typeString": "contract DoubleSigningSlasher"
              }
            },
            "id": 31107,
            "nodeType": "InheritanceSpecifier",
            "src": "139:26:93"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 31108,
              "name": "MockUsingPrecompiles",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32000,
              "src": "167:20:93",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockUsingPrecompiles_$32000",
                "typeString": "contract MockUsingPrecompiles"
              }
            },
            "id": 31109,
            "nodeType": "InheritanceSpecifier",
            "src": "167:20:93"
          }
        ],
        "contractDependencies": [
          4661,
          8166,
          8572,
          9340,
          14429,
          26216,
          32000,
          43492,
          43947
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 31110,
        "linearizedBaseContracts": [
          31110,
          32000,
          14429,
          26216,
          8166,
          8572,
          4661,
          43947,
          43492,
          9340
        ],
        "name": "DoubleSigningSlasherTest",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 31111,
        "src": "102:88:93"
      }
    ],
    "src": "0:191:93"
  },
  "legacyAST": {
    "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/test/DoubleSigningSlasherTest.sol",
    "exportedSymbols": {
      "DoubleSigningSlasherTest": [
        31110
      ]
    },
    "id": 31111,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 31102,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:93"
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/DoubleSigningSlasher.sol",
        "file": "../DoubleSigningSlasher.sol",
        "id": 31103,
        "nodeType": "ImportDirective",
        "scope": 31111,
        "sourceUnit": 14430,
        "src": "26:37:93",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/test/MockUsingPrecompiles.sol",
        "file": "./MockUsingPrecompiles.sol",
        "id": 31104,
        "nodeType": "ImportDirective",
        "scope": 31111,
        "sourceUnit": 32001,
        "src": "64:36:93",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [
              {
                "argumentTypes": null,
                "hexValue": "74727565",
                "id": 31106,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "bool",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "160:4:93",
                "subdenomination": null,
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "value": "true"
              }
            ],
            "baseName": {
              "contractScope": null,
              "id": 31105,
              "name": "DoubleSigningSlasher",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 14429,
              "src": "139:20:93",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_DoubleSigningSlasher_$14429",
                "typeString": "contract DoubleSigningSlasher"
              }
            },
            "id": 31107,
            "nodeType": "InheritanceSpecifier",
            "src": "139:26:93"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 31108,
              "name": "MockUsingPrecompiles",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 32000,
              "src": "167:20:93",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MockUsingPrecompiles_$32000",
                "typeString": "contract MockUsingPrecompiles"
              }
            },
            "id": 31109,
            "nodeType": "InheritanceSpecifier",
            "src": "167:20:93"
          }
        ],
        "contractDependencies": [
          4661,
          8166,
          8572,
          9340,
          14429,
          26216,
          32000,
          43492,
          43947
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 31110,
        "linearizedBaseContracts": [
          31110,
          32000,
          14429,
          26216,
          8166,
          8572,
          4661,
          43947,
          43492,
          9340
        ],
        "name": "DoubleSigningSlasherTest",
        "nodeType": "ContractDefinition",
        "nodes": [],
        "scope": 31111,
        "src": "102:88:93"
      }
    ],
    "src": "0:191:93"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2022-05-06T03:53:12.960Z",
  "devdoc": {
    "methods": {
      "checkForDoubleSigning(address,uint256,bytes,bytes)": {
        "params": {
          "headerA": "First double signed block header.",
          "headerB": "Second double signed block header.",
          "index": "Validator index at the block.",
          "signer": "The signer to be slashed."
        },
        "return": "Block number where double signing occured. Throws if no double signing is detected."
      },
      "checkProofOfPossession(address,bytes,bytes)": {
        "params": {
          "blsKey": "The BLS public key that the validator is using for consensus, should pass proof  of possession. 48 bytes.",
          "blsPop": "The BLS public key proof-of-possession, which consists of a signature on the  account address. 96 bytes.",
          "sender": "The address signed by the BLS key to generate the proof of possession."
        },
        "return": "True upon success."
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "params": {
          "_decimals": "precision",
          "aDenominator": "Denominator of first fraction",
          "aNumerator": "Numerator of first fraction",
          "bDenominator": "Denominator of exponentiated fraction",
          "bNumerator": "Numerator of exponentiated fraction",
          "exponent": "exponent to raise b to"
        },
        "return": "numerator/denominator of the computed quantity (not reduced)."
      },
      "getEpochNumber()": {
        "return": "Current epoch number."
      },
      "getEpochNumberOfBlock(uint256)": {
        "params": {
          "blockNumber": "Block number where epoch number is calculated."
        },
        "return": "Epoch number."
      },
      "getEpochSize()": {
        "return": "The current epoch size in blocks."
      },
      "getVersionNumber()": {
        "return": "The storage, major, minor, and patch version of the contract."
      },
      "groupMembershipAtBlock(address,uint256,uint256)": {
        "params": {
          "blockNumber": "Block number associated with slashing.",
          "groupMembershipHistoryIndex": "Index used for history lookup.",
          "validator": "Validator that was slashed."
        },
        "return": "Group to be slashed."
      },
      "initialize(address,uint256,uint256)": {
        "params": {
          "_penalty": "Penalty for the slashed signer.",
          "_reward": "Reward that the observer gets.",
          "registryAddress": "The address of the registry core smart contract."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "minQuorumSize(uint256)": {
        "details": "Computed in celo-blockchain as int(math.Ceil(float64(2*valSet.Size()) / 3))"
      },
      "minQuorumSizeInCurrentSet()": {
        "return": "Byzantine quorum of validators."
      },
      "numberValidatorsInCurrentSet()": {
        "return": "Size of the current elected validator set."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "setSlashingIncentives(uint256,uint256)": {
        "params": {
          "penalty": "Penalty for the slashed signer.",
          "reward": "Reward that the observer gets."
        }
      },
      "slash(address,uint256,bytes,bytes,uint256,address[],address[],uint256[],address[],address[],uint256[])": {
        "params": {
          "groupElectionGreaters": "Greater pointers for group slashing.",
          "groupElectionIndices": "Vote indices for group slashing.",
          "groupElectionLessers": "Lesser pointers for group slashing.",
          "groupMembershipHistoryIndex": "Group membership index from where the group should be found.",
          "headerA": "First double signed block header.",
          "headerB": "Second double signed block header.",
          "index": "Validator index at the block.",
          "signer": "The signer to be slashed.",
          "validatorElectionGreaters": "Greater pointers for validator slashing.",
          "validatorElectionIndices": "Vote indices for validator slashing.",
          "validatorElectionLessers": "Lesser pointers for validator slashing."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "params": {
          "index": "Index of requested validator in the validator set."
        },
        "return": "Address of validator at the requested index."
      }
    }
  },
  "userdoc": {
    "methods": {
      "checkForDoubleSigning(address,uint256,bytes,bytes)": {
        "notice": "Given two RLP encoded blocks, calls into precompiles to require that the two block hashes are different, have the same height, have a quorum of signatures, and that `signer` was part of the quorum."
      },
      "checkProofOfPossession(address,bytes,bytes)": {
        "notice": "Checks a BLS proof of possession."
      },
      "fractionMulExp(uint256,uint256,uint256,uint256,uint256,uint256)": {
        "notice": "calculate a * b^x for fractions a, b to `decimals` precision"
      },
      "getEpochNumber()": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochNumberOfBlock(uint256)": {
        "notice": "Returns the epoch number at a block."
      },
      "getEpochSize()": {
        "notice": "Returns the current epoch size in blocks."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "groupMembershipAtBlock(address,uint256,uint256)": {
        "notice": "Returns the group to be slashed."
      },
      "initialize(address,uint256,uint256)": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "minQuorumSize(uint256)": {
        "notice": "Returns the minimum number of required signers for a given block number."
      },
      "minQuorumSizeInCurrentSet()": {
        "notice": "Computes byzantine quorum from current validator set size"
      },
      "numberValidatorsInCurrentSet()": {
        "notice": "Gets the size of the current elected validator set."
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "setSlashingIncentives(uint256,uint256)": {
        "notice": "Sets slashing incentives."
      },
      "slash(address,uint256,bytes,bytes,uint256,address[],address[],uint256[],address[],address[],uint256[])": {
        "notice": "Requires that `eval` returns true and that this evidence has not already been used to slash `signer`. If so, fetches the `account` associated with `signer` and the group that `signer` was a member of during the corresponding epoch. Then, calls `LockedGold.slash` on both the validator and group accounts. Calls `Validators.removeSlashedMember` to remove the validator from its current group if it is a member of one. Finally, stores that hash(signer, blockNumber) has been slashed."
      },
      "validatorSignerAddressFromCurrentSet(uint256)": {
        "notice": "Gets a validator address from the current validator set."
      }
    }
  }
}