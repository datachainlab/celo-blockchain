{
  "contractName": "ExchangeEUR",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "goldBucket",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "stableBucket",
          "type": "uint256"
        }
      ],
      "name": "BucketsUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "exchanger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sellAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buyAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "soldGold",
          "type": "bool"
        }
      ],
      "name": "Exchanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minimumReports",
          "type": "uint256"
        }
      ],
      "name": "MinimumReportsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "reserveFraction",
          "type": "uint256"
        }
      ],
      "name": "ReserveFractionSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "spread",
          "type": "uint256"
        }
      ],
      "name": "SpreadSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "stable",
          "type": "address"
        }
      ],
      "name": "StableTokenSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "updateFrequency",
          "type": "uint256"
        }
      ],
      "name": "UpdateFrequencySet",
      "type": "event"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "activateStable",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "buyAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxSellAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "buyGold",
          "type": "bool"
        }
      ],
      "name": "buy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sellAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minBuyAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sellGold",
          "type": "bool"
        }
      ],
      "name": "exchange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "bool",
          "name": "sellGold",
          "type": "bool"
        }
      ],
      "name": "getBuyAndSellBuckets",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sellAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sellGold",
          "type": "bool"
        }
      ],
      "name": "getBuyTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "buyAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sellGold",
          "type": "bool"
        }
      ],
      "name": "getSellTokenAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goldBucket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "stableTokenIdentifier",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_spread",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_reserveFraction",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_updateFrequency",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minimumReports",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "lastBucketUpdate",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "minimumReports",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "reserveFraction",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "sellAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "minBuyAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sellGold",
          "type": "bool"
        }
      ],
      "name": "sell",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMininumReports",
          "type": "uint256"
        }
      ],
      "name": "setMinimumReports",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newReserveFraction",
          "type": "uint256"
        }
      ],
      "name": "setReserveFraction",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newSpread",
          "type": "uint256"
        }
      ],
      "name": "setSpread",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newStableToken",
          "type": "address"
        }
      ],
      "name": "setStableToken",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newUpdateFrequency",
          "type": "uint256"
        }
      ],
      "name": "setUpdateFrequency",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "spread",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stable",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stableBucket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "stableTokenRegistryId",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "updateFrequency",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"goldBucket\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"stableBucket\",\"type\":\"uint256\"}],\"name\":\"BucketsUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exchanger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"soldGold\",\"type\":\"bool\"}],\"name\":\"Exchanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minimumReports\",\"type\":\"uint256\"}],\"name\":\"MinimumReportsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reserveFraction\",\"type\":\"uint256\"}],\"name\":\"ReserveFractionSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"spread\",\"type\":\"uint256\"}],\"name\":\"SpreadSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"stable\",\"type\":\"address\"}],\"name\":\"StableTokenSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"updateFrequency\",\"type\":\"uint256\"}],\"name\":\"UpdateFrequencySet\",\"type\":\"event\"},{\"constant\":false,\"inputs\":[],\"name\":\"activateStable\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxSellAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"buyGold\",\"type\":\"bool\"}],\"name\":\"buy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBuyAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellGold\",\"type\":\"bool\"}],\"name\":\"exchange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"bool\",\"name\":\"sellGold\",\"type\":\"bool\"}],\"name\":\"getBuyAndSellBuckets\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellGold\",\"type\":\"bool\"}],\"name\":\"getBuyTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellGold\",\"type\":\"bool\"}],\"name\":\"getSellTokenAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"goldBucket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"stableTokenIdentifier\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_spread\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_reserveFraction\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_updateFrequency\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minimumReports\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lastBucketUpdate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minimumReports\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"reserveFraction\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minBuyAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellGold\",\"type\":\"bool\"}],\"name\":\"sell\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMininumReports\",\"type\":\"uint256\"}],\"name\":\"setMinimumReports\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newReserveFraction\",\"type\":\"uint256\"}],\"name\":\"setReserveFraction\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSpread\",\"type\":\"uint256\"}],\"name\":\"setSpread\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newStableToken\",\"type\":\"address\"}],\"name\":\"setStableToken\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newUpdateFrequency\",\"type\":\"uint256\"}],\"name\":\"setUpdateFrequency\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"spread\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stable\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stableBucket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"stableTokenRegistryId\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"updateFrequency\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"activateStable()\":{\"details\":\"Will revert if stable token is not registered or does not have oracle reports.\"},\"buy(uint256,uint256,bool)\":{\"details\":\"The caller must first have approved `maxSellAmount` to the exchange.This function can be frozen via the Freezable interface.\",\"params\":{\"buyAmount\":\"The number of tokens for the exchange to send in return.\",\"buyGold\":\"True if the exchange is sending CELO to the caller, false otherwise.\",\"maxSellAmount\":\"The maximum number of tokens to send to the exchange.\"},\"return\":\"The number of tokens sent to the exchange.\"},\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialization\"}},\"exchange(uint256,uint256,bool)\":{\"details\":\"DEPRECATED - Use `buy` or `sell`.The caller must first have approved `sellAmount` to the exchange.This function can be frozen via the Freezable interface.\",\"params\":{\"minBuyAmount\":\"The minimum number of tokens for the exchange to send in return.\",\"sellAmount\":\"The number of tokens to send to the exchange.\",\"sellGold\":\"True if the caller is sending CELO to the exchange, false otherwise.\"},\"return\":\"The number of tokens sent by the exchange.\"},\"getBuyAndSellBuckets(bool)\":{\"params\":{\"sellGold\":\"`true` if gold is the sell token.\"},\"return\":\"(buyTokenBucket, sellTokenBucket)\"},\"getBuyTokenAmount(uint256,bool)\":{\"params\":{\"sellAmount\":\"The amount of sellToken the user is selling to the exchange.\",\"sellGold\":\"`true` if gold is the sell token.\"},\"return\":\"The corresponding buyToken amount.\"},\"getSellTokenAmount(uint256,bool)\":{\"params\":{\"buyAmount\":\"The amount of buyToken the user would like to purchase.\",\"sellGold\":\"`true` if gold is the sell token.\"},\"return\":\"The corresponding sellToken amount.\"},\"getVersionNumber()\":{\"details\":\"This function is overloaded to maintain a distinct version from Exchange.sol.\",\"return\":\"The storage, major, minor, and patch version of the contract.\"},\"initialize(address,string,uint256,uint256,uint256,uint256)\":{\"params\":{\"_minimumReports\":\"The minimum number of fresh reports that need to be present in the oracle to update buckets commit to the gold bucket\",\"_reserveFraction\":\"Fraction to commit to the gold bucket\",\"_spread\":\"Spread charged on exchanges\",\"_updateFrequency\":\"The time period that needs to elapse between bucket updates\",\"registryAddress\":\"The address of the registry core smart contract.\",\"stableTokenIdentifier\":\"String identifier of stabletoken in registry\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"sell(uint256,uint256,bool)\":{\"details\":\"The caller must first have approved `sellAmount` to the exchange.This function can be frozen via the Freezable interface.\",\"params\":{\"minBuyAmount\":\"The minimum number of tokens for the exchange to send in return.\",\"sellAmount\":\"The number of tokens to send to the exchange.\",\"sellGold\":\"True if the caller is sending CELO to the exchange, false otherwise.\"},\"return\":\"The number of tokens sent by the exchange.\"},\"setMinimumReports(uint256)\":{\"params\":{\"newMininumReports\":\"The new update minimum number of reports required\"}},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"setReserveFraction(uint256)\":{\"params\":{\"newReserveFraction\":\"The new value for the reserve fraction\"}},\"setSpread(uint256)\":{\"params\":{\"newSpread\":\"The new value for the spread\"}},\"setStableToken(address)\":{\"params\":{\"newStableToken\":\"The new address for Stable Token\"}},\"setUpdateFrequency(uint256)\":{\"params\":{\"newUpdateFrequency\":\"The new update frequency\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}}},\"userdoc\":{\"methods\":{\"activateStable()\":{\"notice\":\"Ensures stable token address is set in storage and initializes buckets.\"},\"buy(uint256,uint256,bool)\":{\"notice\":\"Exchanges an unspecified amount (up to a threshold) of one token for a specific amount of another.\"},\"constructor\":\"Sets initialized == true on implementation contracts\",\"exchange(uint256,uint256,bool)\":{\"notice\":\"Exchanges a specific amount of one token for an unspecified amount (greater than a threshold) of another.\"},\"getBuyAndSellBuckets(bool)\":{\"notice\":\"Returns the buy token and sell token bucket sizes, in order. The ratio of the two also represents the exchange rate between the two.\"},\"getBuyTokenAmount(uint256,bool)\":{\"notice\":\"Returns the amount of buy tokens a user would get for sellAmount of the sell token.\"},\"getSellTokenAmount(uint256,bool)\":{\"notice\":\"Returns the amount of sell tokens a user would need to exchange to receive buyAmount of buy tokens.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"initialize(address,string,uint256,uint256,uint256,uint256)\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"sell(uint256,uint256,bool)\":{\"notice\":\"Exchanges a specific amount of one token for an unspecified amount (greater than a threshold) of another.\"},\"setMinimumReports(uint256)\":{\"notice\":\"Allows owner to set the minimum number of reports required\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"setReserveFraction(uint256)\":{\"notice\":\"Allows owner to set the Reserve Fraction\"},\"setSpread(uint256)\":{\"notice\":\"Allows owner to set the spread\"},\"setStableToken(address)\":{\"notice\":\"Allows owner to set the Stable Token address\"},\"setUpdateFrequency(uint256)\":{\"notice\":\"Allows owner to set the update frequency\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/ExchangeEUR.sol\":\"ExchangeEUR\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/FixidityLib.sol\":{\"keccak256\":\"0x2f98fa3b3454621817917bae2830806858a96c9457be2c5b6e0bed5b35aaaba3\",\"urls\":[\"bzz-raw://b6bf5cf79debe02093777cc9ddef4616dedd041ccc2618c43ea91c90afd97df6\",\"dweb:/ipfs/QmXonY3FkVy2jnQvLkgDi4LcaniS5DVZ1zpRZecWKWy9Ro\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/Freezable.sol\":{\"keccak256\":\"0x2d264574f693b31cdf1ef1fe44dd07f4ddd60c1979e79fc84b6f3019ceda9ac6\",\"urls\":[\"bzz-raw://eb43996e3f01765f6b4997ef86dceca4af987a9c6f2743de7d29ec887651ea2b\",\"dweb:/ipfs/QmdRfAZ97XBNd42XYQBWVFAx7gAKUuS3KvL41ryxo9YTwT\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/Initializable.sol\":{\"keccak256\":\"0xad98825b5d3181f4ce2d2dbe84adeb0cd7960fd80fafb0813539d6d96ba42ab8\",\"urls\":[\"bzz-raw://f76468328c78b80eeaaaadb7b186e41da4a34134446fe11bb707106322b8e32f\",\"dweb:/ipfs/QmNyjyVjPX1GKFibDcJBJyZQ57nhusG3DhPjAGnY7iaU39\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/UsingRegistry.sol\":{\"keccak256\":\"0xfdd9e70bd58259b491ec54779715d7469ab4f804836bf5f63ff86921d0cae056\",\"urls\":[\"bzz-raw://e55f23f464e49c42b1f31782dcb88cbd2ca64e050d5f110ccdc2ffd50cd582ff\",\"dweb:/ipfs/QmfBiet9GbT9S9rn9SG9CkyXQGAMQRuk4EBmChY1m4kv47\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IAccounts.sol\":{\"keccak256\":\"0x6132a2e3105dbf00b52447db8bc307b052b2d02c0d00497bd0074ae3ce48027a\",\"urls\":[\"bzz-raw://07380d2593f1359e1440153597d16d1b4085a421f52909fafe3fa58f13088c62\",\"dweb:/ipfs/QmSjtmfFswK15Ta5NePg5voNVh9X63muCLCbQKgAZFG4rg\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"keccak256\":\"0x9f902faa66069500c7b5e8c9a53ca6afff99dfe6cd3915aa0f3c4fe6a9905ba5\",\"urls\":[\"bzz-raw://880c77a981296abbf6fe9a7e3e0d5d441b19de70d310b10f4a469ce344e8e96c\",\"dweb:/ipfs/QmUAY1xYLXUQXwgBoRFaXFv5z9a6sMYT9v7WdEAAeSGCwW\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"keccak256\":\"0xd4711baf3e38a0abeb3ef48eaab21aeb917f5e0a185cf463fddeb4bf20277b68\",\"urls\":[\"bzz-raw://8f350863943ab54dcf4d5ea525c16748f59263bf36c1d85251c1164d0e592032\",\"dweb:/ipfs/QmXAG6fvVQKM86rVsk6R3ndEoHtS9fcAAVxBApJ5j3LWeK\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IFreezer.sol\":{\"keccak256\":\"0x12508a9d528d1b63dc06644e9d97e864acc94f8a763cf8555e90bcdf1b2f8b21\",\"urls\":[\"bzz-raw://32df109167a13e684c9b296a0e13dda1899e418788eb59bf59aedd7a3ce65466\",\"dweb:/ipfs/QmR6BJCRFMSQpBpnSH2vzLE959FhXnmreDocWWc7fUYnnu\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IRegistry.sol\":{\"keccak256\":\"0x78ba82722d28e815c117f33d4659404f0707dab1c9b51f1bce5d4c15d6c94537\",\"urls\":[\"bzz-raw://0cea84b948896aece11c64b97c22b0f08f86cb45e166a004db4a88a98952cbfa\",\"dweb:/ipfs/QmR4uSGcs4nmph6duroscchstSwMzWSV8CDvD2SSnWuHbs\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/libraries/ReentrancyGuard.sol\":{\"keccak256\":\"0xa2584554532d7004ca3d2d168cd9dfb7694605f1a32431af4d1b7d834fa6b08d\",\"urls\":[\"bzz-raw://fb012e7a76145a86b8746b0b10768845d17a5c5ab9cbdcd863fde42028b5632c\",\"dweb:/ipfs/QmdJi5va3broTVwJJ5uCBSg4T2rwTaAvzSBtnZzETvverK\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/IElection.sol\":{\"keccak256\":\"0xebcd0d7dbbb2df503967ad63c9ddd437cef89a94ba2cc2f9ce274f41a4c901ee\",\"urls\":[\"bzz-raw://84dcf3a9952f1ce9a9110abb1783dfead290fd17c28216c5acb22de9d090921d\",\"dweb:/ipfs/QmeNoLz8WcHX9GLcBfQChXFHsFDRaVRRXnPXXvB2qVTaSZ\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/IGovernance.sol\":{\"keccak256\":\"0x227bf6a6b56411c368c9752761e2202ad71f2199deb2b114b125712b63372b7e\",\"urls\":[\"bzz-raw://cabeae6e6c47364291f12cf69658dcf5bdd8ac7eebda53d48a2b03aab96386a3\",\"dweb:/ipfs/QmUtPSC4hVz79XVVjFwQ6CozMd6oAR1m6yrPFkHD5sCdB1\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/ILockedGold.sol\":{\"keccak256\":\"0x577d01d8a1fbf47980fb5ffd36de2084ec255889b15671adfecd3a285df4f253\",\"urls\":[\"bzz-raw://6b955b6829748cd136fa92c3a434f5419e4eb024d535a854900ad48bd4151b67\",\"dweb:/ipfs/QmXM5uL5dsKecYyedAzsrZXAp81NtWQErbbVEFccJ6ZqiY\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/IValidators.sol\":{\"keccak256\":\"0x524a9e48689537421f97296ffd57fa0f2887117f9af9e71dd5ed17e66ba92d2a\",\"urls\":[\"bzz-raw://cf5d0c2f6ee9b2c8e270162455177e9c3bac79ac07d4f37c86f7f2ee5978a756\",\"dweb:/ipfs/QmZTKmytn1Wi3QfU3bHuSaSeYQzRrFKehyngrg37rHD3vV\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/interfaces/IAttestations.sol\":{\"keccak256\":\"0x979aaac636fe6a64f97034bf0bf062b5f0efd6e6f9f3fe84e81180f82eeb7a3e\",\"urls\":[\"bzz-raw://c1255d08278188247ef81fb09edd2d1d4a019fb0fe80fd3d9850415c5eb5caaf\",\"dweb:/ipfs/QmcJvqSM35nAR8p8LwVczhnaY6VwTRThNjfCzkzeiAkz45\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/interfaces/IRandom.sol\":{\"keccak256\":\"0xd65fd529d133cbde94628b39b0d2f0f4b6d0af2e8f97c0e6b4b2cd476479ed1d\",\"urls\":[\"bzz-raw://f2c6fe351990bfdeb55484bd3622d44c8f58579a7212d5cce71a82df846497f5\",\"dweb:/ipfs/QmRDDTXUqbA6dHfJe4ZS1442JDAfwoHq2eH9LHnQyzsh44\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/Exchange.sol\":{\"keccak256\":\"0x3e097959553e26803856defd0f13c94b3165eebaf51fcb2658e6738fd67424b0\",\"urls\":[\"bzz-raw://fd6faabe58548f2a9671db3e86449c637c8533c3ae6a14967ee9bb36de5e4993\",\"dweb:/ipfs/QmUBagoe1fSwh2k98uJVWrSSjPFzVgpf4KmWUzWNxHkpGX\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/ExchangeEUR.sol\":{\"keccak256\":\"0xe61bbea45cc8706b1787ef15afea7d703b3add55b9d060a4d4076d196f80bc4d\",\"urls\":[\"bzz-raw://aaf03884f975150e628ed4d09251b6f9975f870deeda972126ab3a0aa0e41f97\",\"dweb:/ipfs/QmYpc3K2NsWfLAQnGRJZ6xSrWLhg5tzYNbrYCw8r89AzJx\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/IExchange.sol\":{\"keccak256\":\"0xf2934d473f1b42566dbd90b4777725c966524bab78ce734b51f2510c6ef83ebb\",\"urls\":[\"bzz-raw://9fa1c7d72149b281ce9f54e636e37753fffcfa45833753ca700b8861a2a25a22\",\"dweb:/ipfs/QmUAgNosF21EroMTGgEjy6qJZU7njH3YMQwqj7j515HDVa\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/IReserve.sol\":{\"keccak256\":\"0x8da4d702b47a7e60981ca416f2d0f24a3c1dea9ab44f04b695c0fde02c84a38e\",\"urls\":[\"bzz-raw://198fb3cd945e374926e3d6bcb2469b7f5c635e78b40417a4b3a1eacabeca234b\",\"dweb:/ipfs/Qma8RRSqksFCzL5gWTXmGtJvC4Mw1bgquvN33nKhrRwUrD\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/ISortedOracles.sol\":{\"keccak256\":\"0x8f80e430800fff2f04f3981c4b73a2a374b2c2150543a2de51fcf7ba4fb08789\",\"urls\":[\"bzz-raw://f1a472385d5fa1b1cc4ab6ff948cd11f86c55328841d89f39f02b64449d3ac1a\",\"dweb:/ipfs/QmSYfwR8RJ2nyzt9VJtLKqaUHwAPfz579vhcQP7LRLaqTe\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/IStableToken.sol\":{\"keccak256\":\"0x091e577acecdf050fe4c41133b11fe330d07050c5fe78b65bfce32ccc29e51c6\",\"urls\":[\"bzz-raw://94f7d7578274be8212b8c9a3f0759d884969b05a7f0c64c7c9352102f4e51ab4\",\"dweb:/ipfs/Qmd3bERcFLrrvpURuzKUg6YCSFisNQ36YpRLWkxEcS1Tkj\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "0x608060405260006008553480156200001657600080fd5b5060405162003e7138038062003e71833981810160405260208110156200003c57600080fd5b8101908080519060200190929190505050808080620000705760016000806101000a81548160ff0219169083151502179055505b506000620000836200013260201b60201c565b905080600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350600160028190555050506200013a565b600033905090565b613d27806200014a6000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c806381bb18ec11610104578063c3434883116100a2578063db1bc87b11610071578063db1bc87b146107a8578063dda57b93146107ec578063e0c8b50a1461080a578063f2fde38b14610828576101da565b8063c343488314610657578063cf317778146106af578063d1a2bc1114610770578063d404f7f81461077a576101da565b80638f32d59b116100de5780638f32d59b146105755780639ed02b5814610597578063a91ee0dc146105e5578063b66a261c14610629576101da565b806381bb18ec146104b55780638ab1a5d4146104d35780638da5cb5b1461052b576101da565b806354255be01161017c5780636a5eaf471161014b5780636a5eaf47146103e8578063715018a61461041657806378ba9cfd146104205780637b1039991461046b576101da565b806354255be01461035b5780635c25c76c1461038e57806362f09084146103ac578063673ea086146103ca576101da565b806325ac2de6116101b857806325ac2de6146102695780632bc7d67a146102875780634a1be6cb146102df5780634c0226a21461030d576101da565b8063158ef93e146101df57806322503ce51461020157806322be3de11461021f575b600080fd5b6101e761086c565b604051808215151515815260200191505060405180910390f35b61020961087e565b6040518082815260200191505060405180910390f35b610227610884565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102716108aa565b6040518082815260200191505060405180910390f35b6102c96004803603606081101561029d57600080fd5b8101908080359060200190929190803590602001909291908035151590602001909291905050506108b0565b6040518082815260200191505060405180910390f35b61030b600480360360208110156102f557600080fd5b81019080803590602001909291905050506108c6565b005b6103456004803603604081101561032357600080fd5b8101908080359060200190929190803515159060200190929190505050610981565b6040518082815260200191505060405180910390f35b6103636109a8565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b6103966109cf565b6040518082815260200191505060405180910390f35b6103b46109db565b6040518082815260200191505060405180910390f35b6103d26109e1565b6040518082815260200191505060405180910390f35b610414600480360360208110156103fe57600080fd5b81019080803590602001909291905050506109e7565b005b61041e610b38565b005b61044e6004803603602081101561043657600080fd5b81019080803515159060200190929190505050610c72565b604051808381526020018281526020019250505060405180910390f35b610473610cc2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104bd610ce8565b6040518082815260200191505060405180910390f35b610515600480360360608110156104e957600080fd5b810190808035906020019092919080359060200190929190803515159060200190929190505050610cee565b6040518082815260200191505060405180910390f35b610533610f2d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61057d610f56565b604051808215151515815260200191505060405180910390f35b6105cf600480360360408110156105ad57600080fd5b8101908080359060200190929190803515159060200190929190505050610fb4565b6040518082815260200191505060405180910390f35b610627600480360360208110156105fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fdb565b005b6106556004803603602081101561063f57600080fd5b810190808035906020019092919050505061117f565b005b6106996004803603606081101561066d57600080fd5b8101908080359060200190929190803590602001909291908035151590602001909291905050506112c7565b6040518082815260200191505060405180910390f35b61076e600480360360c08110156106c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561070257600080fd5b82018360208201111561071457600080fd5b8035906020019184600183028401116401000000008311171561073657600080fd5b90919293919293908035906020019092919080359060200190929190803590602001909291908035906020019092919050505061150d565b005b61077861161e565b005b6107a66004803603602081101561079057600080fd5b8101908080359060200190929190505050611801565b005b6107ea600480360360208110156107be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118bc565b005b6107f4611942565b6040518082815260200191505060405180910390f35b61081261194e565b6040518082815260200191505060405180910390f35b61086a6004803603602081101561083e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611954565b005b6000809054906101000a900460ff1681565b600a5481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60006108bd848484610cee565b90509392505050565b6108ce610f56565b610940576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b806009819055507f90c0a4a142fbfbc2ae8c21f50729a2f4bc56e85a66c1a1b6654f1e85092a54a6816040518082815260200191505060405180910390a150565b600080600061098f84610c72565b9150915061099e8282876119da565b9250505092915050565b60008060008060016002600080839350829250819150809050935093509350935090919293565b60038060000154905081565b60065481565b60095481565b6109ef610f56565b610a61576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610a6a81611aa7565b600460008201518160000155905050610aa9610a84611ac5565b6004604051806020016040529081600082015481525050611aeb90919063ffffffff16565b610afe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180613ccc6027913960400191505060405180910390fd5b7fb690f84efb1d9039c2834effb7bebc792a85bfec7ef84f4b269528454f363ccf816040518082815260200191505060405180910390a150565b610b40610f56565b610bb2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000806000600654905060006007549050610c8b611b00565b15610ca157610c98611efd565b80925081935050505b8415610cb4578082935093505050610cbd565b81819350935050505b915091565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b6000610cf8611f56565b73ffffffffffffffffffffffffffffffffffffffff1663e5839836306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610d7457600080fd5b505afa158015610d88573d6000803e3d6000fd5b505050506040513d6020811015610d9e57600080fd5b810190808051906020019092919050505015610e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180613bb26022913960400191505060405180910390fd5b610e0d612051565b600160026000828254019250508190555060006002549050600080610e31856120c7565b915091506000610e4283838a6120ef565b905086811015610e9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526039815260200180613b796039913960400191505060405180910390fd5b610ea888828861218f565b8094505050506002548114610f25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b509392505050565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610f9861299b565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6000806000610fc284610c72565b91509150610fd18282876120ef565b9250505092915050565b610fe3610f56565b611055576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b611187610f56565b6111f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61120281611aa7565b6003600082015181600001559050506112386003604051806020016040529081600082015481525050611233611ac5565b6129a3565b61128d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526033815260200180613c996033913960400191505060405180910390fd5b7f8946f328efcc515b5cc3282f6cd95e87a6c0d3508421af0b52d4d3620b3e2db3816040518082815260200191505060405180910390a150565b60006112d1611f56565b73ffffffffffffffffffffffffffffffffffffffff1663e5839836306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561134d57600080fd5b505afa158015611361573d6000803e3d6000fd5b505050506040513d602081101561137757600080fd5b8101908080519060200190929190505050156113de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180613bb26022913960400191505060405180910390fd5b6113e6612051565b600160026000828254019250508190555060006002549050600083159050600080611410836120c7565b91509150600061142183838b6119da565b90508781111561147c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e815260200180613c0a603e913960400191505060405180910390fd5b611487818a8661218f565b809550505050506002548114611505576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b509392505050565b6000809054906101000a900460ff161561158f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b60016000806101000a81548160ff0219169083151502179055506115b2336129b9565b6115bb87610fdb565b858560405160200180838380828437808301925050509250505060405160208183030381529060405280519060200120600b819055506115fa8461117f565b611603836109e7565b61160c826108c6565b61161581611801565b50505050505050565b611626610f56565b611698576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461173f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180613b546025913960400191505060405180910390fd5b6117f7600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed600b546040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156117b757600080fd5b505afa1580156117cb573d6000803e3d6000fd5b505050506040513d60208110156117e157600080fd5b8101908080519060200190929190505050612aff565b6117ff612051565b565b611809610f56565b61187b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600a819055507f08523596abc266fb46d9c40ddf78fdfd3c08142252833ddce1a2b46f76521035816040518082815260200191505060405180910390a150565b6118c4610f56565b611936576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61193f81612aff565b50565b60048060000154905081565b60085481565b61195c610f56565b6119ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6119d7816129b9565b50565b6000808214156119ed5760009050611aa0565b6119f5613b1a565b611a10611a0b8585612b8690919063ffffffff16565b612c0c565b9050611a1a613b1a565b611a76611a4d6003604051806020016040529081600082015481525050611a3f611ac5565b612c9690919063ffffffff16565b611a68611a63878a612d3d90919063ffffffff16565b612c0c565b612d8790919063ffffffff16565b9050611a9b611a84826131e6565b611a8d846131e6565b6131f490919063ffffffff16565b925050505b9392505050565b611aaf613b1a565b6040518060200160405280838152509050919050565b611acd613b1a565b604051806020016040528069d3c21bcecceda1000000815250905090565b60008160000151836000015110905092915050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f536f727465644f7261636c657300000000000000000000000000000000000000815250600d019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611bbc57600080fd5b505afa158015611bd0573d6000803e3d6000fd5b505050506040513d6020811015611be657600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff1663ffe736bf600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b158015611c9957600080fd5b505afa158015611cad573d6000803e3d6000fd5b505050506040513d6040811015611cc357600080fd5b8101908080519060200190929190805190602001909291905050505090506000611cfa60095460085461323e90919063ffffffff16565b42101590506000600a548473ffffffffffffffffffffffffffffffffffffffff1663bbc66a94600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611da357600080fd5b505afa158015611db7573d6000803e3d6000fd5b505050506040513d6020811015611dcd57600080fd5b8101908080519060200190929190505050101590506000611df960095442612d3d90919063ffffffff16565b8573ffffffffffffffffffffffffffffffffffffffff1663071b48fc600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611e9857600080fd5b505afa158015611eac573d6000803e3d6000fd5b505050506040513d6020811015611ec257600080fd5b8101908080519060200190929190505050119050828015611ee05750815b8015611ee95750805b8015611ef3575083155b9550505050505090565b6000806000611f0a6132c6565b9050600080611f17613392565b80925081935050506000611f4682611f388686612b8690919063ffffffff16565b6131f490919063ffffffff16565b9050838195509550505050509091565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f467265657a6572000000000000000000000000000000000000000000000000008152506007019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561201157600080fd5b505afa158015612025573d6000803e3d6000fd5b505050506040513d602081101561203b57600080fd5b8101908080519060200190929190505050905090565b612059611b00565b156120c5574260088190555061206d611efd565b60066000600760008491905055839190505550507fa18ec663cb684011386aa866c4dacb32d2d2ad859a35d3440b6ce7200a76bad8600654600754604051808381526020018281526020019250505060405180910390a15b565b60008082156120df57600754600654915091506120ea565b600654600754915091505b915091565b6000808214156121025760009050612188565b61210a613b1a565b612113836135db565b905061211d613b1a565b61213861212987612c0c565b83612d8790919063ffffffff16565b9050612142613b1a565b61215d8361214f88612c0c565b61363490919063ffffffff16565b905061218261216b826131e6565b612174846131e6565b6131f490919063ffffffff16565b93505050505b9392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f52657365727665000000000000000000000000000000000000000000000000008152506007019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561224a57600080fd5b505afa15801561225e573d6000803e3d6000fd5b505050506040513d602081101561227457600080fd5b81019080805190602001909291905050509050811561258d576122a28460065461323e90919063ffffffff16565b6006819055506122bd83600754612d3d90919063ffffffff16565b6007819055506122cb6136dd565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd3383876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561238557600080fd5b505af1158015612399573d6000803e3d6000fd5b505050506040513d60208110156123af57600080fd5b8101908080519060200190929190505050612432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f5472616e73666572206f662073656c6c20746f6b656e206661696c656400000081525060200191505060405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156124db57600080fd5b505af11580156124ef573d6000803e3d6000fd5b505050506040513d602081101561250557600080fd5b8101908080519060200190929190505050612588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4d696e74206f6620737461626c6520746f6b656e206661696c6564000000000081525060200191505060405180910390fd5b612933565b6125a28460075461323e90919063ffffffff16565b6007819055506125bd83600654612d3d90919063ffffffff16565b600681905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156126a057600080fd5b505af11580156126b4573d6000803e3d6000fd5b505050506040513d60208110156126ca57600080fd5b810190808051906020019092919050505061274d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f5472616e73666572206f662073656c6c20746f6b656e206661696c656400000081525060200191505060405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68856040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156127c257600080fd5b505af11580156127d6573d6000803e3d6000fd5b505050506040513d60208110156127ec57600080fd5b8101908080519060200190929190505050508073ffffffffffffffffffffffffffffffffffffffff166303a0fea333856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561288557600080fd5b505af1158015612899573d6000803e3d6000fd5b505050506040513d60208110156128af57600080fd5b8101908080519060200190929190505050612932576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f5472616e73666572206f6620627579546f6b656e206661696c6564000000000081525060200191505060405180910390fd5b5b3373ffffffffffffffffffffffffffffffffffffffff167f402ac9185b4616422c2794bf5b118bfcc68ed496d52c0d9841dfa114fdeb05ba8585856040518084815260200183815260200182151515158152602001935050505060405180910390a250505050565b600033905090565b6000816000015183600001511115905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613b2e6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f119a23392e161a0bc5f9d5f3e2a6040c45b40d43a36973e10ea1de916f3d8a8a60405160405180910390a250565b600080831415612b995760009050612c06565b6000828402905082848281612baa57fe5b0414612c01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613c786021913960400191505060405180910390fd5b809150505b92915050565b612c14613b1a565b612c1c6137d8565b821115612c74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180613bd46036913960400191505060405180910390fd5b604051806020016040528069d3c21bcecceda100000084028152509050919050565b612c9e613b1a565b816000015183600001511015612d1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f737562737472616374696f6e20756e646572666c6f772064657465637465640081525060200191505060405180910390fd5b60405180602001604052808360000151856000015103815250905092915050565b6000612d7f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506137f7565b905092915050565b612d8f613b1a565b600083600001511480612da6575060008260000151145b15612dc2576040518060200160405280600081525090506131e0565b69d3c21bcecceda100000082600001511415612de0578290506131e0565b69d3c21bcecceda100000083600001511415612dfe578190506131e0565b600069d3c21bcecceda1000000612e14856138b7565b6000015181612e1f57fe5b0490506000612e2d856138ee565b600001519050600069d3c21bcecceda1000000612e49866138b7565b6000015181612e5457fe5b0490506000612e62866138ee565b6000015190506000828502905060008514612ef65782858281612e8157fe5b0414612ef5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b600069d3c21bcecceda10000008202905060008214612f985769d3c21bcecceda1000000828281612f2357fe5b0414612f97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f6f766572666c6f772078317931202a206669786564312064657465637465640081525060200191505060405180910390fd5b5b80915060008486029050600086146130295784868281612fb457fe5b0414613028576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b60008488029050600088146130b7578488828161304257fe5b04146130b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b6130bf61392b565b87816130c757fe5b0496506130d261392b565b85816130da57fe5b049450600085880290506000881461316b57858882816130f657fe5b041461316a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b613173613b1a565b604051806020016040528087815250905061319c81604051806020016040528087815250613634565b90506131b681604051806020016040528086815250613634565b90506131d081604051806020016040528085815250613634565b9050809a50505050505050505050505b92915050565b600081600001519050919050565b600061323683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613938565b905092915050565b6000808284019050838110156132bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000806132d16139fe565b73ffffffffffffffffffffffffffffffffffffffff16638b7df8d46040518163ffffffff1660e01b815260040160206040518083038186803b15801561331657600080fd5b505afa15801561332a573d6000803e3d6000fd5b505050506040513d602081101561334057600080fd5b8101908080519060200190929190505050905061338c61338761336283612c0c565b6004604051806020016040529081600082015481525050612d8790919063ffffffff16565b613af9565b91505090565b600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f536f727465644f7261636c657300000000000000000000000000000000000000815250600d019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561345157600080fd5b505afa158015613465573d6000803e3d6000fd5b505050506040513d602081101561347b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663ef90e1b0600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801561352957600080fd5b505afa15801561353d573d6000803e3d6000fd5b505050506040513d604081101561355357600080fd5b8101908080519060200190929190805190602001909291905050508092508193505050600081116135cf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180613c486030913960400191505060405180910390fd5b81819350935050509091565b6135e3613b1a565b61362d6135ef83612c0c565b61361f6003604051806020016040529081600082015481525050613611611ac5565b612c9690919063ffffffff16565b612d8790919063ffffffff16565b9050919050565b61363c613b1a565b60008260000151846000015101905083600001518110156136c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f616464206f766572666c6f77206465746563746564000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808281525091505092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f476f6c64546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561379857600080fd5b505afa1580156137ac573d6000803e3d6000fd5b505050506040513d60208110156137c257600080fd5b8101908080519060200190929190505050905090565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b60008383111582906138a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561386957808201518184015260208101905061384e565b50505050905090810190601f1680156138965780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6138bf613b1a565b604051806020016040528069d3c21bcecceda1000000808560000151816138e257fe5b04028152509050919050565b6138f6613b1a565b604051806020016040528069d3c21bcecceda10000008085600001518161391957fe5b04028460000151038152509050919050565b600064e8d4a51000905090565b600080831182906139e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156139a957808201518184015260208101905061398e565b50505050905090810190601f1680156139d65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816139f057fe5b049050809150509392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f52657365727665000000000000000000000000000000000000000000000000008152506007019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613ab957600080fd5b505afa158015613acd573d6000803e3d6000fd5b505050506040513d6020811015613ae357600080fd5b8101908080519060200190929190505050905090565b600069d3c21bcecceda1000000826000015181613b1257fe5b049050919050565b604051806020016040528060008152509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373537461626c65546f6b656e206164647265737320616c72656164792061637469766174656443616c63756c6174656420627579416d6f756e7420776173206c657373207468616e20737065636966696564206d696e427579416d6f756e7463616e27742063616c6c207768656e20636f6e74726163742069732066726f7a656e63616e277420637265617465206669786964697479206e756d626572206c6172676572207468616e206d61784e65774669786564282943616c63756c617465642073656c6c416d6f756e74207761732067726561746572207468616e20737065636966696564206d617853656c6c416d6f756e7465786368616e676520726174652064656e6f6d696e61746f72206d7573742062652067726561746572207468616e2030536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f777468652076616c7565206f6620737072656164206d757374206265206c657373207468616e206f7220657175616c20746f203172657365727665206672616374696f6e206d75737420626520736d616c6c6572207468616e2031a265627a7a72315820e6c20801a8e75b5f80f4d540913e57acc163e8b79fed6009d2575d6ec3e102ee64736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c806381bb18ec11610104578063c3434883116100a2578063db1bc87b11610071578063db1bc87b146107a8578063dda57b93146107ec578063e0c8b50a1461080a578063f2fde38b14610828576101da565b8063c343488314610657578063cf317778146106af578063d1a2bc1114610770578063d404f7f81461077a576101da565b80638f32d59b116100de5780638f32d59b146105755780639ed02b5814610597578063a91ee0dc146105e5578063b66a261c14610629576101da565b806381bb18ec146104b55780638ab1a5d4146104d35780638da5cb5b1461052b576101da565b806354255be01161017c5780636a5eaf471161014b5780636a5eaf47146103e8578063715018a61461041657806378ba9cfd146104205780637b1039991461046b576101da565b806354255be01461035b5780635c25c76c1461038e57806362f09084146103ac578063673ea086146103ca576101da565b806325ac2de6116101b857806325ac2de6146102695780632bc7d67a146102875780634a1be6cb146102df5780634c0226a21461030d576101da565b8063158ef93e146101df57806322503ce51461020157806322be3de11461021f575b600080fd5b6101e761086c565b604051808215151515815260200191505060405180910390f35b61020961087e565b6040518082815260200191505060405180910390f35b610227610884565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6102716108aa565b6040518082815260200191505060405180910390f35b6102c96004803603606081101561029d57600080fd5b8101908080359060200190929190803590602001909291908035151590602001909291905050506108b0565b6040518082815260200191505060405180910390f35b61030b600480360360208110156102f557600080fd5b81019080803590602001909291905050506108c6565b005b6103456004803603604081101561032357600080fd5b8101908080359060200190929190803515159060200190929190505050610981565b6040518082815260200191505060405180910390f35b6103636109a8565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b6103966109cf565b6040518082815260200191505060405180910390f35b6103b46109db565b6040518082815260200191505060405180910390f35b6103d26109e1565b6040518082815260200191505060405180910390f35b610414600480360360208110156103fe57600080fd5b81019080803590602001909291905050506109e7565b005b61041e610b38565b005b61044e6004803603602081101561043657600080fd5b81019080803515159060200190929190505050610c72565b604051808381526020018281526020019250505060405180910390f35b610473610cc2565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6104bd610ce8565b6040518082815260200191505060405180910390f35b610515600480360360608110156104e957600080fd5b810190808035906020019092919080359060200190929190803515159060200190929190505050610cee565b6040518082815260200191505060405180910390f35b610533610f2d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61057d610f56565b604051808215151515815260200191505060405180910390f35b6105cf600480360360408110156105ad57600080fd5b8101908080359060200190929190803515159060200190929190505050610fb4565b6040518082815260200191505060405180910390f35b610627600480360360208110156105fb57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050610fdb565b005b6106556004803603602081101561063f57600080fd5b810190808035906020019092919050505061117f565b005b6106996004803603606081101561066d57600080fd5b8101908080359060200190929190803590602001909291908035151590602001909291905050506112c7565b6040518082815260200191505060405180910390f35b61076e600480360360c08110156106c557600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291908035906020019064010000000081111561070257600080fd5b82018360208201111561071457600080fd5b8035906020019184600183028401116401000000008311171561073657600080fd5b90919293919293908035906020019092919080359060200190929190803590602001909291908035906020019092919050505061150d565b005b61077861161e565b005b6107a66004803603602081101561079057600080fd5b8101908080359060200190929190505050611801565b005b6107ea600480360360208110156107be57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506118bc565b005b6107f4611942565b6040518082815260200191505060405180910390f35b61081261194e565b6040518082815260200191505060405180910390f35b61086a6004803603602081101561083e57600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611954565b005b6000809054906101000a900460ff1681565b600a5481565b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60075481565b60006108bd848484610cee565b90509392505050565b6108ce610f56565b610940576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b806009819055507f90c0a4a142fbfbc2ae8c21f50729a2f4bc56e85a66c1a1b6654f1e85092a54a6816040518082815260200191505060405180910390a150565b600080600061098f84610c72565b9150915061099e8282876119da565b9250505092915050565b60008060008060016002600080839350829250819150809050935093509350935090919293565b60038060000154905081565b60065481565b60095481565b6109ef610f56565b610a61576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b610a6a81611aa7565b600460008201518160000155905050610aa9610a84611ac5565b6004604051806020016040529081600082015481525050611aeb90919063ffffffff16565b610afe576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526027815260200180613ccc6027913960400191505060405180910390fd5b7fb690f84efb1d9039c2834effb7bebc792a85bfec7ef84f4b269528454f363ccf816040518082815260200191505060405180910390a150565b610b40610f56565b610bb2576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b6000806000600654905060006007549050610c8b611b00565b15610ca157610c98611efd565b80925081935050505b8415610cb4578082935093505050610cbd565b81819350935050505b915091565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600b5481565b6000610cf8611f56565b73ffffffffffffffffffffffffffffffffffffffff1663e5839836306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015610d7457600080fd5b505afa158015610d88573d6000803e3d6000fd5b505050506040513d6020811015610d9e57600080fd5b810190808051906020019092919050505015610e05576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180613bb26022913960400191505060405180910390fd5b610e0d612051565b600160026000828254019250508190555060006002549050600080610e31856120c7565b915091506000610e4283838a6120ef565b905086811015610e9d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526039815260200180613b796039913960400191505060405180910390fd5b610ea888828861218f565b8094505050506002548114610f25576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b509392505050565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16610f9861299b565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6000806000610fc284610c72565b91509150610fd18282876120ef565b9250505092915050565b610fe3610f56565b611055576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614156110f8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b611187610f56565b6111f9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61120281611aa7565b6003600082015181600001559050506112386003604051806020016040529081600082015481525050611233611ac5565b6129a3565b61128d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526033815260200180613c996033913960400191505060405180910390fd5b7f8946f328efcc515b5cc3282f6cd95e87a6c0d3508421af0b52d4d3620b3e2db3816040518082815260200191505060405180910390a150565b60006112d1611f56565b73ffffffffffffffffffffffffffffffffffffffff1663e5839836306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561134d57600080fd5b505afa158015611361573d6000803e3d6000fd5b505050506040513d602081101561137757600080fd5b8101908080519060200190929190505050156113de576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526022815260200180613bb26022913960400191505060405180910390fd5b6113e6612051565b600160026000828254019250508190555060006002549050600083159050600080611410836120c7565b91509150600061142183838b6119da565b90508781111561147c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603e815260200180613c0a603e913960400191505060405180910390fd5b611487818a8661218f565b809550505050506002548114611505576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b509392505050565b6000809054906101000a900460ff161561158f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b60016000806101000a81548160ff0219169083151502179055506115b2336129b9565b6115bb87610fdb565b858560405160200180838380828437808301925050509250505060405160208183030381529060405280519060200120600b819055506115fa8461117f565b611603836109e7565b61160c826108c6565b61161581611801565b50505050505050565b611626610f56565b611698576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff16600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff161461173f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526025815260200180613b546025913960400191505060405180910390fd5b6117f7600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed600b546040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156117b757600080fd5b505afa1580156117cb573d6000803e3d6000fd5b505050506040513d60208110156117e157600080fd5b8101908080519060200190929190505050612aff565b6117ff612051565b565b611809610f56565b61187b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600a819055507f08523596abc266fb46d9c40ddf78fdfd3c08142252833ddce1a2b46f76521035816040518082815260200191505060405180910390a150565b6118c4610f56565b611936576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61193f81612aff565b50565b60048060000154905081565b60085481565b61195c610f56565b6119ce576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6119d7816129b9565b50565b6000808214156119ed5760009050611aa0565b6119f5613b1a565b611a10611a0b8585612b8690919063ffffffff16565b612c0c565b9050611a1a613b1a565b611a76611a4d6003604051806020016040529081600082015481525050611a3f611ac5565b612c9690919063ffffffff16565b611a68611a63878a612d3d90919063ffffffff16565b612c0c565b612d8790919063ffffffff16565b9050611a9b611a84826131e6565b611a8d846131e6565b6131f490919063ffffffff16565b925050505b9392505050565b611aaf613b1a565b6040518060200160405280838152509050919050565b611acd613b1a565b604051806020016040528069d3c21bcecceda1000000815250905090565b60008160000151836000015110905092915050565b600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f536f727465644f7261636c657300000000000000000000000000000000000000815250600d019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015611bbc57600080fd5b505afa158015611bd0573d6000803e3d6000fd5b505050506040513d6020811015611be657600080fd5b8101908080519060200190929190505050905060008173ffffffffffffffffffffffffffffffffffffffff1663ffe736bf600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b158015611c9957600080fd5b505afa158015611cad573d6000803e3d6000fd5b505050506040513d6040811015611cc357600080fd5b8101908080519060200190929190805190602001909291905050505090506000611cfa60095460085461323e90919063ffffffff16565b42101590506000600a548473ffffffffffffffffffffffffffffffffffffffff1663bbc66a94600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611da357600080fd5b505afa158015611db7573d6000803e3d6000fd5b505050506040513d6020811015611dcd57600080fd5b8101908080519060200190929190505050101590506000611df960095442612d3d90919063ffffffff16565b8573ffffffffffffffffffffffffffffffffffffffff1663071b48fc600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b158015611e9857600080fd5b505afa158015611eac573d6000803e3d6000fd5b505050506040513d6020811015611ec257600080fd5b8101908080519060200190929190505050119050828015611ee05750815b8015611ee95750805b8015611ef3575083155b9550505050505090565b6000806000611f0a6132c6565b9050600080611f17613392565b80925081935050506000611f4682611f388686612b8690919063ffffffff16565b6131f490919063ffffffff16565b9050838195509550505050509091565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f467265657a6572000000000000000000000000000000000000000000000000008152506007019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561201157600080fd5b505afa158015612025573d6000803e3d6000fd5b505050506040513d602081101561203b57600080fd5b8101908080519060200190929190505050905090565b612059611b00565b156120c5574260088190555061206d611efd565b60066000600760008491905055839190505550507fa18ec663cb684011386aa866c4dacb32d2d2ad859a35d3440b6ce7200a76bad8600654600754604051808381526020018281526020019250505060405180910390a15b565b60008082156120df57600754600654915091506120ea565b600654600754915091505b915091565b6000808214156121025760009050612188565b61210a613b1a565b612113836135db565b905061211d613b1a565b61213861212987612c0c565b83612d8790919063ffffffff16565b9050612142613b1a565b61215d8361214f88612c0c565b61363490919063ffffffff16565b905061218261216b826131e6565b612174846131e6565b6131f490919063ffffffff16565b93505050505b9392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f52657365727665000000000000000000000000000000000000000000000000008152506007019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561224a57600080fd5b505afa15801561225e573d6000803e3d6000fd5b505050506040513d602081101561227457600080fd5b81019080805190602001909291905050509050811561258d576122a28460065461323e90919063ffffffff16565b6006819055506122bd83600754612d3d90919063ffffffff16565b6007819055506122cb6136dd565b73ffffffffffffffffffffffffffffffffffffffff166323b872dd3383876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561238557600080fd5b505af1158015612399573d6000803e3d6000fd5b505050506040513d60208110156123af57600080fd5b8101908080519060200190929190505050612432576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f5472616e73666572206f662073656c6c20746f6b656e206661696c656400000081525060200191505060405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1933856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1580156124db57600080fd5b505af11580156124ef573d6000803e3d6000fd5b505050506040513d602081101561250557600080fd5b8101908080519060200190929190505050612588576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f4d696e74206f6620737461626c6520746f6b656e206661696c6564000000000081525060200191505060405180910390fd5b612933565b6125a28460075461323e90919063ffffffff16565b6007819055506125bd83600654612d3d90919063ffffffff16565b600681905550600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330876040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b1580156126a057600080fd5b505af11580156126b4573d6000803e3d6000fd5b505050506040513d60208110156126ca57600080fd5b810190808051906020019092919050505061274d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f5472616e73666572206f662073656c6c20746f6b656e206661696c656400000081525060200191505060405180910390fd5b600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68856040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b1580156127c257600080fd5b505af11580156127d6573d6000803e3d6000fd5b505050506040513d60208110156127ec57600080fd5b8101908080519060200190929190505050508073ffffffffffffffffffffffffffffffffffffffff166303a0fea333856040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561288557600080fd5b505af1158015612899573d6000803e3d6000fd5b505050506040513d60208110156128af57600080fd5b8101908080519060200190929190505050612932576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f5472616e73666572206f6620627579546f6b656e206661696c6564000000000081525060200191505060405180910390fd5b5b3373ffffffffffffffffffffffffffffffffffffffff167f402ac9185b4616422c2794bf5b118bfcc68ed496d52c0d9841dfa114fdeb05ba8585856040518084815260200183815260200182151515158152602001935050505060405180910390a250505050565b600033905090565b6000816000015183600001511115905092915050565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415612a3f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526026815260200180613b2e6026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff16600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f119a23392e161a0bc5f9d5f3e2a6040c45b40d43a36973e10ea1de916f3d8a8a60405160405180910390a250565b600080831415612b995760009050612c06565b6000828402905082848281612baa57fe5b0414612c01576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180613c786021913960400191505060405180910390fd5b809150505b92915050565b612c14613b1a565b612c1c6137d8565b821115612c74576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526036815260200180613bd46036913960400191505060405180910390fd5b604051806020016040528069d3c21bcecceda100000084028152509050919050565b612c9e613b1a565b816000015183600001511015612d1c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f737562737472616374696f6e20756e646572666c6f772064657465637465640081525060200191505060405180910390fd5b60405180602001604052808360000151856000015103815250905092915050565b6000612d7f83836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506137f7565b905092915050565b612d8f613b1a565b600083600001511480612da6575060008260000151145b15612dc2576040518060200160405280600081525090506131e0565b69d3c21bcecceda100000082600001511415612de0578290506131e0565b69d3c21bcecceda100000083600001511415612dfe578190506131e0565b600069d3c21bcecceda1000000612e14856138b7565b6000015181612e1f57fe5b0490506000612e2d856138ee565b600001519050600069d3c21bcecceda1000000612e49866138b7565b6000015181612e5457fe5b0490506000612e62866138ee565b6000015190506000828502905060008514612ef65782858281612e8157fe5b0414612ef5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b600069d3c21bcecceda10000008202905060008214612f985769d3c21bcecceda1000000828281612f2357fe5b0414612f97576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f6f766572666c6f772078317931202a206669786564312064657465637465640081525060200191505060405180910390fd5b5b80915060008486029050600086146130295784868281612fb457fe5b0414613028576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b60008488029050600088146130b7578488828161304257fe5b04146130b6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b6130bf61392b565b87816130c757fe5b0496506130d261392b565b85816130da57fe5b049450600085880290506000881461316b57858882816130f657fe5b041461316a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b613173613b1a565b604051806020016040528087815250905061319c81604051806020016040528087815250613634565b90506131b681604051806020016040528086815250613634565b90506131d081604051806020016040528085815250613634565b9050809a50505050505050505050505b92915050565b600081600001519050919050565b600061323683836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250613938565b905092915050565b6000808284019050838110156132bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000806132d16139fe565b73ffffffffffffffffffffffffffffffffffffffff16638b7df8d46040518163ffffffff1660e01b815260040160206040518083038186803b15801561331657600080fd5b505afa15801561332a573d6000803e3d6000fd5b505050506040513d602081101561334057600080fd5b8101908080519060200190929190505050905061338c61338761336283612c0c565b6004604051806020016040529081600082015481525050612d8790919063ffffffff16565b613af9565b91505090565b600080600080600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f536f727465644f7261636c657300000000000000000000000000000000000000815250600d019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561345157600080fd5b505afa158015613465573d6000803e3d6000fd5b505050506040513d602081101561347b57600080fd5b810190808051906020019092919050505073ffffffffffffffffffffffffffffffffffffffff1663ef90e1b0600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801561352957600080fd5b505afa15801561353d573d6000803e3d6000fd5b505050506040513d604081101561355357600080fd5b8101908080519060200190929190805190602001909291905050508092508193505050600081116135cf576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526030815260200180613c486030913960400191505060405180910390fd5b81819350935050509091565b6135e3613b1a565b61362d6135ef83612c0c565b61361f6003604051806020016040529081600082015481525050613611611ac5565b612c9690919063ffffffff16565b612d8790919063ffffffff16565b9050919050565b61363c613b1a565b60008260000151846000015101905083600001518110156136c5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f616464206f766572666c6f77206465746563746564000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808281525091505092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f476f6c64546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561379857600080fd5b505afa1580156137ac573d6000803e3d6000fd5b505050506040513d60208110156137c257600080fd5b8101908080519060200190929190505050905090565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b60008383111582906138a4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b8381101561386957808201518184015260208101905061384e565b50505050905090810190601f1680156138965780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b6138bf613b1a565b604051806020016040528069d3c21bcecceda1000000808560000151816138e257fe5b04028152509050919050565b6138f6613b1a565b604051806020016040528069d3c21bcecceda10000008085600001518161391957fe5b04028460000151038152509050919050565b600064e8d4a51000905090565b600080831182906139e4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156139a957808201518184015260208101905061398e565b50505050905090810190601f1680156139d65780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385816139f057fe5b049050809150509392505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f52657365727665000000000000000000000000000000000000000000000000008152506007019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015613ab957600080fd5b505afa158015613acd573d6000803e3d6000fd5b505050506040513d6020811015613ae357600080fd5b8101908080519060200190929190505050905090565b600069d3c21bcecceda1000000826000015181613b1257fe5b049050919050565b604051806020016040528060008152509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373537461626c65546f6b656e206164647265737320616c72656164792061637469766174656443616c63756c6174656420627579416d6f756e7420776173206c657373207468616e20737065636966696564206d696e427579416d6f756e7463616e27742063616c6c207768656e20636f6e74726163742069732066726f7a656e63616e277420637265617465206669786964697479206e756d626572206c6172676572207468616e206d61784e65774669786564282943616c63756c617465642073656c6c416d6f756e74207761732067726561746572207468616e20737065636966696564206d617853656c6c416d6f756e7465786368616e676520726174652064656e6f6d696e61746f72206d7573742062652067726561746572207468616e2030536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f777468652076616c7565206f6620737072656164206d757374206265206c657373207468616e206f7220657175616c20746f203172657365727665206672616374696f6e206d75737420626520736d616c6c6572207468616e2031a265627a7a72315820e6c20801a8e75b5f80f4d540913e57acc163e8b79fed6009d2575d6ec3e102ee64736f6c634300050d0032",
  "sourceMap": "52:606:125:-;;;1707:1:123;1673:35;;234:47:125;8:9:-1;5:2;;;30:1;27;20:12;5:2;234:47:125;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;234:47:125;;;;;;;;;;;;;;;;273:4;2386::123;135:17:12;130:57;;176:4;162:11;;:18;;;;;;;;;;;;;;;;;;130:57;81:110;698:17:154;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;558:1:34;542:13;:17;;;;2342:52:123;234:47:125;52:606;;788:96:150;833:15;867:10;860:17;;788:96;:::o;52:606:125:-;;;;;;;",
  "deployedSourceMap": "52:606:125:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;52:606:125;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;53:23:12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1746:29:123;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1504:21;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1641:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;5729:170;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5729:170:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;10389:169;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10389:169:123;;;;;;;;;;;;;;;;;:::i;:::-;;9287:263;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9287:263:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;539:117:125;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1323:34:123;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1567:25;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1712:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;11659:285;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11659:285:123;;;;;;;;;;;;;;;;;:::i;:::-;;1684:137:154;;;:::i;:::-;;9819:441:123;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;9819:441:123;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;2540:25:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1780:36:123;;;:::i;:::-;;;;;;;;;;;;;;;;;;;4567:530;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4567:530:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;899:77:154;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;8708:263:123;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8708:263:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3089:230:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3089:230:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;11250:266:123;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11250:266:123;;;;;;;;;;;;;;;;;:::i;:::-;;6482:587;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6482:587:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;3027:530;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;3027:530:123;;;;;;;;;;;;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;3027:530:123;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;3027:530:123;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;3027:530:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3747:232;;;:::i;:::-;;10729:163;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10729:163:123;;;;;;;;;;;;;;;;;:::i;:::-;;11029:107;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;11029:107:123;;;;;;;;;;;;;;;;;;;:::i;:::-;;1456:43;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1673:35;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1970:107:154;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:154;;;;;;;;;;;;;;;;;;;:::i;:::-;;53:23:12;;;;;;;;;;;;;:::o;1746:29:123:-;;;;:::o;1504:21::-;;;;;;;;;;;;;:::o;1641:27::-;;;;:::o;5729:170::-;5830:7;5854:40;5859:10;5871:12;5885:8;5854:4;:40::i;:::-;5847:47;;5729:170;;;;;:::o;10389:169::-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10486:18:123;10468:15;:36;;;;10515:38;10534:18;10515:38;;;;;;;;;;;;;;;;;;10389:169;:::o;9287:263::-;9372:7;9388:22;9412:23;9439:30;9460:8;9439:20;:30::i;:::-;9387:82;;;;9482:63;9502:14;9518:15;9535:9;9482:19;:63::i;:::-;9475:70;;;;9287:263;;;;:::o;539:117:125:-;590:7;599;608;617;640:1;643;646;649;632:19;;;;;;;;;;;;;;;;;;;;539:117;;;;:::o;1323:34:123:-;;;;;;;;;:::o;1567:25::-;;;;:::o;1712:30::-;;;;:::o;11659:285::-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11756:36:123;11773:18;11756:16;:36::i;:::-;11738:15;:54;;;;;;;;;;;11806:40;11825:20;:18;:20::i;:::-;11806:15;:18;;;;;;;;;;;;;;;;;;;:40;;;;:::i;:::-;11798:92;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11901:38;11920:18;11901:38;;;;;;;;;;;;;;;;;;11659:285;:::o;1684:137:154:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;9819:441:123:-;9885:7;9894;9909:25;9937:10;;9909:38;;9953:27;9983:12;;9953:42;;10006:21;:19;:21::i;:::-;10002:104;;;10080:19;:17;:19::i;:::-;10037:62;;;;;;;;10002:104;10116:8;10112:144;;;10142:19;10163:17;10134:47;;;;;;;;10112:144;10210:17;10229:19;10202:47;;;;;;9819:441;;;;:::o;2540:25:23:-;;;;;;;;;;;;;:::o;1780:36:123:-;;;;:::o;4567:530::-;4730:7;250:12:8;:10;:12::i;:::-;:21;;;280:4;250:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;250:36:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;250:36:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;250:36:8;;;;;;;;;;;;;;;;249:37;241:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1863:27:123;:25;:27::i;:::-;970:1:34;953:13;;:18;;;;;;;;;;;977:20;1000:13;;977:36;;4748:22:123;4772:23;4799:31;4821:8;4799:21;:31::i;:::-;4747:83;;;;4836:17;4856:63;4875:14;4891:15;4908:10;4856:18;:63::i;:::-;4836:83;;4947:12;4934:9;:25;;4926:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5028:42;5038:10;5050:9;5061:8;5028:9;:42::i;:::-;5083:9;5076:16;;;;;1050:13:34;;1034:12;:29;1026:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1896:1:123;4567:530;;;;;:::o;899:77:154:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;8708:263:123:-;8793:7;8809:22;8833:23;8860:30;8881:8;8860:20;:30::i;:::-;8808:82;;;;8903:63;8922:14;8938:15;8955:10;8903:18;:63::i;:::-;8896:70;;;;8708:263;;;;:::o;3089:230:23:-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3193:1:23;3166:29;;:15;:29;;;;3158:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:15;3238:8;;:37;;;;;;;;;;;;;;;;;;3298:15;3286:28;;;;;;;;;;;;3089:230;:::o;11250:266:123:-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11320:27:123;11337:9;11320:16;:27::i;:::-;11311:6;:36;;;;;;;;;;;11368:45;11384:6;11368:45;;;;;;;;;;;;;;;;;11392:20;:18;:20::i;:::-;11368:15;:45::i;:::-;11353:127;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11491:20;11501:9;11491:20;;;;;;;;;;;;;;;;;;11250:266;:::o;6482:587::-;6645:7;250:12:8;:10;:12::i;:::-;:21;;;280:4;250:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;250:36:8;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;250:36:8;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;250:36:8;;;;;;;;;;;;;;;;249:37;241:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1863:27:123;:25;:27::i;:::-;970:1:34;953:13;;:18;;;;;;;;;;;977:20;1000:13;;977:36;;6662:13:123;6679:7;6678:8;6662:24;;6693:22;6717:23;6744:31;6766:8;6744:21;:31::i;:::-;6692:83;;;;6781:18;6802:63;6822:14;6838:15;6855:9;6802:19;:63::i;:::-;6781:84;;6901:13;6887:10;:27;;6872:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6999:42;7009:10;7021:9;7032:8;6999:9;:42::i;:::-;7054:10;7047:17;;;;;;1050:13:34;;1034:12;:29;1026:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1896:1:123;6482:587;;;;;:::o;3027:530::-;233:11:12;;;;;;;;;;;232:12;224:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;297:4;283:11;;:18;;;;;;;;;;;;;;;;;;3260:30:123;3279:10;3260:18;:30::i;:::-;3296:28;3308:15;3296:11;:28::i;:::-;3381:21;;3364:39;;;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;3364:39:123;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;3364:39:123;;;3354:50;;;;;;3330:21;:74;;;;3410:18;3420:7;3410:9;:18::i;:::-;3434:36;3453:16;3434:18;:36::i;:::-;3476;3495:16;3476:18;:36::i;:::-;3518:34;3536:15;3518:17;:34::i;:::-;3027:530;;;;;;;:::o;3747:232::-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3824:1:123;3806:20;;:6;;;;;;;;;;;:20;;;3798:70;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3874:67;3890:8;;;;;;;;;;;:27;;;3918:21;;3890:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3890:50:123;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;3890:50:123;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3890:50:123;;;;;;;;;;;;;;;;3874:15;:67::i;:::-;3947:27;:25;:27::i;:::-;3747:232::o;10729:163::-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10823:17:123;10806:14;:34;;;;10851:36;10869:17;10851:36;;;;;;;;;;;;;;;;;;10729:163;:::o;11029:107::-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11100:31:123;11116:14;11100:15;:31::i;:::-;11029:107;:::o;1456:43::-;;;;;;;;;:::o;1673:35::-;;;;:::o;1970:107:154:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;14050:540:123:-;14181:7;14215:1;14202:9;:14;14198:28;;;14225:1;14218:8;;;;14198:28;14233:37;;:::i;:::-;14273:52;14294:30;14308:15;14294:9;:13;;:30;;;;:::i;:::-;14273:20;:52::i;:::-;14233:92;;14331:39;;:::i;:::-;14373:113;14448:37;14478:6;14448:37;;;;;;;;;;;;;;;;;:20;:18;:20::i;:::-;:29;;:37;;;;:::i;:::-;14373:58;14401:29;14420:9;14401:14;:18;;:29;;;;:::i;:::-;14373:27;:58::i;:::-;:74;;:113;;;;:::i;:::-;14331:155;;14541:44;14564:20;:11;:18;:20::i;:::-;14541:18;:9;:16;:18::i;:::-;:22;;:44;;;;:::i;:::-;14534:51;;;;14050:540;;;;;;:::o;1502:94:7:-;1550:15;;:::i;:::-;1580:11;;;;;;;;1589:1;1580:11;;;1573:18;;1502:94;;;:::o;1180:97::-;1221:15;;:::i;:::-;1251:21;;;;;;;;996:25;1251:21;;;1244:28;;1180:97;:::o;9799:114::-;9872:4;9901:1;:7;;;9891:1;:7;;;:17;9884:24;;9799:114;;;;:::o;16253:681:123:-;16306:4;16318:28;16371:8;;;;;;;;;;;:27;;;2287:33:23;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2287:33:23;;;2277:44;;;;;;16371:55:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16371:55:123;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16371:55:123;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16371:55:123;;;;;;;;;;;;;;;;16318:114;;16439:20;16465:13;:35;;;16501:6;;;;;;;;;;;16465:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16465:43:123;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16465:43:123;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16465:43:123;;;;;;;;;;;;;;;;;;;;;;;;;16438:70;;;16564:15;16589:37;16610:15;;16589:16;;:20;;:37;;;;:::i;:::-;16582:3;:44;;16564:62;;16632:18;16687:14;;16653:13;:22;;;16676:6;;;;;;;;;;;16653:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16653:30:123;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16653:30:123;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16653:30:123;;;;;;;;;;;;;;;;:48;;16632:69;;16757:23;16823:24;16831:15;;16823:3;:7;;:24;;;;:::i;:::-;16783:13;:29;;;16813:6;;;;;;;;;;;16783:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16783:37:123;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16783:37:123;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16783:37:123;;;;;;;;;;;;;;;;:64;16757:90;;16860:10;:27;;;;;16874:13;16860:27;:49;;;;;16891:18;16860:49;:69;;;;;16914:15;16913:16;16860:69;16853:76;;;;;;;16253:681;:::o;14594:456::-;14645:7;14654;14669:25;14697:22;:20;:22::i;:::-;14669:50;;14725:29;14760:31;14848:23;:21;:23::i;:::-;14797:74;;;;;;;;14877:27;14907:85;14963:23;14907:44;14933:17;14907:21;:25;;:44;;;;:::i;:::-;:48;;:85;;;;:::i;:::-;14877:115;;15006:17;15025:19;14998:47;;;;;;;;14594:456;;:::o;4092:131:23:-;4137:8;4169;;;;;;;;;;;:27;;;1668;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1668:27:23;;;1658:38;;;;;;4169:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4169:48:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4169:48:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4169:48:23;;;;;;;;;;;;;;;;4153:65;;4092:131;:::o;15425:281:123:-;15480:21;:19;:21::i;:::-;15476:226;;;15582:3;15563:16;:22;;;;15623:19;:17;:19::i;:::-;15595:10;;15607:12;;15594:48;;;;;;;;;;;;15655:40;15670:10;;15682:12;;15655:40;;;;;;;;;;;;;;;;;;;;;;;;15476:226;15425:281::o;12350:212::-;12418:7;12427;12446:8;12442:116;;;12472:12;;12486:10;;12464:33;;;;;;12442:116;12526:10;;12538:12;;12518:33;;;;12350:212;;;;:::o;12890:801::-;13021:7;13056:1;13042:10;:15;13038:29;;;13066:1;13059:8;;;;13038:29;13074:45;;:::i;:::-;13122:32;13143:10;13122:20;:32::i;:::-;13074:80;;13160:37;;:::i;:::-;13200:76;13234:36;13255:14;13234:20;:36::i;:::-;13200:17;:26;;:76;;;;:::i;:::-;13160:116;;13282:39;;:::i;:::-;13324:72;13373:17;13324:37;13345:15;13324:20;:37::i;:::-;:41;;:72;;;;:::i;:::-;13282:114;;13642:44;13665:20;:11;:18;:20::i;:::-;13642:18;:9;:16;:18::i;:::-;:22;;:44;;;;:::i;:::-;13635:51;;;;;12890:801;;;;;;:::o;7415:993::-;7502:16;7530:8;;;;;;;;;;;:27;;;2120::23;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2120:27:23;;;2110:38;;;;;;7530:48:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7530:48:123;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7530:48:123;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7530:48:123;;;;;;;;;;;;;;;;7502:77;;7590:8;7586:752;;;7621:26;7636:10;7621;;:14;;:26;;;;:::i;:::-;7608:10;:39;;;;7670:27;7687:9;7670:12;;:16;;:27;;;;:::i;:::-;7655:12;:42;;;;7722:14;:12;:14::i;:::-;:27;;;7750:10;7770:7;7780:10;7722:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7722:69:123;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7722:69:123;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7722:69:123;;;;;;;;;;;;;;;;7705:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7869:6;;;;;;;;;;;7856:25;;;7882:10;7894:9;7856:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;7856:48:123;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;7856:48:123;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;7856:48:123;;;;;;;;;;;;;;;;7848:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7586:752;;;7972:28;7989:10;7972:12;;:16;;:28;;;;:::i;:::-;7957:12;:43;;;;8021:25;8036:9;8021:10;;:14;;:25;;;;:::i;:::-;8008:10;:38;;;;8078:6;;;;;;;;;;;8071:27;;;8099:10;8119:4;8126:10;8071:66;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8071:66:123;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8071:66:123;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8071:66:123;;;;;;;;;;;;;;;;8054:132;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8207:6;;;;;;;;;;;8194:25;;;8220:10;8194:37;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8194:37:123;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8194:37:123;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8194:37:123;;;;;;;;;;;;;;;;;8248:7;:28;;;8277:10;8289:9;8248:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8248:51:123;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8248:51:123;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8248:51:123;;;;;;;;;;;;;;;;8240:91;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7586:752;8359:10;8349:54;;;8371:10;8383:9;8394:8;8349:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7415:993;;;;:::o;788:96:150:-;833:15;867:10;860:17;;788:96;:::o;9949:116:7:-;10023:4;10053:1;:7;;;10042:1;:7;;;:18;;10035:25;;9949:116;;;;:::o;2178:225:154:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;11948:133:123:-;12021:14;12012:6;;:23;;;;;;;;;;;;;;;;;;12061:14;12046:30;;;;;;;;;;;;11948:133;:::o;2159:459:153:-;2217:7;2463:1;2458;:6;2454:45;;;2487:1;2480:8;;;;2454:45;2509:9;2525:1;2521;:5;2509:17;;2553:1;2548;2544;:5;;;;;;:10;2536:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2610:1;2603:8;;;2159:459;;;;;:::o;2547:203:7:-;2599:15;;:::i;:::-;2635:13;:11;:13::i;:::-;2630:1;:18;;2622:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2720:25;;;;;;;;996;2729:1;:15;2720:25;;;2713:32;;2547:203;;;:::o;5341:209::-;5420:15;;:::i;:::-;5462:1;:7;;;5451:1;:7;;;:18;;5443:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5518:27;;;;;;;;5537:1;:7;;;5527:1;:7;;;:17;5518:27;;;5511:34;;5341:209;;;;:::o;1274:134:153:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;6206:1636:7:-;6285:15;;:::i;:::-;6323:1;6312;:7;;;:12;:28;;;;6339:1;6328;:7;;;:12;6312:28;6308:52;;;6349:11;;;;;;;;6358:1;6349:11;;;6342:18;;;;6308:52;996:25;6370:1;:7;;;:22;6366:36;;;6401:1;6394:8;;;;6366:36;996:25;6412:1;:7;;;:22;6408:36;;;6443:1;6436:8;;;;6408:36;6533:10;996:25;6546:10;6554:1;6546:7;:10::i;:::-;:16;;;:30;;;;;;6533:43;;6582:10;6595:13;6606:1;6595:10;:13::i;:::-;:19;;;6582:32;;6620:10;996:25;6633:10;6641:1;6633:7;:10::i;:::-;:16;;;:30;;;;;;6620:43;;6669:10;6682:13;6693:1;6682:10;:13::i;:::-;:19;;;6669:32;;6785:12;6805:2;6800;:7;6785:22;;6823:1;6817:2;:7;6813:63;;6847:2;6841;6834:4;:9;;;;;;:15;6826:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6813:63;6975:18;996:25;6996:4;:18;6975:39;;7032:1;7024:4;:9;7020:91;;996:25;7056:4;7043:10;:17;;;;;;:32;7035:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7020:91;7124:10;7117:17;;7141:12;7161:2;7156;:7;7141:22;;7179:1;7173:2;:7;7169:63;;7203:2;7197;7190:4;:9;;;;;;:15;7182:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7169:63;7239:12;7259:2;7254;:7;7239:22;;7277:1;7271:2;:7;7267:63;;7301:2;7295;7288:4;:9;;;;;;:15;7280:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7267:63;7347:14;:12;:14::i;:::-;7342:2;:19;;;;;;7337:24;;7377:14;:12;:14::i;:::-;7372:2;:19;;;;;;7367:24;;7397:12;7417:2;7412;:7;7397:22;;7435:1;7429:2;:7;7425:63;;7459:2;7453;7446:4;:9;;;;;;:15;7438:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7425:63;7572:22;;:::i;:::-;7597:14;;;;;;;;7606:4;7597:14;;;7572:39;;7626:27;7630:6;7638:14;;;;;;;;7647:4;7638:14;;;7626:3;:27::i;:::-;7617:36;;7695:27;7699:6;7707:14;;;;;;;;7716:4;7707:14;;;7695:3;:27::i;:::-;7686:36;;7764:27;7768:6;7776:14;;;;;;;;7785:4;7776:14;;;7764:3;:27::i;:::-;7755:36;;7831:6;7824:13;;;;;;;;;;;;6206:1636;;;;;:::o;1674:92::-;1732:7;1754:1;:7;;;1747:14;;1674:92;;;:::o;3073:130:153:-;3131:7;3157:39;3161:1;3164;3157:39;;;;;;;;;;;;;;;;;:3;:39::i;:::-;3150:46;;3073:130;;;;:::o;834:176::-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;15054:238:123:-;15108:7;15123:26;15152:12;:10;:12::i;:::-;:42;;;:44;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;15152:44:123;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;15152:44:123;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15152:44:123;;;;;;;;;;;;;;;;15123:73;;15209:78;:66;15234:40;15255:18;15234:20;:40::i;:::-;15209:15;:24;;;;;;;;;;;;;;;;;;;:66;;;;:::i;:::-;:76;:78::i;:::-;15202:85;;;15054:238;:::o;16938:415::-;16993:7;17002;17017:21;17044:23;17130:8;;;;;;;;;;;:27;;;2287:33:23;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2287:33:23;;;2277:44;;;;;;17130:55:123;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17130:55:123;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17130:55:123;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17130:55:123;;;;;;;;;;;;;;;;17108:101;;;17210:6;;;;;;;;;;;17108:109;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17108:109:123;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17108:109:123;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17108:109:123;;;;;;;;;;;;;;;;;;;;;;;;;17073:144;;;;;;;;17249:1;17231:15;:19;17223:80;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17317:13;17332:15;17309:39;;;;;;16938:415;;:::o;15910:213::-;15994:27;;:::i;:::-;16038:80;16085:32;16106:10;16085:20;:32::i;:::-;16038:37;16068:6;16038:37;;;;;;;;;;;;;;;;;:20;:18;:20::i;:::-;:29;;:37;;;;:::i;:::-;:46;;:80;;;;:::i;:::-;16031:87;;15910:213;;;:::o;5058:207:7:-;5132:15;;:::i;:::-;5155:9;5177:1;:7;;;5167:1;:7;;;:17;5155:29;;5203:1;:7;;;5198:1;:12;;5190:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5249:11;;;;;;;;5258:1;5249:11;;;5242:18;;;5058:207;;;;:::o;4227:132:23:-;4274:6;4302:8;;;;;;;;;;;:27;;;1752:29;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1752:29:23;;;1742:40;;;;;;4302:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4302:51:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4302:51:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4302:51:23;;;;;;;;;;;;;;;;4288:66;;4227:132;:::o;2163:127:7:-;2209:7;2231:54;2224:61;;2163:127;:::o;1732:187:153:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;4068:159:7:-;4127:15;;:::i;:::-;4157:47;;;;;;;;996:25;;4167:1;:7;;;:21;;;;;;4166:37;4157:47;;;4150:54;;4068:159;;;:::o;4514:172::-;4576:15;;:::i;:::-;4606:57;;;;;;;;996:25;;4626:1;:7;;;:21;;;;;;4625:37;4615:1;:7;;;:47;4606:57;;;4599:64;;4514:172;;;:::o;1905:87::-;1952:7;1974:13;1967:20;;1905:87;:::o;3718:338:153:-;3804:7;3901:1;3897;:5;3904:12;3889:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;3889:28:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3927:9;3943:1;3939;:5;;;;;;3927:17;;4048:1;4041:8;;;3718:338;;;;;:::o;4789:131:23:-;4834:8;4866;;;;;;;;;;;:27;;;2120;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2120:27:23;;;2110:38;;;;;;4866:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4866:48:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4866:48:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4866:48:23;;;;;;;;;;;;;;;;4850:65;;4789:131;:::o;2909:109:7:-;2970:7;996:25;2992:1;:7;;;:21;;;;;;2985:28;;2909:109;;;:::o;52:606:125:-;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"./Exchange.sol\";\n\ncontract ExchangeEUR is Exchange {\n  /**\n   * @notice Sets initialized == true on implementation contracts\n   * @param test Set to true to skip implementation initialization\n   */\n  constructor(bool test) public Exchange(test) {}\n\n  /**\n  * @notice Returns the storage, major, minor, and patch version of the contract.\n  * @dev This function is overloaded to maintain a distinct version from Exchange.sol.\n  * @return The storage, major, minor, and patch version of the contract.\n  */\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\n    return (1, 2, 0, 0);\n  }\n}\n",
  "sourcePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/ExchangeEUR.sol",
  "ast": {
    "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/ExchangeEUR.sol",
    "exportedSymbols": {
      "ExchangeEUR": [
        37717
      ]
    },
    "id": 37718,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 37686,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:125"
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/Exchange.sol",
        "file": "./Exchange.sol",
        "id": 37687,
        "nodeType": "ImportDirective",
        "scope": 37718,
        "sourceUnit": 37652,
        "src": "26:24:125",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37688,
              "name": "Exchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 37651,
              "src": "76:8:125",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Exchange_$37651",
                "typeString": "contract Exchange"
              }
            },
            "id": 37689,
            "nodeType": "InheritanceSpecifier",
            "src": "76:8:125"
          }
        ],
        "contractDependencies": [
          3589,
          4661,
          8572,
          9340,
          9718,
          37651,
          42659,
          43492,
          43947
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 37717,
        "linearizedBaseContracts": [
          37717,
          37651,
          3589,
          9718,
          8572,
          43947,
          43492,
          4661,
          9340,
          42659
        ],
        "name": "ExchangeEUR",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 37697,
              "nodeType": "Block",
              "src": "279:2:125",
              "statements": []
            },
            "documentation": "@notice Sets initialized == true on implementation contracts\n@param test Set to true to skip implementation initialization",
            "id": 37698,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 37694,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37691,
                    "src": "273:4:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 37695,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37693,
                  "name": "Exchange",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 37651,
                  "src": "264:8:125",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Exchange_$37651_$",
                    "typeString": "type(contract Exchange)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "264:14:125"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37691,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 37698,
                  "src": "246:9:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37690,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "246:4:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "245:11:125"
            },
            "returnParameters": {
              "id": 37696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "279:0:125"
            },
            "scope": 37717,
            "src": "234:47:125",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37715,
              "nodeType": "Block",
              "src": "626:30:125",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 37709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "640:1:125",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 37710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "643:1:125",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 37711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "646:1:125",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 37712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "649:1:125",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 37713,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "639:12:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_2_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 2,int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 37708,
                  "id": 37714,
                  "nodeType": "Return",
                  "src": "632:19:125"
                }
              ]
            },
            "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@dev This function is overloaded to maintain a distinct version from Exchange.sol.\n@return The storage, major, minor, and patch version of the contract.",
            "id": 37716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "564:2:125"
            },
            "returnParameters": {
              "id": 37708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37701,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37716,
                  "src": "590:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37703,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37716,
                  "src": "599:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37705,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37716,
                  "src": "608:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37707,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37716,
                  "src": "617:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "589:36:125"
            },
            "scope": 37717,
            "src": "539:117:125",
            "stateMutability": "pure",
            "superFunction": 36772,
            "visibility": "external"
          }
        ],
        "scope": 37718,
        "src": "52:606:125"
      }
    ],
    "src": "0:659:125"
  },
  "legacyAST": {
    "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/ExchangeEUR.sol",
    "exportedSymbols": {
      "ExchangeEUR": [
        37717
      ]
    },
    "id": 37718,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 37686,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:125"
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/Exchange.sol",
        "file": "./Exchange.sol",
        "id": 37687,
        "nodeType": "ImportDirective",
        "scope": 37718,
        "sourceUnit": 37652,
        "src": "26:24:125",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37688,
              "name": "Exchange",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 37651,
              "src": "76:8:125",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Exchange_$37651",
                "typeString": "contract Exchange"
              }
            },
            "id": 37689,
            "nodeType": "InheritanceSpecifier",
            "src": "76:8:125"
          }
        ],
        "contractDependencies": [
          3589,
          4661,
          8572,
          9340,
          9718,
          37651,
          42659,
          43492,
          43947
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 37717,
        "linearizedBaseContracts": [
          37717,
          37651,
          3589,
          9718,
          8572,
          43947,
          43492,
          4661,
          9340,
          42659
        ],
        "name": "ExchangeEUR",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 37697,
              "nodeType": "Block",
              "src": "279:2:125",
              "statements": []
            },
            "documentation": "@notice Sets initialized == true on implementation contracts\n@param test Set to true to skip implementation initialization",
            "id": 37698,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 37694,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37691,
                    "src": "273:4:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 37695,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37693,
                  "name": "Exchange",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 37651,
                  "src": "264:8:125",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Exchange_$37651_$",
                    "typeString": "type(contract Exchange)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "264:14:125"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37692,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37691,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 37698,
                  "src": "246:9:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37690,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "246:4:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "245:11:125"
            },
            "returnParameters": {
              "id": 37696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "279:0:125"
            },
            "scope": 37717,
            "src": "234:47:125",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37715,
              "nodeType": "Block",
              "src": "626:30:125",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 37709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "640:1:125",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "32",
                        "id": 37710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "643:1:125",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 37711,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "646:1:125",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 37712,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "649:1:125",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 37713,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "639:12:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_2_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 2,int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 37708,
                  "id": 37714,
                  "nodeType": "Return",
                  "src": "632:19:125"
                }
              ]
            },
            "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@dev This function is overloaded to maintain a distinct version from Exchange.sol.\n@return The storage, major, minor, and patch version of the contract.",
            "id": 37716,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "564:2:125"
            },
            "returnParameters": {
              "id": 37708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37701,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37716,
                  "src": "590:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37700,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "590:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37703,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37716,
                  "src": "599:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37702,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "599:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37705,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37716,
                  "src": "608:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "608:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37707,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37716,
                  "src": "617:7:125",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "617:7:125",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "589:36:125"
            },
            "scope": 37717,
            "src": "539:117:125",
            "stateMutability": "pure",
            "superFunction": 36772,
            "visibility": "external"
          }
        ],
        "scope": 37718,
        "src": "52:606:125"
      }
    ],
    "src": "0:659:125"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2022-05-06T03:53:13.055Z",
  "devdoc": {
    "methods": {
      "activateStable()": {
        "details": "Will revert if stable token is not registered or does not have oracle reports."
      },
      "buy(uint256,uint256,bool)": {
        "details": "The caller must first have approved `maxSellAmount` to the exchange.This function can be frozen via the Freezable interface.",
        "params": {
          "buyAmount": "The number of tokens for the exchange to send in return.",
          "buyGold": "True if the exchange is sending CELO to the caller, false otherwise.",
          "maxSellAmount": "The maximum number of tokens to send to the exchange."
        },
        "return": "The number of tokens sent to the exchange."
      },
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialization"
        }
      },
      "exchange(uint256,uint256,bool)": {
        "details": "DEPRECATED - Use `buy` or `sell`.The caller must first have approved `sellAmount` to the exchange.This function can be frozen via the Freezable interface.",
        "params": {
          "minBuyAmount": "The minimum number of tokens for the exchange to send in return.",
          "sellAmount": "The number of tokens to send to the exchange.",
          "sellGold": "True if the caller is sending CELO to the exchange, false otherwise."
        },
        "return": "The number of tokens sent by the exchange."
      },
      "getBuyAndSellBuckets(bool)": {
        "params": {
          "sellGold": "`true` if gold is the sell token."
        },
        "return": "(buyTokenBucket, sellTokenBucket)"
      },
      "getBuyTokenAmount(uint256,bool)": {
        "params": {
          "sellAmount": "The amount of sellToken the user is selling to the exchange.",
          "sellGold": "`true` if gold is the sell token."
        },
        "return": "The corresponding buyToken amount."
      },
      "getSellTokenAmount(uint256,bool)": {
        "params": {
          "buyAmount": "The amount of buyToken the user would like to purchase.",
          "sellGold": "`true` if gold is the sell token."
        },
        "return": "The corresponding sellToken amount."
      },
      "getVersionNumber()": {
        "details": "This function is overloaded to maintain a distinct version from Exchange.sol.",
        "return": "The storage, major, minor, and patch version of the contract."
      },
      "initialize(address,string,uint256,uint256,uint256,uint256)": {
        "params": {
          "_minimumReports": "The minimum number of fresh reports that need to be present in the oracle to update buckets commit to the gold bucket",
          "_reserveFraction": "Fraction to commit to the gold bucket",
          "_spread": "Spread charged on exchanges",
          "_updateFrequency": "The time period that needs to elapse between bucket updates",
          "registryAddress": "The address of the registry core smart contract.",
          "stableTokenIdentifier": "String identifier of stabletoken in registry"
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "sell(uint256,uint256,bool)": {
        "details": "The caller must first have approved `sellAmount` to the exchange.This function can be frozen via the Freezable interface.",
        "params": {
          "minBuyAmount": "The minimum number of tokens for the exchange to send in return.",
          "sellAmount": "The number of tokens to send to the exchange.",
          "sellGold": "True if the caller is sending CELO to the exchange, false otherwise."
        },
        "return": "The number of tokens sent by the exchange."
      },
      "setMinimumReports(uint256)": {
        "params": {
          "newMininumReports": "The new update minimum number of reports required"
        }
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "setReserveFraction(uint256)": {
        "params": {
          "newReserveFraction": "The new value for the reserve fraction"
        }
      },
      "setSpread(uint256)": {
        "params": {
          "newSpread": "The new value for the spread"
        }
      },
      "setStableToken(address)": {
        "params": {
          "newStableToken": "The new address for Stable Token"
        }
      },
      "setUpdateFrequency(uint256)": {
        "params": {
          "newUpdateFrequency": "The new update frequency"
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    }
  },
  "userdoc": {
    "methods": {
      "activateStable()": {
        "notice": "Ensures stable token address is set in storage and initializes buckets."
      },
      "buy(uint256,uint256,bool)": {
        "notice": "Exchanges an unspecified amount (up to a threshold) of one token for a specific amount of another."
      },
      "constructor": "Sets initialized == true on implementation contracts",
      "exchange(uint256,uint256,bool)": {
        "notice": "Exchanges a specific amount of one token for an unspecified amount (greater than a threshold) of another."
      },
      "getBuyAndSellBuckets(bool)": {
        "notice": "Returns the buy token and sell token bucket sizes, in order. The ratio of the two also represents the exchange rate between the two."
      },
      "getBuyTokenAmount(uint256,bool)": {
        "notice": "Returns the amount of buy tokens a user would get for sellAmount of the sell token."
      },
      "getSellTokenAmount(uint256,bool)": {
        "notice": "Returns the amount of sell tokens a user would need to exchange to receive buyAmount of buy tokens."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "initialize(address,string,uint256,uint256,uint256,uint256)": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "sell(uint256,uint256,bool)": {
        "notice": "Exchanges a specific amount of one token for an unspecified amount (greater than a threshold) of another."
      },
      "setMinimumReports(uint256)": {
        "notice": "Allows owner to set the minimum number of reports required"
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "setReserveFraction(uint256)": {
        "notice": "Allows owner to set the Reserve Fraction"
      },
      "setSpread(uint256)": {
        "notice": "Allows owner to set the spread"
      },
      "setStableToken(address)": {
        "notice": "Allows owner to set the Stable Token address"
      },
      "setUpdateFrequency(uint256)": {
        "notice": "Allows owner to set the update frequency"
      }
    }
  }
}