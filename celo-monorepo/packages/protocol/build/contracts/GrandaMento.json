{
  "contractName": "GrandaMento",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "test",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "approver",
          "type": "address"
        }
      ],
      "name": "ApproverSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ExchangeProposalApproved",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ExchangeProposalCancelled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "exchanger",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "stableTokenRegistryId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "sellAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "buyAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "sellCelo",
          "type": "bool"
        }
      ],
      "name": "ExchangeProposalCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "ExchangeProposalExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxApprovalExchangeRateChange",
          "type": "uint256"
        }
      ],
      "name": "MaxApprovalExchangeRateChangeSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "RegistrySet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "spread",
          "type": "uint256"
        }
      ],
      "name": "SpreadSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "stableTokenRegistryId",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "minExchangeAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "maxExchangeAmount",
          "type": "uint256"
        }
      ],
      "name": "StableTokenExchangeLimitsSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "vetoPeriodSeconds",
          "type": "uint256"
        }
      ],
      "name": "VetoPeriodSecondsSet",
      "type": "event"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "activeProposalIdsSuperset",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "approver",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "exchangeProposalCount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "exchangeProposals",
      "outputs": [
        {
          "internalType": "address payable",
          "name": "exchanger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "stableToken",
          "type": "address"
        },
        {
          "internalType": "enum GrandaMento.ExchangeProposalState",
          "name": "state",
          "type": "uint8"
        },
        {
          "internalType": "bool",
          "name": "sellCelo",
          "type": "bool"
        },
        {
          "internalType": "uint256",
          "name": "sellAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "buyAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "celoStableTokenExchangeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "vetoPeriodSeconds",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "approvalTimestamp",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "initialized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isOwner",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "maxApprovalExchangeRateChange",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "registry",
      "outputs": [
        {
          "internalType": "contract IRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "registryAddress",
          "type": "address"
        }
      ],
      "name": "setRegistry",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "spread",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "stableTokenExchangeLimits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "minExchangeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxExchangeAmount",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vetoPeriodSeconds",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getVersionNumber",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "_registry",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_approver",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_maxApprovalExchangeRateChange",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_spread",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_vetoPeriodSeconds",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "stableTokenRegistryId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "sellAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sellCelo",
          "type": "bool"
        }
      ],
      "name": "createExchangeProposal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "approveExchangeProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "cancelExchangeProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "proposalId",
          "type": "uint256"
        }
      ],
      "name": "executeExchangeProposal",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "celoStableTokenExchangeRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "sellAmount",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "sellCelo",
          "type": "bool"
        }
      ],
      "name": "getBuyAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "removeFromActiveProposalIdsSuperset",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "getActiveProposalIds",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [
        {
          "internalType": "string",
          "name": "stableTokenRegistryId",
          "type": "string"
        }
      ],
      "name": "getStableTokenExchangeLimits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "address",
          "name": "newApprover",
          "type": "address"
        }
      ],
      "name": "setApprover",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newMaxApprovalExchangeRateChange",
          "type": "uint256"
        }
      ],
      "name": "setMaxApprovalExchangeRateChange",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newSpread",
          "type": "uint256"
        }
      ],
      "name": "setSpread",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "string",
          "name": "stableTokenRegistryId",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "minExchangeAmount",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "maxExchangeAmount",
          "type": "uint256"
        }
      ],
      "name": "setStableTokenExchangeLimits",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newVetoPeriodSeconds",
          "type": "uint256"
        }
      ],
      "name": "setVetoPeriodSeconds",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.5.13+commit.5b0b510c\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"test\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"approver\",\"type\":\"address\"}],\"name\":\"ApproverSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ExchangeProposalApproved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ExchangeProposalCancelled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"exchanger\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stableTokenRegistryId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"sellCelo\",\"type\":\"bool\"}],\"name\":\"ExchangeProposalCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"ExchangeProposalExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxApprovalExchangeRateChange\",\"type\":\"uint256\"}],\"name\":\"MaxApprovalExchangeRateChangeSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"RegistrySet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"spread\",\"type\":\"uint256\"}],\"name\":\"SpreadSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"stableTokenRegistryId\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"minExchangeAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"maxExchangeAmount\",\"type\":\"uint256\"}],\"name\":\"StableTokenExchangeLimitsSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"vetoPeriodSeconds\",\"type\":\"uint256\"}],\"name\":\"VetoPeriodSecondsSet\",\"type\":\"event\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"activeProposalIdsSuperset\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"approveExchangeProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"approver\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"cancelExchangeProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"stableTokenRegistryId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellCelo\",\"type\":\"bool\"}],\"name\":\"createExchangeProposal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"exchangeProposalCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"exchangeProposals\",\"outputs\":[{\"internalType\":\"address payable\",\"name\":\"exchanger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"stableToken\",\"type\":\"address\"},{\"internalType\":\"enum GrandaMento.ExchangeProposalState\",\"name\":\"state\",\"type\":\"uint8\"},{\"internalType\":\"bool\",\"name\":\"sellCelo\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"buyAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"celoStableTokenExchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"vetoPeriodSeconds\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"approvalTimestamp\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"proposalId\",\"type\":\"uint256\"}],\"name\":\"executeExchangeProposal\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getActiveProposalIds\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"celoStableTokenExchangeRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"sellAmount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"sellCelo\",\"type\":\"bool\"}],\"name\":\"getBuyAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"stableTokenRegistryId\",\"type\":\"string\"}],\"name\":\"getStableTokenExchangeLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getVersionNumber\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"pure\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"_registry\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_approver\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_maxApprovalExchangeRateChange\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_spread\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_vetoPeriodSeconds\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"initialized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"isOwner\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"maxApprovalExchangeRateChange\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"registry\",\"outputs\":[{\"internalType\":\"contract IRegistry\",\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"removeFromActiveProposalIdsSuperset\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newApprover\",\"type\":\"address\"}],\"name\":\"setApprover\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newMaxApprovalExchangeRateChange\",\"type\":\"uint256\"}],\"name\":\"setMaxApprovalExchangeRateChange\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"registryAddress\",\"type\":\"address\"}],\"name\":\"setRegistry\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newSpread\",\"type\":\"uint256\"}],\"name\":\"setSpread\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"string\",\"name\":\"stableTokenRegistryId\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"minExchangeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxExchangeAmount\",\"type\":\"uint256\"}],\"name\":\"setStableTokenExchangeLimits\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newVetoPeriodSeconds\",\"type\":\"uint256\"}],\"name\":\"setVetoPeriodSeconds\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"spread\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"stableTokenExchangeLimits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"minExchangeAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"maxExchangeAmount\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"vetoPeriodSeconds\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"methods\":{\"approveExchangeProposal(uint256)\":{\"details\":\"Sender must be the approver. Exchange proposal must be in the Proposed state.\",\"params\":{\"proposalId\":\"The identifier of the proposal to approve.\"}},\"cancelExchangeProposal(uint256)\":{\"details\":\"Only callable by the exchanger if the proposal is in the Proposed state or the owner if the proposal is in the Approved state.\",\"params\":{\"proposalId\":\"The identifier of the proposal to cancel.\"}},\"constructor\":{\"params\":{\"test\":\"Set to true to skip implementation initialization.\"}},\"createExchangeProposal(string,uint256,bool)\":{\"details\":\"Stable token value amounts are used for the sellAmount, not unit amounts.\",\"params\":{\"sellAmount\":\"The amount of the sell token being sold.\",\"sellCelo\":\"Whether CELO is being sold.\",\"stableTokenRegistryId\":\"The string registry ID for the stable token involved in the exchange.\"},\"return\":\"The proposal identifier for the newly created exchange proposal.\"},\"executeExchangeProposal(uint256)\":{\"details\":\"Callable by anyone. Reverts if the proposal is not in the Approved state or proposal.vetoPeriodSeconds has not elapsed since approval.\",\"params\":{\"proposalId\":\"The identifier of the proposal to execute.\"}},\"getActiveProposalIds()\":{\"details\":\"Elements with a proposal ID of 0 should be filtered out by the consumer.\",\"return\":\"An array of active exchange proposals IDs.\"},\"getBuyAmount(uint256,uint256,bool)\":{\"details\":\"Stable token value amounts are used for the sellAmount, not unit amounts. Assumes both CELO and the stable token have 18 decimals.\",\"params\":{\"celoStableTokenExchangeRate\":\"The unwrapped fraction exchange rate of CELO quoted in the stable token.\",\"sellAmount\":\"The amount of the sell token being sold.\",\"sellCelo\":\"Whether CELO is being sold.\"},\"return\":\"The amount of the asset being bought.\"},\"getStableTokenExchangeLimits(string)\":{\"details\":\"Reverts if there is no explicit exchange limit for the stable token.\",\"params\":{\"stableTokenRegistryId\":\"The string registry ID for the stable token.\"},\"return\":\"(minimum exchange amount, maximum exchange amount).\"},\"getVersionNumber()\":{\"return\":\"The storage, major, minor, and patch version of the contract.\"},\"initialize(address,address,uint256,uint256,uint256)\":{\"params\":{\"_approver\":\"The approver that has the ability to approve exchange proposals.\",\"_maxApprovalExchangeRateChange\":\"The maximum allowed change in CELO price between an exchange proposal's creation and approval.\",\"_registry\":\"The address of the registry.\",\"_spread\":\"The spread charged on exchanges.\",\"_vetoPeriodSeconds\":\"The length of the veto period in seconds.\"}},\"isOwner()\":{\"details\":\"Returns true if the caller is the current owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"removeFromActiveProposalIdsSuperset(uint256)\":{\"details\":\"Anyone can call. Reverts if the exchange proposal is active.\",\"params\":{\"index\":\"The index of the proposal ID to remove from activeProposalIdsSuperset.\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setApprover(address)\":{\"details\":\"Sender must be owner. New approver is allowed to be address(0).\",\"params\":{\"newApprover\":\"The new value for the approver.\"}},\"setMaxApprovalExchangeRateChange(uint256)\":{\"details\":\"Sender must be owner.\",\"params\":{\"newMaxApprovalExchangeRateChange\":\"The new value for maxApprovalExchangeRateChange to be wrapped.\"}},\"setRegistry(address)\":{\"params\":{\"registryAddress\":\"The address of a registry contract for routing to other contracts.\"}},\"setSpread(uint256)\":{\"details\":\"Sender must be owner.\",\"params\":{\"newSpread\":\"The new value for the spread to be wrapped. Must be <= fixed 1.\"}},\"setStableTokenExchangeLimits(string,uint256,uint256)\":{\"details\":\"Sender must be owner. Setting the maxExchangeAmount to 0 effectively disables new exchange proposals for the token.\",\"params\":{\"maxExchangeAmount\":\"The new maximum exchange amount for the stable token.\",\"minExchangeAmount\":\"The new minimum exchange amount for the stable token.\",\"stableTokenRegistryId\":\"The registry ID string for the stable token to set limits for.\"}},\"setVetoPeriodSeconds(uint256)\":{\"details\":\"Sender must be owner.\",\"params\":{\"newVetoPeriodSeconds\":\"The new value for the veto period in seconds.\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"Facilitates large exchanges between CELO stable tokens.\"},\"userdoc\":{\"methods\":{\"approveExchangeProposal(uint256)\":{\"notice\":\"Approves an existing exchange proposal.\"},\"cancelExchangeProposal(uint256)\":{\"notice\":\"Cancels an exchange proposal.\"},\"constructor\":\"Sets initialized == true on implementation contracts.\",\"createExchangeProposal(string,uint256,bool)\":{\"notice\":\"Creates a new exchange proposal and deposits the tokens being sold.\"},\"executeExchangeProposal(uint256)\":{\"notice\":\"Executes an exchange proposal that's been approved and not vetoed.\"},\"getActiveProposalIds()\":{\"notice\":\"Gets the proposal identifiers of exchange proposals in the Proposed or Approved state. Returns a version of activeProposalIdsSuperset with inactive proposal IDs set as 0.\"},\"getBuyAmount(uint256,uint256,bool)\":{\"notice\":\"Using the oracle price, charges the spread and calculates the amount of the asset being bought.\"},\"getStableTokenExchangeLimits(string)\":{\"notice\":\"Gets the minimum and maximum amount of a stable token that can be involved in a single exchange.\"},\"getVersionNumber()\":{\"notice\":\"Returns the storage, major, minor, and patch version of the contract.\"},\"initialize(address,address,uint256,uint256,uint256)\":{\"notice\":\"Used in place of the constructor to allow the contract to be upgradable via proxy.\"},\"removeFromActiveProposalIdsSuperset(uint256)\":{\"notice\":\"Removes the proposal ID found at the provided index of activeProposalIdsSuperset if the exchange proposal is not active.\"},\"setApprover(address)\":{\"notice\":\"Sets the approver.\"},\"setMaxApprovalExchangeRateChange(uint256)\":{\"notice\":\"Sets the maximum allowed change in the CELO/stable token price when an exchange proposal is being approved relative to the price when the proposal was created.\"},\"setRegistry(address)\":{\"notice\":\"Updates the address pointing to a Registry contract.\"},\"setSpread(uint256)\":{\"notice\":\"Sets the spread.\"},\"setStableTokenExchangeLimits(string,uint256,uint256)\":{\"notice\":\"Sets the minimum and maximum amount of the stable token an exchange can involve.\"},\"setVetoPeriodSeconds(uint256)\":{\"notice\":\"Sets the veto period in seconds.\"}}}},\"settings\":{\"compilationTarget\":{\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/GrandaMento.sol\":\"GrandaMento\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/FixidityLib.sol\":{\"keccak256\":\"0x2f98fa3b3454621817917bae2830806858a96c9457be2c5b6e0bed5b35aaaba3\",\"urls\":[\"bzz-raw://b6bf5cf79debe02093777cc9ddef4616dedd041ccc2618c43ea91c90afd97df6\",\"dweb:/ipfs/QmXonY3FkVy2jnQvLkgDi4LcaniS5DVZ1zpRZecWKWy9Ro\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/Initializable.sol\":{\"keccak256\":\"0xad98825b5d3181f4ce2d2dbe84adeb0cd7960fd80fafb0813539d6d96ba42ab8\",\"urls\":[\"bzz-raw://f76468328c78b80eeaaaadb7b186e41da4a34134446fe11bb707106322b8e32f\",\"dweb:/ipfs/QmNyjyVjPX1GKFibDcJBJyZQ57nhusG3DhPjAGnY7iaU39\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/UsingRegistry.sol\":{\"keccak256\":\"0xfdd9e70bd58259b491ec54779715d7469ab4f804836bf5f63ff86921d0cae056\",\"urls\":[\"bzz-raw://e55f23f464e49c42b1f31782dcb88cbd2ca64e050d5f110ccdc2ffd50cd582ff\",\"dweb:/ipfs/QmfBiet9GbT9S9rn9SG9CkyXQGAMQRuk4EBmChY1m4kv47\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IAccounts.sol\":{\"keccak256\":\"0x6132a2e3105dbf00b52447db8bc307b052b2d02c0d00497bd0074ae3ce48027a\",\"urls\":[\"bzz-raw://07380d2593f1359e1440153597d16d1b4085a421f52909fafe3fa58f13088c62\",\"dweb:/ipfs/QmSjtmfFswK15Ta5NePg5voNVh9X63muCLCbQKgAZFG4rg\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/ICeloVersionedContract.sol\":{\"keccak256\":\"0x9f902faa66069500c7b5e8c9a53ca6afff99dfe6cd3915aa0f3c4fe6a9905ba5\",\"urls\":[\"bzz-raw://880c77a981296abbf6fe9a7e3e0d5d441b19de70d310b10f4a469ce344e8e96c\",\"dweb:/ipfs/QmUAY1xYLXUQXwgBoRFaXFv5z9a6sMYT9v7WdEAAeSGCwW\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IFeeCurrencyWhitelist.sol\":{\"keccak256\":\"0xd4711baf3e38a0abeb3ef48eaab21aeb917f5e0a185cf463fddeb4bf20277b68\",\"urls\":[\"bzz-raw://8f350863943ab54dcf4d5ea525c16748f59263bf36c1d85251c1164d0e592032\",\"dweb:/ipfs/QmXAG6fvVQKM86rVsk6R3ndEoHtS9fcAAVxBApJ5j3LWeK\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IFreezer.sol\":{\"keccak256\":\"0x12508a9d528d1b63dc06644e9d97e864acc94f8a763cf8555e90bcdf1b2f8b21\",\"urls\":[\"bzz-raw://32df109167a13e684c9b296a0e13dda1899e418788eb59bf59aedd7a3ce65466\",\"dweb:/ipfs/QmR6BJCRFMSQpBpnSH2vzLE959FhXnmreDocWWc7fUYnnu\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/IRegistry.sol\":{\"keccak256\":\"0x78ba82722d28e815c117f33d4659404f0707dab1c9b51f1bce5d4c15d6c94537\",\"urls\":[\"bzz-raw://0cea84b948896aece11c64b97c22b0f08f86cb45e166a004db4a88a98952cbfa\",\"dweb:/ipfs/QmR4uSGcs4nmph6duroscchstSwMzWSV8CDvD2SSnWuHbs\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/libraries/ReentrancyGuard.sol\":{\"keccak256\":\"0xa2584554532d7004ca3d2d168cd9dfb7694605f1a32431af4d1b7d834fa6b08d\",\"urls\":[\"bzz-raw://fb012e7a76145a86b8746b0b10768845d17a5c5ab9cbdcd863fde42028b5632c\",\"dweb:/ipfs/QmdJi5va3broTVwJJ5uCBSg4T2rwTaAvzSBtnZzETvverK\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/IElection.sol\":{\"keccak256\":\"0xebcd0d7dbbb2df503967ad63c9ddd437cef89a94ba2cc2f9ce274f41a4c901ee\",\"urls\":[\"bzz-raw://84dcf3a9952f1ce9a9110abb1783dfead290fd17c28216c5acb22de9d090921d\",\"dweb:/ipfs/QmeNoLz8WcHX9GLcBfQChXFHsFDRaVRRXnPXXvB2qVTaSZ\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/IGovernance.sol\":{\"keccak256\":\"0x227bf6a6b56411c368c9752761e2202ad71f2199deb2b114b125712b63372b7e\",\"urls\":[\"bzz-raw://cabeae6e6c47364291f12cf69658dcf5bdd8ac7eebda53d48a2b03aab96386a3\",\"dweb:/ipfs/QmUtPSC4hVz79XVVjFwQ6CozMd6oAR1m6yrPFkHD5sCdB1\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/ILockedGold.sol\":{\"keccak256\":\"0x577d01d8a1fbf47980fb5ffd36de2084ec255889b15671adfecd3a285df4f253\",\"urls\":[\"bzz-raw://6b955b6829748cd136fa92c3a434f5419e4eb024d535a854900ad48bd4151b67\",\"dweb:/ipfs/QmXM5uL5dsKecYyedAzsrZXAp81NtWQErbbVEFccJ6ZqiY\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/governance/interfaces/IValidators.sol\":{\"keccak256\":\"0x524a9e48689537421f97296ffd57fa0f2887117f9af9e71dd5ed17e66ba92d2a\",\"urls\":[\"bzz-raw://cf5d0c2f6ee9b2c8e270162455177e9c3bac79ac07d4f37c86f7f2ee5978a756\",\"dweb:/ipfs/QmZTKmytn1Wi3QfU3bHuSaSeYQzRrFKehyngrg37rHD3vV\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/interfaces/IAttestations.sol\":{\"keccak256\":\"0x979aaac636fe6a64f97034bf0bf062b5f0efd6e6f9f3fe84e81180f82eeb7a3e\",\"urls\":[\"bzz-raw://c1255d08278188247ef81fb09edd2d1d4a019fb0fe80fd3d9850415c5eb5caaf\",\"dweb:/ipfs/QmcJvqSM35nAR8p8LwVczhnaY6VwTRThNjfCzkzeiAkz45\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/identity/interfaces/IRandom.sol\":{\"keccak256\":\"0xd65fd529d133cbde94628b39b0d2f0f4b6d0af2e8f97c0e6b4b2cd476479ed1d\",\"urls\":[\"bzz-raw://f2c6fe351990bfdeb55484bd3622d44c8f58579a7212d5cce71a82df846497f5\",\"dweb:/ipfs/QmRDDTXUqbA6dHfJe4ZS1442JDAfwoHq2eH9LHnQyzsh44\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/GrandaMento.sol\":{\"keccak256\":\"0xbf21f53c35cd83bc289a5071749f95a09ff922495c51be018389064daf50ac19\",\"urls\":[\"bzz-raw://675503effd4c2702ca35bfa5b0156a20eb4202a3b43ae9ccc0844d68f7f93183\",\"dweb:/ipfs/QmZ1YkmhNF7hLNzW6KJ1N9QSpxwHQa4ghbv9WKjaVcwRXF\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/IExchange.sol\":{\"keccak256\":\"0xf2934d473f1b42566dbd90b4777725c966524bab78ce734b51f2510c6ef83ebb\",\"urls\":[\"bzz-raw://9fa1c7d72149b281ce9f54e636e37753fffcfa45833753ca700b8861a2a25a22\",\"dweb:/ipfs/QmUAgNosF21EroMTGgEjy6qJZU7njH3YMQwqj7j515HDVa\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/IReserve.sol\":{\"keccak256\":\"0x8da4d702b47a7e60981ca416f2d0f24a3c1dea9ab44f04b695c0fde02c84a38e\",\"urls\":[\"bzz-raw://198fb3cd945e374926e3d6bcb2469b7f5c635e78b40417a4b3a1eacabeca234b\",\"dweb:/ipfs/Qma8RRSqksFCzL5gWTXmGtJvC4Mw1bgquvN33nKhrRwUrD\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/ISortedOracles.sol\":{\"keccak256\":\"0x8f80e430800fff2f04f3981c4b73a2a374b2c2150543a2de51fcf7ba4fb08789\",\"urls\":[\"bzz-raw://f1a472385d5fa1b1cc4ab6ff948cd11f86c55328841d89f39f02b64449d3ac1a\",\"dweb:/ipfs/QmSYfwR8RJ2nyzt9VJtLKqaUHwAPfz579vhcQP7LRLaqTe\"]},\"/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/IStableToken.sol\":{\"keccak256\":\"0x091e577acecdf050fe4c41133b11fe330d07050c5fe78b65bfce32ccc29e51c6\",\"urls\":[\"bzz-raw://94f7d7578274be8212b8c9a3f0759d884969b05a7f0c64c7c9352102f4e51ab4\",\"dweb:/ipfs/Qmd3bERcFLrrvpURuzKUg6YCSFisNQ36YpRLWkxEcS1Tkj\"]},\"openzeppelin-solidity/contracts/GSN/Context.sol\":{\"keccak256\":\"0x90a3995645af7562d84b9d69363ffa5ae7217714ab61e951bf7bc450f40e4061\",\"urls\":[\"bzz-raw://216ef9d6b614db4eb46970b4e84903f2534a45572dd30a79f0041f1a5830f436\",\"dweb:/ipfs/QmNPrJ4MWKUAWzKXpUqeyKRUfosaoANZAqXgvepdrCwZAG\"]},\"openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x640b6dee7a4b830bdfd52b5031a07fc2b12209f5b2e29e5d364a7d37f69d8076\",\"urls\":[\"bzz-raw://31113152e1ddb78fe7a4197f247591ca894e93f916867beb708d8e747b6cc74f\",\"dweb:/ipfs/QmbZaJyXdpsYGykVhHH9qpVGQg9DGCxE2QufbCUy3daTgq\"]},\"openzeppelin-solidity/contracts/ownership/Ownable.sol\":{\"keccak256\":\"0x6fb9d7889769d7cc161225f9ef7a90e468ba9788b253816f8d8b6894d3472c24\",\"urls\":[\"bzz-raw://cf4c00fc3c37cc5acf0c82ec6fd97bab67d72c2567fdc0ebf023d9c09b30a08e\",\"dweb:/ipfs/Qmb7TChG6DsEDX7LooJ4vmxot19f7VXX8S1zUGPeJTWbwZ\"]},\"openzeppelin-solidity/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xe5bb0f57cff3e299f360052ba50f1ea0fff046df2be070b6943e0e3c3fdad8a9\",\"urls\":[\"bzz-raw://59fd025151435da35faa8093a5c7a17de02de9d08ad27275c5cdf05050820d91\",\"dweb:/ipfs/QmQMvwEcPhoRXzbXyrdoeRtvLoifUW9Qh7Luho7bmUPRkc\"]}},\"version\":1}",
  "bytecode": "0x60806040523480156200001157600080fd5b5060405162004c8438038062004c84833981810160405260208110156200003757600080fd5b81019080805190602001909291905050508060006200005b6200012b60201b60201c565b9050806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a350806200011b576001600060146101000a81548160ff0219169083151502179055505b5060016002819055505062000133565b600033905090565b614b4180620001436000396000f3fe608060405234801561001057600080fd5b50600436106101da5760003560e01c80637b10399911610104578063be4c0d2c116100a2578063e33ddfc011610071578063e33ddfc0146109e2578063e7be36c814610a6f578063e7f6d98014610a9d578063f2fde38b14610abb576101da565b8063be4c0d2c1461082e578063c89f6e1714610904578063cb60cca014610932578063d13f90b414610960576101da565b8063a91ee0dc116100de578063a91ee0dc14610770578063aa853da4146107b4578063b66a261c146107d2578063b7430ab014610800576101da565b80637b103999146106ba5780638da5cb5b146107045780638f32d59b1461074e576101da565b80633ff9d6371161017c5780635c25c76c1161014b5780635c25c76c146105905780635eb8fc76146105ae578063715018a61461065157806371a1aea71461065b576101da565b80633ff9d637146104a557806344ca493a146104c357806349dc646a1461050557806354255be01461055d576101da565b8063158ef93e116101b8578063158ef93e1461032d5780631f4328b51461034f5780633156560e1461037d5780633b5b4f2c146103c1576101da565b8063049ecbd9146101df578063139fdcff1461020d578063141a8dd8146102e3575b600080fd5b61020b600480360360208110156101f557600080fd5b8101908080359060200190929190505050610aff565b005b6102c66004803603602081101561022357600080fd5b810190808035906020019064010000000081111561024057600080fd5b82018360208201111561025257600080fd5b8035906020019184600183028401116401000000008311171561027457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610c16565b604051808381526020018281526020019250505060405180910390f35b6102eb610d1c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610335610d42565b604051808215151515815260200191505060405180910390f35b61037b6004803603602081101561036557600080fd5b8101908080359060200190929190505050610d55565b005b6103bf6004803603602081101561039357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d4565b005b6103ed600480360360208110156103d757600080fd5b81019080803590602001909291905050506111f5565b604051808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188600481111561046157fe5b60ff16815260200187151515158152602001868152602001858152602001848152602001838152602001828152602001995050505050505050505060405180910390f35b6104ad61129d565b6040518082815260200191505060405180910390f35b6104ef600480360360208110156104d957600080fd5b81019080803590602001909291905050506112a9565b6040518082815260200191505060405180910390f35b6105476004803603606081101561051b57600080fd5b8101908080359060200190929190803590602001909291908035151590602001909291905050506112ca565b6040518082815260200191505060405180910390f35b61056561136a565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b610598611390565b6040518082815260200191505060405180910390f35b61063b600480360360608110156105c457600080fd5b81019080803590602001906401000000008111156105e157600080fd5b8201836020820111156105f357600080fd5b8035906020019184600183028401116401000000008311171561061557600080fd5b90919293919293908035906020019092919080351515906020019092919050505061139c565b6040518082815260200191505060405180910390f35b610659611bfe565b005b610663611d37565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156106a657808201518184015260208101905061068b565b505050509050019250505060405180910390f35b6106c2611e64565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61070c611e8a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610756611eb3565b604051808215151515815260200191505060405180910390f35b6107b26004803603602081101561078657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f11565b005b6107bc6120b5565b6040518082815260200191505060405180910390f35b6107fe600480360360208110156107e857600080fd5b81019080803590602001909291905050506120bb565b005b61082c6004803603602081101561081657600080fd5b810190808035906020019092919050505061220c565b005b6108e76004803603602081101561084457600080fd5b810190808035906020019064010000000081111561086157600080fd5b82018360208201111561087357600080fd5b8035906020019184600183028401116401000000008311171561089557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506122d8565b604051808381526020018281526020019250505060405180910390f35b6109306004803603602081101561091a57600080fd5b8101908080359060200190929190505050612312565b005b61095e6004803603602081101561094857600080fd5b810190808035906020019092919050505061288a565b005b6109e0600480360360a081101561097657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050613101565b005b610a6d600480360360608110156109f857600080fd5b8101908080359060200190640100000000811115610a1557600080fd5b820183602082011115610a2757600080fd5b80359060200191846001830284011164010000000083111715610a4957600080fd5b909192939192939080359060200190929190803590602001909291905050506131dc565b005b610a9b60048036036020811015610a8557600080fd5b810190808035906020019092919050505061337b565b005b610aa561357b565b6040518082815260200191505060405180910390f35b610afd60048036036020811015610ad157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613581565b005b610b07611eb3565b610b79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6224ea00811115610bd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614aec6021913960400191505060405180910390fd5b806006819055507f444fcf883d2258a54ed4f56fa23112232c0eef64dc4af5cab8c3dd7546a028b9816040518082815260200191505060405180910390a150565b600080610c21614844565b6007846040518082805190602001908083835b60208310610c575780518252602082019150602081019050602083039250610c34565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206040518060400160405290816000820154815260200160018201548152505090506000816020015111610d08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806149b96030913960400191505060405180910390fd5b806000015181602001519250925050915091565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060149054906101000a900460ff1681565b600160026000828254019250508190555060006002549050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e30576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f53656e646572206d75737420626520617070726f76657200000000000000000081525060200191505060405180910390fd5b600060086000848152602001908152602001600020905060016004811115610e5457fe5b8160010160149054906101000a900460ff166004811115610e7157fe5b14610ec7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061494f6022913960400191505060405180910390fd5b610ecf61485e565b610efc8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613607565b9050610f0661485e565b610f138360040154613767565b9050610f1d61485e565b610f2561485e565b610f38838561378590919063ffffffff16565b610f43578284610f46565b83835b91509150610f5261485e565b610f7784610f69858561379a90919063ffffffff16565b61384190919063ffffffff16565b9050610fa260046040518060200160405290816000820154815250508261398a90919063ffffffff16565b610ff7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180614a45603b913960400191505060405180910390fd5b42866006018190555060028660010160146101000a81548160ff0219169083600481111561102157fe5b0217905550877f8b2b870c73325a932fadfc3f0d07358f8086320c6e6c27d36b5ea14d7c3d541360405160405180910390a250505050505060025481146110d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b6110dc611eb3565b61114e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa03757d836cb0b61c0fbba2147f5d51d6071ff3dd5bf6963beb55563d64878e181604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60086020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060010160159054906101000a900460ff16908060020154908060030154908060040154908060050154908060060154905089565b60048060000154905081565b600981815481106112b657fe5b906000526020600020016000915090505481565b60006112d461485e565b6112dd85613767565b9050826112f0576112ed816139a0565b90505b6112f861485e565b61134261130486613a52565b6113346005604051806020016040529081600082015481525050611326613adc565b61379a90919063ffffffff16565b613b0290919063ffffffff16565b905061135f61135a8284613b0290919063ffffffff16565b613f61565b925050509392505050565b600080600080600180600080839350829250819150809050935093509350935090919293565b60058060000154905081565b60006001600260008282540192505081905550600060025490506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638932cbf488886040518363ffffffff1660e01b815260040180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060206040518083038186803b15801561145757600080fd5b505afa15801561146b573d6000803e3d6000fd5b505050506040513d602081101561148157600080fd5b8101908080519060200190929190505050905060006114a76114a283613607565b613f82565b905060006114b68288886112ca565b90506000806115088b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610c16565b91509150600088611519578961151b565b835b905081811115801561152d5750828110155b611582576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614a17602e913960400191505060405180910390fd5b505050600086611592578361159b565b61159a613f90565b5b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd33308b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561165857600080fd5b505af115801561166c573d6000803e3d6000fd5b505050506040513d602081101561168257600080fd5b8101908080519060200190929190505050611705576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5472616e7366657220696e206f662073656c6c20746f6b656e206661696c656481525060200191505060405180910390fd5b61171b6001600a5461408b90919063ffffffff16565b600a819055506000876117b9578473ffffffffffffffffffffffffffffffffffffffff166312c6c0998a6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561177957600080fd5b505afa15801561178d573d6000803e3d6000fd5b505050506040513d60208110156117a357600080fd5b81019080805190602001909291905050506117bb565b885b90506040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020016001600481111561180e57fe5b815260200189151581526020018281526020018481526020018581526020016006548152602001600081525060086000600a54815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083600481111561190157fe5b021790555060608201518160010160156101000a81548160ff0219169083151502179055506080820151816002015560a0820151816003015560c0820151816004015560e082015181600501556101008201518160060155905050611aab60086000600a548152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166004811115611a4a57fe5b6004811115611a5557fe5b81526020016001820160159054906101000a900460ff1615151515815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481525050614113565b50506009600a5490806001815401808255809150509060018203906000526020600020016000909192909190915055503373ffffffffffffffffffffffffffffffffffffffff16600a547f988f3fd60d91f43c99361ce5de82a51999ffd3deda06baac9235df289bb7c6498d8d8d888e6040518080602001858152602001848152602001831515151581526020018281038252878782818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a3600a54965050505050506002548114611bf5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b50949350505050565b611c06611eb3565b611c78576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b606080600980549050604051908082528060200260200182016040528015611d6e5781602001602082028038833980820191505090505b50905060008090505b600980549050811015611e5c57600060098281548110611d9357fe5b9060005260206000200154905060016004811115611dad57fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff166004811115611ddc57fe5b1480611e21575060026004811115611df057fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff166004811115611e1f57fe5b145b15611e405780838381518110611e3357fe5b6020026020010181815250505b50611e5560018261408b90919063ffffffff16565b9050611d77565b508091505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ef56142af565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b611f19611eb3565b611f8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561202e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b600a5481565b6120c3611eb3565b612135576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b612145612140613adc565b613f82565b8111156121ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f537072656164206d75737420626520736d616c6c6572207468616e203100000081525060200191505060405180910390fd5b6121c381613767565b6005600082015181600001559050507f8946f328efcc515b5cc3282f6cd95e87a6c0d3508421af0b52d4d3620b3e2db3816040518082815260200191505060405180910390a150565b612214611eb3565b612286576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61228f81613767565b6004600082015181600001559050507f64efcc8d6bb33e1eb5c31f8bec9ac8a42321a1fa36c6d831c759a6da5c2797f7816040518082815260200191505060405180910390a150565b6007818051602081018201805184825260208301602085012081835280955050505050506000915090508060000154908060010154905082565b60016002600082825401925050819055506000600254905060006008600084815260200190815260200160002090506001600481111561234e57fe5b8160010160149054906101000a900460ff16600481111561236b57fe5b141561243b573373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612436576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f53656e646572206d7573742062652065786368616e676572000000000000000081525060200191505060405180910390fd5b61253c565b6002600481111561244857fe5b8160010160149054906101000a900460ff16600481111561246557fe5b14156124ea57612473611eb3565b6124e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f53656e646572206d757374206265206f776e657200000000000000000000000081525060200191505060405180910390fd5b61253b565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806149e9602e913960400191505060405180910390fd5b5b60048160010160146101000a81548160ff0219169083600481111561255d57fe5b02179055506000806126a083604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff16600481111561263f57fe5b600481111561264a57fe5b81526020016001820160159054906101000a900460ff1615151515815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481525050614113565b915091508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561274f57600080fd5b505af1158015612763573d6000803e3d6000fd5b505050506040513d602081101561277957600080fd5b81019080805190602001909291905050506127df576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180614ac96023913960400191505060405180910390fd5b847f80079243b2a36fa4656ef4ac30e5a3ebe1d048ca90b5b91cf3d597bf526dcaa760405160405180910390a25050506002548114612886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b6001600260008282540192505081905550600060025490506000600860008481526020019081526020016000209050600260048111156128c657fe5b8160010160149054906101000a900460ff1660048111156128e357fe5b14612939576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806149716022913960400191505060405180910390fd5b426129558260050154836006015461408b90919063ffffffff16565b11156129c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5665746f20706572696f64206e6f7420656c617073656400000000000000000081525060200191505060405180910390fd5b60038160010160146101000a81548160ff021916908360048111156129ea57fe5b0217905550600080612b2d83604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166004811115612acc57fe5b6004811115612ad757fe5b81526020016001820160159054906101000a900460ff1615151515815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481525050614113565b915091508260010160159054906101000a900460ff1615612deb578173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb612b6c6142b7565b836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612bd657600080fd5b505af1158015612bea573d6000803e3d6000fd5b505050506040513d6020811015612c0057600080fd5b8101908080519060200190929190505050612c66576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806149936026913960400191505060405180910390fd5b8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f198460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600301546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612d3957600080fd5b505af1158015612d4d573d6000803e3d6000fd5b505050506040513d6020811015612d6357600080fd5b8101908080519060200190929190505050612de6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f537461626c6520746f6b656e206d696e74206661696c6564000000000000000081525060200191505060405180910390fd5b613056565b8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015612e6257600080fd5b505af1158015612e76573d6000803e3d6000fd5b505050506040513d6020811015612e8c57600080fd5b8101908080519060200190929190505050612f0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f537461626c6520746f6b656e206275726e206661696c6564000000000000000081525060200191505060405180910390fd5b612f176142b7565b73ffffffffffffffffffffffffffffffffffffffff166303a0fea38460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600301546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612fc557600080fd5b505af1158015612fd9573d6000803e3d6000fd5b505050506040513d6020811015612fef57600080fd5b8101908080519060200190929190505050613055576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180614a806028913960400191505060405180910390fd5b5b847f0b4c107dd8ed767c40dcc74867774b42e6987abba9874b97b9740d3bcb5c9ccb60405160405180910390a250505060025481146130fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b600060149054906101000a900460ff1615613184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055506131a8336143b2565b6131b185611f11565b6131ba846110d4565b6131c38361220c565b6131cc826120bb565b6131d581610aff565b5050505050565b6131e4611eb3565b613256576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b808211156132af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806148e96030913960400191505060405180910390fd5b60405180604001604052808381526020018281525060078585604051808383808284378083019250505092505050908152602001604051809103902060008201518160000155602082015181600101559050507f64b64d5a316c373e148f92eebf62bd8ce51e1c34b056eb81c7a4d1f0e47636668484848460405180806020018481526020018381526020018281038252868682818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a150505050565b60098054905081106133f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b60006009828154811061340457fe5b906000526020600020015490506001600481111561341e57fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff16600481111561344d57fe5b1415801561349557506002600481111561346357fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff16600481111561349257fe5b14155b613507576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f45786368616e67652070726f706f73616c206e6f7420696e616374697665000081525060200191505060405180910390fd5b600061352260016009805490506144f690919063ffffffff16565b905080831015613560576009818154811061353957fe5b90600052602060002001546009848154811061355157fe5b90600052602060002001819055505b60098054809190600190036135759190614871565b50505050565b60065481565b613589611eb3565b6135fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b613604816143b2565b50565b61360f61485e565b60008061361a614540565b73ffffffffffffffffffffffffffffffffffffffff1663ef90e1b0856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801561369557600080fd5b505afa1580156136a9573d6000803e3d6000fd5b505050506040513d60408110156136bf57600080fd5b81019080805190602001909291908051906020019092919050505080925081935050506000811161373b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614aa86021913960400191505060405180910390fd5b61375e61374782613767565b61375084613767565b61384190919063ffffffff16565b92505050919050565b61376f61485e565b6040518060200160405280838152509050919050565b60008160000151836000015110905092915050565b6137a261485e565b816000015183600001511015613820576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f737562737472616374696f6e20756e646572666c6f772064657465637465640081525060200191505060405180910390fd5b60405180602001604052808360000151856000015103815250905092915050565b61384961485e565b6000826000015114156138c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f63616e277420646976696465206279203000000000000000000000000000000081525060200191505060405180910390fd5b600069d3c21bcecceda10000008460000151029050836000015169d3c21bcecceda100000082816138f157fe5b0414613965576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f766572666c6f7720617420646976696465000000000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808460000151838161397d57fe5b0481525091505092915050565b6000816000015183600001511115905092915050565b6139a861485e565b600082600001511415613a23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f63616e27742063616c6c207265636970726f63616c283029000000000000000081525060200191505060405180910390fd5b6040518060200160405280836000015169d3c21bcecceda1000000800281613a4757fe5b048152509050919050565b613a5a61485e565b613a6261463b565b821115613aba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806149196036913960400191505060405180910390fd5b604051806020016040528069d3c21bcecceda100000084028152509050919050565b613ae461485e565b604051806020016040528069d3c21bcecceda1000000815250905090565b613b0a61485e565b600083600001511480613b21575060008260000151145b15613b3d57604051806020016040528060008152509050613f5b565b69d3c21bcecceda100000082600001511415613b5b57829050613f5b565b69d3c21bcecceda100000083600001511415613b7957819050613f5b565b600069d3c21bcecceda1000000613b8f8561465a565b6000015181613b9a57fe5b0490506000613ba885614691565b600001519050600069d3c21bcecceda1000000613bc48661465a565b6000015181613bcf57fe5b0490506000613bdd86614691565b6000015190506000828502905060008514613c715782858281613bfc57fe5b0414613c70576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b600069d3c21bcecceda10000008202905060008214613d135769d3c21bcecceda1000000828281613c9e57fe5b0414613d12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f6f766572666c6f772078317931202a206669786564312064657465637465640081525060200191505060405180910390fd5b5b8091506000848602905060008614613da45784868281613d2f57fe5b0414613da3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b6000848802905060008814613e325784888281613dbd57fe5b0414613e31576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b613e3a6146ce565b8781613e4257fe5b049650613e4d6146ce565b8581613e5557fe5b0494506000858802905060008814613ee65785888281613e7157fe5b0414613ee5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b613eee61485e565b6040518060200160405280878152509050613f17816040518060200160405280878152506146db565b9050613f31816040518060200160405280868152506146db565b9050613f4b816040518060200160405280858152506146db565b9050809a50505050505050505050505b92915050565b600069d3c21bcecceda1000000826000015181613f7a57fe5b049050919050565b600081600001519050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f476f6c64546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561404b57600080fd5b505afa15801561405f573d6000803e3d6000fd5b505050506040513d602081101561407557600080fd5b8101908080519060200190929190505050905090565b600080828401905083811015614109576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000806000808460600151156141395761412b613f90565b9150846080015190506141d9565b6000856020015190508092508073ffffffffffffffffffffffffffffffffffffffff1663af31f58787608001516040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561419a57600080fd5b505afa1580156141ae573d6000803e3d6000fd5b505050506040513d60208110156141c457600080fd5b81019080805190602001909291905050509150505b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561425857600080fd5b505afa15801561426c573d6000803e3d6000fd5b505050506040513d602081101561428257600080fd5b81019080805190602001909291905050509050818110156142a1578091505b828294509450505050915091565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f52657365727665000000000000000000000000000000000000000000000000008152506007019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561437257600080fd5b505afa158015614386573d6000803e3d6000fd5b505050506040513d602081101561439c57600080fd5b8101908080519060200190929190505050905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415614438576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806148c36026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061453883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614784565b905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f536f727465644f7261636c657300000000000000000000000000000000000000815250600d019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156145fb57600080fd5b505afa15801561460f573d6000803e3d6000fd5b505050506040513d602081101561462557600080fd5b8101908080519060200190929190505050905090565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b61466261485e565b604051806020016040528069d3c21bcecceda10000008085600001518161468557fe5b04028152509050919050565b61469961485e565b604051806020016040528069d3c21bcecceda1000000808560000151816146bc57fe5b04028460000151038152509050919050565b600064e8d4a51000905090565b6146e361485e565b600082600001518460000151019050836000015181101561476c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f616464206f766572666c6f77206465746563746564000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808281525091505092915050565b6000838311158290614831576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156147f65780820151818401526020810190506147db565b50505050905090810190601f1680156148235780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b604051806040016040528060008152602001600081525090565b6040518060200160405280600081525090565b81548183558181111561489857818360005260206000209182019101614897919061489d565b5b505050565b6148bf91905b808211156148bb5760008160009055506001016148a3565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734d696e2065786368616e676520616d6f756e74206d757374206e6f742062652067726561746572207468616e206d617863616e277420637265617465206669786964697479206e756d626572206c6172676572207468616e206d61784e65774669786564282950726f706f73616c206d75737420626520696e2050726f706f73656420737461746550726f706f73616c206d75737420626520696e20417070726f7665642073746174655472616e73666572206f7574206f662043454c4f20746f2052657365727665206661696c65644d617820737461626c6520746f6b656e2065786368616e676520616d6f756e74206d75737420626520646566696e656450726f706f73616c206d75737420626520696e2050726f706f736564206f7220417070726f766564207374617465537461626c6520746f6b656e2065786368616e676520616d6f756e74206e6f742077697468696e206c696d69747343454c4f2065786368616e6765207261746520697320746f6f20646966666572656e742066726f6d207468652070726f706f7365642070726963655472616e73666572206f7574206f662043454c4f2066726f6d2052657365727665206661696c65644e6f206f7261636c652072617465732070726573656e7420666f7220746f6b656e5472616e73666572206f7574206f6620726566756e6420746f6b656e206661696c65645665746f20706572696f642063616e6e6f74206578636565642034207765656b73a265627a7a72315820d32d4f3ece6073ebb846b13d3ab8f28cf641898b22ed587a76c9b5ec5ee55bd564736f6c634300050d0032",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106101da5760003560e01c80637b10399911610104578063be4c0d2c116100a2578063e33ddfc011610071578063e33ddfc0146109e2578063e7be36c814610a6f578063e7f6d98014610a9d578063f2fde38b14610abb576101da565b8063be4c0d2c1461082e578063c89f6e1714610904578063cb60cca014610932578063d13f90b414610960576101da565b8063a91ee0dc116100de578063a91ee0dc14610770578063aa853da4146107b4578063b66a261c146107d2578063b7430ab014610800576101da565b80637b103999146106ba5780638da5cb5b146107045780638f32d59b1461074e576101da565b80633ff9d6371161017c5780635c25c76c1161014b5780635c25c76c146105905780635eb8fc76146105ae578063715018a61461065157806371a1aea71461065b576101da565b80633ff9d637146104a557806344ca493a146104c357806349dc646a1461050557806354255be01461055d576101da565b8063158ef93e116101b8578063158ef93e1461032d5780631f4328b51461034f5780633156560e1461037d5780633b5b4f2c146103c1576101da565b8063049ecbd9146101df578063139fdcff1461020d578063141a8dd8146102e3575b600080fd5b61020b600480360360208110156101f557600080fd5b8101908080359060200190929190505050610aff565b005b6102c66004803603602081101561022357600080fd5b810190808035906020019064010000000081111561024057600080fd5b82018360208201111561025257600080fd5b8035906020019184600183028401116401000000008311171561027457600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050509192919290505050610c16565b604051808381526020018281526020019250505060405180910390f35b6102eb610d1c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610335610d42565b604051808215151515815260200191505060405180910390f35b61037b6004803603602081101561036557600080fd5b8101908080359060200190929190505050610d55565b005b6103bf6004803603602081101561039357600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff1690602001909291905050506110d4565b005b6103ed600480360360208110156103d757600080fd5b81019080803590602001909291905050506111f5565b604051808a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200188600481111561046157fe5b60ff16815260200187151515158152602001868152602001858152602001848152602001838152602001828152602001995050505050505050505060405180910390f35b6104ad61129d565b6040518082815260200191505060405180910390f35b6104ef600480360360208110156104d957600080fd5b81019080803590602001909291905050506112a9565b6040518082815260200191505060405180910390f35b6105476004803603606081101561051b57600080fd5b8101908080359060200190929190803590602001909291908035151590602001909291905050506112ca565b6040518082815260200191505060405180910390f35b61056561136a565b6040518085815260200184815260200183815260200182815260200194505050505060405180910390f35b610598611390565b6040518082815260200191505060405180910390f35b61063b600480360360608110156105c457600080fd5b81019080803590602001906401000000008111156105e157600080fd5b8201836020820111156105f357600080fd5b8035906020019184600183028401116401000000008311171561061557600080fd5b90919293919293908035906020019092919080351515906020019092919050505061139c565b6040518082815260200191505060405180910390f35b610659611bfe565b005b610663611d37565b6040518080602001828103825283818151815260200191508051906020019060200280838360005b838110156106a657808201518184015260208101905061068b565b505050509050019250505060405180910390f35b6106c2611e64565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61070c611e8a565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b610756611eb3565b604051808215151515815260200191505060405180910390f35b6107b26004803603602081101561078657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050611f11565b005b6107bc6120b5565b6040518082815260200191505060405180910390f35b6107fe600480360360208110156107e857600080fd5b81019080803590602001909291905050506120bb565b005b61082c6004803603602081101561081657600080fd5b810190808035906020019092919050505061220c565b005b6108e76004803603602081101561084457600080fd5b810190808035906020019064010000000081111561086157600080fd5b82018360208201111561087357600080fd5b8035906020019184600183028401116401000000008311171561089557600080fd5b91908080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f8201169050808301925050505050505091929192905050506122d8565b604051808381526020018281526020019250505060405180910390f35b6109306004803603602081101561091a57600080fd5b8101908080359060200190929190505050612312565b005b61095e6004803603602081101561094857600080fd5b810190808035906020019092919050505061288a565b005b6109e0600480360360a081101561097657600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803573ffffffffffffffffffffffffffffffffffffffff169060200190929190803590602001909291908035906020019092919080359060200190929190505050613101565b005b610a6d600480360360608110156109f857600080fd5b8101908080359060200190640100000000811115610a1557600080fd5b820183602082011115610a2757600080fd5b80359060200191846001830284011164010000000083111715610a4957600080fd5b909192939192939080359060200190929190803590602001909291905050506131dc565b005b610a9b60048036036020811015610a8557600080fd5b810190808035906020019092919050505061337b565b005b610aa561357b565b6040518082815260200191505060405180910390f35b610afd60048036036020811015610ad157600080fd5b81019080803573ffffffffffffffffffffffffffffffffffffffff169060200190929190505050613581565b005b610b07611eb3565b610b79576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b6224ea00811115610bd5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614aec6021913960400191505060405180910390fd5b806006819055507f444fcf883d2258a54ed4f56fa23112232c0eef64dc4af5cab8c3dd7546a028b9816040518082815260200191505060405180910390a150565b600080610c21614844565b6007846040518082805190602001908083835b60208310610c575780518252602082019150602081019050602083039250610c34565b6001836020036101000a03801982511681845116808217855250505050505090500191505090815260200160405180910390206040518060400160405290816000820154815260200160018201548152505090506000816020015111610d08576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806149b96030913960400191505060405180910390fd5b806000015181602001519250925050915091565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600060149054906101000a900460ff1681565b600160026000828254019250508190555060006002549050600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610e30576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f53656e646572206d75737420626520617070726f76657200000000000000000081525060200191505060405180910390fd5b600060086000848152602001908152602001600020905060016004811115610e5457fe5b8160010160149054906101000a900460ff166004811115610e7157fe5b14610ec7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602281526020018061494f6022913960400191505060405180910390fd5b610ecf61485e565b610efc8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16613607565b9050610f0661485e565b610f138360040154613767565b9050610f1d61485e565b610f2561485e565b610f38838561378590919063ffffffff16565b610f43578284610f46565b83835b91509150610f5261485e565b610f7784610f69858561379a90919063ffffffff16565b61384190919063ffffffff16565b9050610fa260046040518060200160405290816000820154815250508261398a90919063ffffffff16565b610ff7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252603b815260200180614a45603b913960400191505060405180910390fd5b42866006018190555060028660010160146101000a81548160ff0219169083600481111561102157fe5b0217905550877f8b2b870c73325a932fadfc3f0d07358f8086320c6e6c27d36b5ea14d7c3d541360405160405180910390a250505050505060025481146110d0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b6110dc611eb3565b61114e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b80600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055507fa03757d836cb0b61c0fbba2147f5d51d6071ff3dd5bf6963beb55563d64878e181604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390a150565b60086020528060005260406000206000915090508060000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16908060010160149054906101000a900460ff16908060010160159054906101000a900460ff16908060020154908060030154908060040154908060050154908060060154905089565b60048060000154905081565b600981815481106112b657fe5b906000526020600020016000915090505481565b60006112d461485e565b6112dd85613767565b9050826112f0576112ed816139a0565b90505b6112f861485e565b61134261130486613a52565b6113346005604051806020016040529081600082015481525050611326613adc565b61379a90919063ffffffff16565b613b0290919063ffffffff16565b905061135f61135a8284613b0290919063ffffffff16565b613f61565b925050509392505050565b600080600080600180600080839350829250819150809050935093509350935090919293565b60058060000154905081565b60006001600260008282540192505081905550600060025490506000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638932cbf488886040518363ffffffff1660e01b815260040180806020018281038252848482818152602001925080828437600081840152601f19601f820116905080830192505050935050505060206040518083038186803b15801561145757600080fd5b505afa15801561146b573d6000803e3d6000fd5b505050506040513d602081101561148157600080fd5b8101908080519060200190929190505050905060006114a76114a283613607565b613f82565b905060006114b68288886112ca565b90506000806115088b8b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f82011690508083019250505050505050610c16565b91509150600088611519578961151b565b835b905081811115801561152d5750828110155b611582576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e815260200180614a17602e913960400191505060405180910390fd5b505050600086611592578361159b565b61159a613f90565b5b90508073ffffffffffffffffffffffffffffffffffffffff166323b872dd33308b6040518463ffffffff1660e01b8152600401808473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020018281526020019350505050602060405180830381600087803b15801561165857600080fd5b505af115801561166c573d6000803e3d6000fd5b505050506040513d602081101561168257600080fd5b8101908080519060200190929190505050611705576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f5472616e7366657220696e206f662073656c6c20746f6b656e206661696c656481525060200191505060405180910390fd5b61171b6001600a5461408b90919063ffffffff16565b600a819055506000876117b9578473ffffffffffffffffffffffffffffffffffffffff166312c6c0998a6040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561177957600080fd5b505afa15801561178d573d6000803e3d6000fd5b505050506040513d60208110156117a357600080fd5b81019080805190602001909291905050506117bb565b885b90506040518061012001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020018673ffffffffffffffffffffffffffffffffffffffff1681526020016001600481111561180e57fe5b815260200189151581526020018281526020018481526020018581526020016006548152602001600081525060086000600a54815260200190815260200160002060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160010160146101000a81548160ff0219169083600481111561190157fe5b021790555060608201518160010160156101000a81548160ff0219169083151502179055506080820151816002015560a0820151816003015560c0820151816004015560e082015181600501556101008201518160060155905050611aab60086000600a548152602001908152602001600020604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166004811115611a4a57fe5b6004811115611a5557fe5b81526020016001820160159054906101000a900460ff1615151515815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481525050614113565b50506009600a5490806001815401808255809150509060018203906000526020600020016000909192909190915055503373ffffffffffffffffffffffffffffffffffffffff16600a547f988f3fd60d91f43c99361ce5de82a51999ffd3deda06baac9235df289bb7c6498d8d8d888e6040518080602001858152602001848152602001831515151581526020018281038252878782818152602001925080828437600081840152601f19601f820116905080830192505050965050505050505060405180910390a3600a54965050505050506002548114611bf5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b50949350505050565b611c06611eb3565b611c78576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a360008060006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550565b606080600980549050604051908082528060200260200182016040528015611d6e5781602001602082028038833980820191505090505b50905060008090505b600980549050811015611e5c57600060098281548110611d9357fe5b9060005260206000200154905060016004811115611dad57fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff166004811115611ddc57fe5b1480611e21575060026004811115611df057fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff166004811115611e1f57fe5b145b15611e405780838381518110611e3357fe5b6020026020010181815250505b50611e5560018261408b90919063ffffffff16565b9050611d77565b508091505090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16611ef56142af565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b611f19611eb3565b611f8b576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16141561202e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f43616e6e6f7420726567697374657220746865206e756c6c206164647265737381525060200191505060405180910390fd5b80600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508073ffffffffffffffffffffffffffffffffffffffff167f27fe5f0c1c3b1ed427cc63d0f05759ffdecf9aec9e18d31ef366fc8a6cb5dc3b60405160405180910390a250565b600a5481565b6120c3611eb3565b612135576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b612145612140613adc565b613f82565b8111156121ba576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601d8152602001807f537072656164206d75737420626520736d616c6c6572207468616e203100000081525060200191505060405180910390fd5b6121c381613767565b6005600082015181600001559050507f8946f328efcc515b5cc3282f6cd95e87a6c0d3508421af0b52d4d3620b3e2db3816040518082815260200191505060405180910390a150565b612214611eb3565b612286576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b61228f81613767565b6004600082015181600001559050507f64efcc8d6bb33e1eb5c31f8bec9ac8a42321a1fa36c6d831c759a6da5c2797f7816040518082815260200191505060405180910390a150565b6007818051602081018201805184825260208301602085012081835280955050505050506000915090508060000154908060010154905082565b60016002600082825401925050819055506000600254905060006008600084815260200190815260200160002090506001600481111561234e57fe5b8160010160149054906101000a900460ff16600481111561236b57fe5b141561243b573373ffffffffffffffffffffffffffffffffffffffff168160000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1614612436576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f53656e646572206d7573742062652065786368616e676572000000000000000081525060200191505060405180910390fd5b61253c565b6002600481111561244857fe5b8160010160149054906101000a900460ff16600481111561246557fe5b14156124ea57612473611eb3565b6124e5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260148152602001807f53656e646572206d757374206265206f776e657200000000000000000000000081525060200191505060405180910390fd5b61253b565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602e8152602001806149e9602e913960400191505060405180910390fd5b5b60048160010160146101000a81548160ff0219169083600481111561255d57fe5b02179055506000806126a083604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff16600481111561263f57fe5b600481111561264a57fe5b81526020016001820160159054906101000a900460ff1615151515815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481525050614113565b915091508173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb8460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b15801561274f57600080fd5b505af1158015612763573d6000803e3d6000fd5b505050506040513d602081101561277957600080fd5b81019080805190602001909291905050506127df576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526023815260200180614ac96023913960400191505060405180910390fd5b847f80079243b2a36fa4656ef4ac30e5a3ebe1d048ca90b5b91cf3d597bf526dcaa760405160405180910390a25050506002548114612886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b6001600260008282540192505081905550600060025490506000600860008481526020019081526020016000209050600260048111156128c657fe5b8160010160149054906101000a900460ff1660048111156128e357fe5b14612939576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260228152602001806149716022913960400191505060405180910390fd5b426129558260050154836006015461408b90919063ffffffff16565b11156129c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260178152602001807f5665746f20706572696f64206e6f7420656c617073656400000000000000000081525060200191505060405180910390fd5b60038160010160146101000a81548160ff021916908360048111156129ea57fe5b0217905550600080612b2d83604051806101200160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160149054906101000a900460ff166004811115612acc57fe5b6004811115612ad757fe5b81526020016001820160159054906101000a900460ff1615151515815260200160028201548152602001600382015481526020016004820154815260200160058201548152602001600682015481525050614113565b915091508260010160159054906101000a900460ff1615612deb578173ffffffffffffffffffffffffffffffffffffffff1663a9059cbb612b6c6142b7565b836040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612bd657600080fd5b505af1158015612bea573d6000803e3d6000fd5b505050506040513d6020811015612c0057600080fd5b8101908080519060200190929190505050612c66576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806149936026913960400191505060405180910390fd5b8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f198460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600301546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612d3957600080fd5b505af1158015612d4d573d6000803e3d6000fd5b505050506040513d6020811015612d6357600080fd5b8101908080519060200190929190505050612de6576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f537461626c6520746f6b656e206d696e74206661696c6564000000000000000081525060200191505060405180910390fd5b613056565b8260010160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68826040518263ffffffff1660e01b815260040180828152602001915050602060405180830381600087803b158015612e6257600080fd5b505af1158015612e76573d6000803e3d6000fd5b505050506040513d6020811015612e8c57600080fd5b8101908080519060200190929190505050612f0f576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f537461626c6520746f6b656e206275726e206661696c6564000000000000000081525060200191505060405180910390fd5b612f176142b7565b73ffffffffffffffffffffffffffffffffffffffff166303a0fea38460000160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1685600301546040518363ffffffff1660e01b8152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b158015612fc557600080fd5b505af1158015612fd9573d6000803e3d6000fd5b505050506040513d6020811015612fef57600080fd5b8101908080519060200190929190505050613055576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526028815260200180614a806028913960400191505060405180910390fd5b5b847f0b4c107dd8ed767c40dcc74867774b42e6987abba9874b97b9740d3bcb5c9ccb60405160405180910390a250505060025481146130fd576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252600e8152602001807f7265656e7472616e742063616c6c00000000000000000000000000000000000081525060200191505060405180910390fd5b5050565b600060149054906101000a900460ff1615613184576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601c8152602001807f636f6e747261637420616c726561647920696e697469616c697a65640000000081525060200191505060405180910390fd5b6001600060146101000a81548160ff0219169083151502179055506131a8336143b2565b6131b185611f11565b6131ba846110d4565b6131c38361220c565b6131cc826120bb565b6131d581610aff565b5050505050565b6131e4611eb3565b613256576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b808211156132af576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260308152602001806148e96030913960400191505060405180910390fd5b60405180604001604052808381526020018281525060078585604051808383808284378083019250505092505050908152602001604051809103902060008201518160000155602082015181600101559050507f64b64d5a316c373e148f92eebf62bd8ce51e1c34b056eb81c7a4d1f0e47636668484848460405180806020018481526020018381526020018281038252868682818152602001925080828437600081840152601f19601f8201169050808301925050509550505050505060405180910390a150505050565b60098054905081106133f5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260138152602001807f496e646578206f7574206f6620626f756e64730000000000000000000000000081525060200191505060405180910390fd5b60006009828154811061340457fe5b906000526020600020015490506001600481111561341e57fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff16600481111561344d57fe5b1415801561349557506002600481111561346357fe5b6008600083815260200190815260200160002060010160149054906101000a900460ff16600481111561349257fe5b14155b613507576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601e8152602001807f45786368616e67652070726f706f73616c206e6f7420696e616374697665000081525060200191505060405180910390fd5b600061352260016009805490506144f690919063ffffffff16565b905080831015613560576009818154811061353957fe5b90600052602060002001546009848154811061355157fe5b90600052602060002001819055505b60098054809190600190036135759190614871565b50505050565b60065481565b613589611eb3565b6135fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260208152602001807f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657281525060200191505060405180910390fd5b613604816143b2565b50565b61360f61485e565b60008061361a614540565b73ffffffffffffffffffffffffffffffffffffffff1663ef90e1b0856040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050604080518083038186803b15801561369557600080fd5b505afa1580156136a9573d6000803e3d6000fd5b505050506040513d60408110156136bf57600080fd5b81019080805190602001909291908051906020019092919050505080925081935050506000811161373b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401808060200182810382526021815260200180614aa86021913960400191505060405180910390fd5b61375e61374782613767565b61375084613767565b61384190919063ffffffff16565b92505050919050565b61376f61485e565b6040518060200160405280838152509050919050565b60008160000151836000015110905092915050565b6137a261485e565b816000015183600001511015613820576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f737562737472616374696f6e20756e646572666c6f772064657465637465640081525060200191505060405180910390fd5b60405180602001604052808360000151856000015103815250905092915050565b61384961485e565b6000826000015114156138c4576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260118152602001807f63616e277420646976696465206279203000000000000000000000000000000081525060200191505060405180910390fd5b600069d3c21bcecceda10000008460000151029050836000015169d3c21bcecceda100000082816138f157fe5b0414613965576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260128152602001807f6f766572666c6f7720617420646976696465000000000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808460000151838161397d57fe5b0481525091505092915050565b6000816000015183600001511115905092915050565b6139a861485e565b600082600001511415613a23576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260188152602001807f63616e27742063616c6c207265636970726f63616c283029000000000000000081525060200191505060405180910390fd5b6040518060200160405280836000015169d3c21bcecceda1000000800281613a4757fe5b048152509050919050565b613a5a61485e565b613a6261463b565b821115613aba576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260368152602001806149196036913960400191505060405180910390fd5b604051806020016040528069d3c21bcecceda100000084028152509050919050565b613ae461485e565b604051806020016040528069d3c21bcecceda1000000815250905090565b613b0a61485e565b600083600001511480613b21575060008260000151145b15613b3d57604051806020016040528060008152509050613f5b565b69d3c21bcecceda100000082600001511415613b5b57829050613f5b565b69d3c21bcecceda100000083600001511415613b7957819050613f5b565b600069d3c21bcecceda1000000613b8f8561465a565b6000015181613b9a57fe5b0490506000613ba885614691565b600001519050600069d3c21bcecceda1000000613bc48661465a565b6000015181613bcf57fe5b0490506000613bdd86614691565b6000015190506000828502905060008514613c715782858281613bfc57fe5b0414613c70576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b600069d3c21bcecceda10000008202905060008214613d135769d3c21bcecceda1000000828281613c9e57fe5b0414613d12576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601f8152602001807f6f766572666c6f772078317931202a206669786564312064657465637465640081525060200191505060405180910390fd5b5b8091506000848602905060008614613da45784868281613d2f57fe5b0414613da3576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279312064657465637465640000000000000000000081525060200191505060405180910390fd5b5b6000848802905060008814613e325784888281613dbd57fe5b0414613e31576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783179322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b613e3a6146ce565b8781613e4257fe5b049650613e4d6146ce565b8581613e5557fe5b0494506000858802905060008814613ee65785888281613e7157fe5b0414613ee5576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260168152602001807f6f766572666c6f7720783279322064657465637465640000000000000000000081525060200191505060405180910390fd5b5b613eee61485e565b6040518060200160405280878152509050613f17816040518060200160405280878152506146db565b9050613f31816040518060200160405280868152506146db565b9050613f4b816040518060200160405280858152506146db565b9050809a50505050505050505050505b92915050565b600069d3c21bcecceda1000000826000015181613f7a57fe5b049050919050565b600081600001519050919050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f476f6c64546f6b656e00000000000000000000000000000000000000000000008152506009019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561404b57600080fd5b505afa15801561405f573d6000803e3d6000fd5b505050506040513d602081101561407557600080fd5b8101908080519060200190929190505050905090565b600080828401905083811015614109576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252601b8152602001807f536166654d6174683a206164646974696f6e206f766572666c6f77000000000081525060200191505060405180910390fd5b8091505092915050565b6000806000808460600151156141395761412b613f90565b9150846080015190506141d9565b6000856020015190508092508073ffffffffffffffffffffffffffffffffffffffff1663af31f58787608001516040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561419a57600080fd5b505afa1580156141ae573d6000803e3d6000fd5b505050506040513d60208110156141c457600080fd5b81019080805190602001909291905050509150505b60008273ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561425857600080fd5b505afa15801561426c573d6000803e3d6000fd5b505050506040513d602081101561428257600080fd5b81019080805190602001909291905050509050818110156142a1578091505b828294509450505050915091565b600033905090565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f52657365727665000000000000000000000000000000000000000000000000008152506007019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561437257600080fd5b505afa158015614386573d6000803e3d6000fd5b505050506040513d602081101561439c57600080fd5b8101908080519060200190929190505050905090565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415614438576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260268152602001806148c36026913960400191505060405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff166000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a3806000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600061453883836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f770000815250614784565b905092915050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663dcf0aaed60405160200180807f536f727465644f7261636c657300000000000000000000000000000000000000815250600d019050604051602081830303815290604052805190602001206040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156145fb57600080fd5b505afa15801561460f573d6000803e3d6000fd5b505050506040513d602081101561462557600080fd5b8101908080519060200190929190505050905090565b60007601357c299a88ea76a58924d52ce4f26a85af186c2b9e74905090565b61466261485e565b604051806020016040528069d3c21bcecceda10000008085600001518161468557fe5b04028152509050919050565b61469961485e565b604051806020016040528069d3c21bcecceda1000000808560000151816146bc57fe5b04028460000151038152509050919050565b600064e8d4a51000905090565b6146e361485e565b600082600001518460000151019050836000015181101561476c576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825260158152602001807f616464206f766572666c6f77206465746563746564000000000000000000000081525060200191505060405180910390fd5b60405180602001604052808281525091505092915050565b6000838311158290614831576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156147f65780820151818401526020810190506147db565b50505050905090810190601f1680156148235780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b5060008385039050809150509392505050565b604051806040016040528060008152602001600081525090565b6040518060200160405280600081525090565b81548183558181111561489857818360005260206000209182019101614897919061489d565b5b505050565b6148bf91905b808211156148bb5760008160009055506001016148a3565b5090565b9056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f20616464726573734d696e2065786368616e676520616d6f756e74206d757374206e6f742062652067726561746572207468616e206d617863616e277420637265617465206669786964697479206e756d626572206c6172676572207468616e206d61784e65774669786564282950726f706f73616c206d75737420626520696e2050726f706f73656420737461746550726f706f73616c206d75737420626520696e20417070726f7665642073746174655472616e73666572206f7574206f662043454c4f20746f2052657365727665206661696c65644d617820737461626c6520746f6b656e2065786368616e676520616d6f756e74206d75737420626520646566696e656450726f706f73616c206d75737420626520696e2050726f706f736564206f7220417070726f766564207374617465537461626c6520746f6b656e2065786368616e676520616d6f756e74206e6f742077697468696e206c696d69747343454c4f2065786368616e6765207261746520697320746f6f20646966666572656e742066726f6d207468652070726f706f7365642070726963655472616e73666572206f7574206f662043454c4f2066726f6d2052657365727665206661696c65644e6f206f7261636c652072617465732070726573656e7420666f7220746f6b656e5472616e73666572206f7574206f6620726566756e6420746f6b656e206661696c65645665746f20706572696f642063616e6e6f74206578636565642034207765656b73a265627a7a72315820d32d4f3ece6073ebb846b13d3ab8f28cf641898b22ed587a76c9b5ec5ee55bd564736f6c634300050d0032",
  "sourceMap": "497:26918:126:-;;;6992:52;8:9:-1;5:2;;;30:1;27;20:12;5:2;6992:52:126;;;;;;;;;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6992:52:126;;;;;;;;;;;;;;;;7036:4;698:17:154;718:12;:10;;;:12;;:::i;:::-;698:32;;749:9;740:6;;:18;;;;;;;;;;;;;;;;;;806:9;773:43;;802:1;773:43;;;;;;;;;;;;664:159;135:17:12;130:57;;176:4;162:11;;:18;;;;;;;;;;;;;;;;;;130:57;81:110;558:1:34;542:13;:17;;;;6992:52:126;497:26918;;788:96:150;833:15;867:10;860:17;;788:96;:::o;497:26918:126:-;;;;;;;",
  "deployedSourceMap": "497:26918:126:-;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;497:26918:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26922:491;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;26922:491:126;;;;;;;;;;;;;;;;;:::i;:::-;;23777:588;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23777:588:126;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;23777:588:126;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;23777:588:126;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;23777:588:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;23777:588:126;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;4680:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;53::12;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;12305:1346:126;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;12305:1346:126;;;;;;;;;;;;;;;;;:::i;:::-;;24543:127;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;24543:127:126;;;;;;;;;;;;;;;;;;;:::i;:::-;;5485:61;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5485:61:126;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4881:57;;;:::i;:::-;;;;;;;;;;;;;;;;;;;6455:42;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;6455:42:126;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;19528:788;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;19528:788:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;7218:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5000:34;;;:::i;:::-;;;;;;;;;;;;;;;;;;;8760:3322;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8760:3322:126;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;8760:3322:126;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;8760:3322:126;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;8760:3322:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1684:137:154;;;:::i;:::-;;21816:814:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;21816:814:126;;;;;;;;;;;;;;;;;2540:25:23;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;899:77:154;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;1250:92;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;3089:230:23;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;3089:230:23;;;;;;;;;;;;;;;;;;;:::i;:::-;;6632:36:126;;;:::i;:::-;;;;;;;;;;;;;;;;;;;25459:223;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;25459:223:126;;;;;;;;;;;;;;;;;:::i;:::-;;25014:281;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;25014:281:126;;;;;;;;;;;;;;;;;:::i;:::-;;5338:66;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5338:66:126;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;5338:66:126;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;5338:66:126;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;5338:66:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;5338:66:126;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;13917:1197;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;13917:1197:126;;;;;;;;;;;;;;;;;:::i;:::-;;15426:1934;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;15426:1934:126;;;;;;;;;;;;;;;;;:::i;:::-;;7854:425;;;;;;13:3:-1;8;5:12;2:2;;;30:1;27;20:12;2:2;7854:425:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;26188:561;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;26188:561:126;;;;;;;;;;21:11:-1;8;5:28;2:2;;;46:1;43;36:12;2:2;26188:561:126;;35:9:-1;28:4;12:14;8:25;5:40;2:2;;;58:1;55;48:12;2:2;26188:561:126;;;;;;100:9:-1;95:1;81:12;77:20;67:8;63:35;60:50;39:11;25:12;22:29;11:107;8:2;;;131:1;128;121:12;8:2;26188:561:126;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;20631:836;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;20631:836:126;;;;;;;;;;;;;;;;;:::i;:::-;;5133:32;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1970:107:154;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;1970:107:154;;;;;;;;;;;;;;;;;;;:::i;:::-;;26922:491:126;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27264:7:126;27240:20;:31;;27232:77;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27335:20;27315:17;:40;;;;27366:42;27387:20;27366:42;;;;;;;;;;;;;;;;;;26922:491;:::o;23777:588::-;23885:7;23894;23911:36;;:::i;:::-;23950:25;23976:21;23950:48;;;;;;;;;;;;;36:153:-1;66:2;61:3;58:11;36:153;;182:3;176:10;171:3;164:23;98:2;93:3;89:12;82:19;;123:2;118:3;114:12;107:19;;148:2;143:3;139:12;132:19;;36:153;;;274:1;267:3;263:2;259:12;254:3;250:22;246:30;315:4;311:9;305:3;299:10;295:26;356:4;350:3;344:10;340:21;389:7;380;377:20;372:3;365:33;3:399;;;23950:48:126;;;;;;;;;;;;;;;;;;;;;23911:87;;;;;;;;;;;;;;;;;;;;;;;;;;;24214:1;24179:14;:32;;;:36;24164:115;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24293:14;:32;;;24327:14;:32;;;24285:75;;;;;23777:588;;;:::o;4680:23::-;;;;;;;;;;;;;:::o;53::12:-;;;;;;;;;;;;;:::o;12305:1346:126:-;970:1:34;953:13;;:18;;;;;;;;;;;977:20;1000:13;;977:36;;6793:8:126;;;;;;;;;;;6779:22;;:10;:22;;;6771:58;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12399:33;12435:17;:29;12453:10;12435:29;;;;;;;;;;;12399:65;;12549:30;12531:48;;;;;;;;:8;:14;;;;;;;;;;;;:48;;;;;;;;;12523:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12793:39;;:::i;:::-;12835:43;12857:8;:20;;;;;;;;;;;;12835:21;:43::i;:::-;12793:85;;12884:40;;:::i;:::-;12927:66;12951:8;:36;;;12927:16;:66::i;:::-;12884:109;;13000:38;;:::i;:::-;13040:39;;:::i;:::-;13083:35;13105:12;13083:11;:21;;:35;;;;:::i;:::-;:107;;13164:12;13178:11;13083:107;;;13128:11;13141:12;13083:107;12999:191;;;;13196:38;;:::i;:::-;13237:53;13277:12;13237:32;13258:10;13237:11;:20;;:32;;;;:::i;:::-;:39;;:53;;;;:::i;:::-;13196:94;;13311:45;13326:29;13311:45;;;;;;;;;;;;;;;;;:10;:14;;:45;;;;:::i;:::-;13296:135;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13531:15;13502:8;:26;;:44;;;;13569:30;13552:8;:14;;;:47;;;;;;;;;;;;;;;;;;;;;;;;13635:10;13610:36;;;;;;;;;;6835:1;;;;;;1050:13:34;;1034:12;:29;1026:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12305:1346:126;;:::o;24543:127::-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24619:11:126;24608:8;;:22;;;;;;;;;;;;;;;;;;24641:24;24653:11;24641:24;;;;;;;;;;;;;;;;;;;;;;24543:127;:::o;5485:61::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4881:57::-;;;;;;;;;:::o;6455:42::-;;;;;;;;;;;;;;;;;;;;;;;;;:::o;19528:788::-;19655:7;19672:40;;:::i;:::-;19715:45;19732:27;19715:16;:45::i;:::-;19672:88;;19868:8;19863:70;;19901:25;:12;:23;:25::i;:::-;19886:40;;19863:70;20030:46;;:::i;:::-;20079:92;20133:32;20154:10;20133:20;:32::i;:::-;20079:37;20109:6;20079:37;;;;;;;;;;;;;;;;;:20;:18;:20::i;:::-;:29;;:37;;;;:::i;:::-;:46;;:92;;;;:::i;:::-;20030:141;;20258:53;:41;20280:18;20258:12;:21;;:41;;;;:::i;:::-;:51;:53::i;:::-;20251:60;;;;19528:788;;;;;:::o;7218:117::-;7269:7;7278;7287;7296;7319:1;7322;7325;7328;7311:19;;;;;;;;;;;;;;;;;;;;7218:117;;;;:::o;5000:34::-;;;;;;;;;:::o;8760:3322::-;8913:7;970:1:34;953:13;;:18;;;;;;;;;;;977:20;1000:13;;977:36;;8928:19:126;8950:8;;;;;;;;;;;:33;;;8984:21;;8950:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;8950:56:126;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;8950:56:126;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;8950:56:126;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;8950:56:126;;;;;;;;;;;;;;;;8928:78;;9066:35;9104:43;:34;9126:11;9104:21;:34::i;:::-;:41;:43::i;:::-;9066:81;;9284:17;9304:63;9317:27;9346:10;9358:8;9304:12;:63::i;:::-;9284:83;;9630:25;9657;9686:67;9724:21;;9686:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;9686:67:126;;;;;;:28;:67::i;:::-;9629:124;;;;9882:33;9918:8;:33;;9941:10;9918:33;;;9929:9;9918:33;9882:69;;10005:17;9976:25;:46;;:106;;;;;10065:17;10036:25;:46;;9976:106;9959:189;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1019:1:34;;;10199:16:126;10218:8;:47;;10253:11;10218:47;;;10229:14;:12;:14::i;:::-;10218:47;10199:66;;10286:9;:22;;;10309:10;10329:4;10336:10;10286:61;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10286:61:126;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10286:61:126;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10286:61:126;;;;;;;;;;;;;;;;10271:124;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10599:28;10625:1;10599:21;;:25;;:28;;;;:::i;:::-;10575:21;:52;;;;10713:24;10740:8;:86;;10789:11;10776:38;;;10815:10;10776:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;10776:50:126;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;10776:50:126;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;10776:50:126;;;;;;;;;;;;;;;;10740:86;;;10757:10;10740:86;10713:113;;10875:395;;;;;;;;10911:10;10875:395;;;;;;10942:11;10875:395;;;;;;10968:30;10875:395;;;;;;;;;;;;11016:8;10875:395;;;;;;11044:16;10875:395;;;;11079:9;10875:395;;;;11125:27;10875:395;;;;11179:17;;10875:395;;;;11223:1;10875:395;;;10832:17;:40;10850:21;;10832:40;;;;;;;;;;;:438;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;11615:67;11641:17;:40;11659:21;;11641:40;;;;;;;;;;;11615:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;:67::i;:::-;;;11739:25;11770:21;;11739:53;;39:1:-1;33:3;27:10;23:18;57:10;52:3;45:23;79:10;72:17;;0:93;11739:53:126;;;;;;;;;;;;;;;;;;;;;;11947:10;11887:156;;11918:21;;11887:156;11965:21;;11994:10;12012:9;12029:8;11887:156;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;11887:156:126;;;;;;;;;;;;;;;;;12056:21;;12049:28;;;;;;;1050:13:34;;1034:12;:29;1026:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8760:3322:126;;;;;;;:::o;1684:137:154:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1782:1;1745:40;;1766:6;;;;;;;;;;;1745:40;;;;;;;;;;;;1812:1;1795:6;;:19;;;;;;;;;;;;;;;;;;1684:137::o;21816:814:126:-;21871:16;22138:34;22189:25;:32;;;;22175:47;;;;;;;;;;;;;;;;;;;;;;29:2:-1;21:6;17:15;117:4;105:10;97:6;88:34;148:4;140:6;136:17;126:27;;0:157;22175:47:126;;;;22138:84;;22234:9;22246:1;22234:13;;22229:367;22253:25;:32;;;;22249:1;:36;22229:367;;;22309:18;22330:25;22356:1;22330:28;;;;;;;;;;;;;;;;22309:49;;22418:30;22379:69;;;;;;;;:17;:29;22397:10;22379:29;;;;;;;;;;;:35;;;;;;;;;;;;:69;;;;;;;;;:150;;;;22499:30;22460:69;;;;;;;;:17;:29;22478:10;22460:29;;;;;;;;;;;:35;;;;;;;;;;;;:69;;;;;;;;;22379:150;22366:224;;;22571:10;22548:17;22566:1;22548:20;;;;;;;;;;;;;:33;;;;;22366:224;22229:367;22291:8;22297:1;22291;:5;;:8;;;;:::i;:::-;22287:12;;22229:367;;;;22608:17;22601:24;;;21816:814;:::o;2540:25:23:-;;;;;;;;;;;;;:::o;899:77:154:-;937:7;963:6;;;;;;;;;;;956:13;;899:77;:::o;1250:92::-;1290:4;1329:6;;;;;;;;;;;1313:22;;:12;:10;:12::i;:::-;:22;;;1306:29;;1250:92;:::o;3089:230:23:-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3193:1:23;3166:29;;:15;:29;;;;3158:74;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3259:15;3238:8;;:37;;;;;;;;;;;;;;;;;;3298:15;3286:28;;;;;;;;;;;;3089:230;:::o;6632:36:126:-;;;;:::o;25459:223::-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25541:29:126;:20;:18;:20::i;:::-;:27;:29::i;:::-;25528:9;:42;;25520:84;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25619:27;25636:9;25619:16;:27::i;:::-;25610:6;:36;;;;;;;;;;;25657:20;25667:9;25657:20;;;;;;;;;;;;;;;;;;25459:223;:::o;25014:281::-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25163:50:126;25180:32;25163:16;:50::i;:::-;25131:29;:82;;;;;;;;;;;25224:66;25257:32;25224:66;;;;;;;;;;;;;;;;;;25014:281;:::o;5338:66::-;;;28:7:-1;22:14;169:4;160:7;156:18;147:7;143:32;204:13;198:20;246:8;231:13;224:31;316:4;307:7;303:18;296:4;287:7;283:18;273:49;350:9;335:13;328:32;378:4;366:16;;0:388;;;;5338:66:126;;;;;;;;;;;;;;;;;;:::o;13917:1197::-;970:1:34;953:13;;:18;;;;;;;;;;;977:20;1000:13;;977:36;;13997:33:126;14033:17;:29;14051:10;14033:29;;;;;;;;;;;13997:65;;14268:30;14250:48;;;;;;;;:8;:14;;;;;;;;;;;;:48;;;;;;;;;14246:332;;;14338:10;14316:32;;:8;:18;;;;;;;;;;;;:32;;;14308:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14246:332;;;14412:30;14394:48;;;;;;;;:8;:14;;;;;;;;;;;;:48;;;;;;;;;14390:188;;;14460:9;:7;:9::i;:::-;14452:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14390:188;;;14515:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14390:188;14246:332;14697:31;14680:8;:14;;;:48;;;;;;;;;;;;;;;;;;;;;;;;14806:18;14826:20;14850:35;14876:8;14850:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;:35::i;:::-;14805:80;;;;14956:11;:20;;;14977:8;:18;;;;;;;;;;;;14997:12;14956:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;14956:54:126;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;14956:54:126;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;14956:54:126;;;;;;;;;;;;;;;;14941:120;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15098:10;15072:37;;;;;;;;;;1019:1:34;;;1050:13;;1034:12;:29;1026:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;13917:1197:126;;:::o;15426:1934::-;970:1:34;953:13;;:18;;;;;;;;;;;977:20;1000:13;;977:36;;15507:33:126;15543:17;:29;15561:10;15543:29;;;;;;;;;;;15507:65;;15663:30;15645:48;;;;;;;;:8;:14;;;;;;;;;;;;:48;;;;;;;;;15637:95;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15888:15;15826:58;15857:8;:26;;;15826:8;:26;;;:30;;:58;;;;:::i;:::-;:77;;15811:131;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16062:30;16045:8;:14;;;:47;;;;;;;;;;;;;;;;;;;;;;;;16128:16;16146:18;16168:35;16194:8;16168:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:25;:35::i;:::-;16127:76;;;;16351:8;:17;;;;;;;;;;;;16347:962;;;16453:9;:18;;;16480:12;:10;:12::i;:::-;16495:10;16453:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16453:53:126;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16453:53:126;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16453:53:126;;;;;;;;;;;;;;;;16436:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16647:8;:20;;;;;;;;;;;;16634:39;;;16674:8;:18;;;;;;;;;;;;16694:8;:18;;;16634:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;16634:79:126;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;16634:79:126;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;16634:79:126;;;;;;;;;;;;;;;;16617:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16347:962;;;17015:8;:20;;;;;;;;;;;;17002:39;;;17042:10;17002:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17002:51:126;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17002:51:126;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17002:51:126;;;;;;;;;;;;;;;;16994:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;17169:12;:10;:12::i;:::-;:33;;;17203:8;:18;;;;;;;;;;;;17223:8;:18;;;17169:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;17169:73:126;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;17169:73:126;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;17169:73:126;;;;;;;;;;;;;;;;17152:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16347:962;17344:10;17319:36;;;;;;;;;;1019:1:34;;;1050:13;;1034:12;:29;1026:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;15426:1934:126;;:::o;7854:425::-;233:11:12;;;;;;;;;;;232:12;224:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;297:4;283:11;;:18;;;;;;;;;;;;;;;;;;8048:30:126;8067:10;8048:18;:30::i;:::-;8084:22;8096:9;8084:11;:22::i;:::-;8112;8124:9;8112:11;:22::i;:::-;8140:64;8173:30;8140:32;:64::i;:::-;8210:18;8220:7;8210:9;:18::i;:::-;8234:40;8255:18;8234:20;:40::i;:::-;7854:425;;;;;:::o;26188:561::-;1103:9:154;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26396:17:126;26375;:38;;26360:117;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26534:110;;;;;;;;26576:17;26534:110;;;;26620:17;26534:110;;;26483:25;26509:21;;26483:48;;;;;30:3:-1;22:6;14;1:33;57:3;49:6;45:16;35:26;;26483:48:126;;;;;;;;;;;;;;;;;;:161;;;;;;;;;;;;;;;;;;;26655:89;26684:21;;26707:17;26726;26655:89;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;30:3:-1;22:6;14;1:33;99:1;93:3;85:6;81:16;74:27;137:4;133:9;126:4;121:3;117:14;113:30;106:37;;169:3;161:6;157:16;147:26;;26655:89:126;;;;;;;;;;;;;;;;26188:561;;;;:::o;20631:836::-;20722:25;:32;;;;20714:5;:40;20706:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20784:18;20805:25;20831:5;20805:32;;;;;;;;;;;;;;;;20784:53;;20950:30;20911:69;;;;;;;;:17;:29;20929:10;20911:29;;;;;;;;;;;:35;;;;;;;;;;;;:69;;;;;;;;;;:150;;;;;21031:30;20992:69;;;;;;;;:17;:29;21010:10;20992:29;;;;;;;;;;;:35;;;;;;;;;;;;:69;;;;;;;;;;20911:150;20896:211;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21217:17;21237:39;21274:1;21237:25;:32;;;;:36;;:39;;;;:::i;:::-;21217:59;;21294:9;21286:5;:17;21282:109;;;21348:25;21374:9;21348:36;;;;;;;;;;;;;;;;21313:25;21339:5;21313:32;;;;;;;;;;;;;;;:71;;;;21282:109;21428:25;:34;;;;;;;;;;;;:::i;:::-;;20631:836;;;:::o;5133:32::-;;;;:::o;1970:107:154:-;1103:9;:7;:9::i;:::-;1095:54;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2042:28;2061:8;2042:18;:28::i;:::-;1970:107;:::o;22919:504:126:-;23005:27;;:::i;:::-;23042:21;23069:23;23133:18;:16;:18::i;:::-;:29;;;23163:11;23133:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;23133:42:126;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;23133:42:126;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;23133:42:126;;;;;;;;;;;;;;;;;;;;;;;;;23098:77;;;;;;;;23293:1;23275:15;:19;23267:65;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23345:73;23384:33;23401:15;23384:16;:33::i;:::-;23345:31;23362:13;23345:16;:31::i;:::-;:38;;:73;;;;:::i;:::-;23338:80;;;;22919:504;;;:::o;1502:94:7:-;1550:15;;:::i;:::-;1580:11;;;;;;;;1589:1;1580:11;;;1573:18;;1502:94;;;:::o;9799:114::-;9872:4;9901:1;:7;;;9891:1;:7;;;:17;9884:24;;9799:114;;;;:::o;5341:209::-;5420:15;;:::i;:::-;5462:1;:7;;;5451:1;:7;;;:18;;5443:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5518:27;;;;;;;;5537:1;:7;;;5527:1;:7;;;:17;5518:27;;;5511:34;;5341:209;;;;:::o;9180:283::-;9257:15;;:::i;:::-;9299:1;9288;:7;;;:12;;9280:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9328:9;996:25;9340:1;:7;;;:21;9328:33;;9394:1;:7;;;996:25;9375:1;:15;;;;;;:26;9367:57;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9437:21;;;;;;;;9450:1;:7;;;9446:1;:11;;;;;;9437:21;;;9430:28;;;9180:283;;;;:::o;9949:116::-;10023:4;10053:1;:7;;;10042:1;:7;;;:18;;10035:25;;9949:116;;;;:::o;8222:217::-;8284:15;;:::i;:::-;8326:1;8315;:7;;;:12;;8307:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8369:47;;;;;;;;8408:1;:7;;;996:25;;8379;8378:37;;;;;;8369:47;;;8362:54;;8222:217;;;:::o;2547:203::-;2599:15;;:::i;:::-;2635:13;:11;:13::i;:::-;2630:1;:18;;2622:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2720:25;;;;;;;;996;2729:1;:15;2720:25;;;2713:32;;2547:203;;;:::o;1180:97::-;1221:15;;:::i;:::-;1251:21;;;;;;;;996:25;1251:21;;;1244:28;;1180:97;:::o;6206:1636::-;6285:15;;:::i;:::-;6323:1;6312;:7;;;:12;:28;;;;6339:1;6328;:7;;;:12;6312:28;6308:52;;;6349:11;;;;;;;;6358:1;6349:11;;;6342:18;;;;6308:52;996:25;6370:1;:7;;;:22;6366:36;;;6401:1;6394:8;;;;6366:36;996:25;6412:1;:7;;;:22;6408:36;;;6443:1;6436:8;;;;6408:36;6533:10;996:25;6546:10;6554:1;6546:7;:10::i;:::-;:16;;;:30;;;;;;6533:43;;6582:10;6595:13;6606:1;6595:10;:13::i;:::-;:19;;;6582:32;;6620:10;996:25;6633:10;6641:1;6633:7;:10::i;:::-;:16;;;:30;;;;;;6620:43;;6669:10;6682:13;6693:1;6682:10;:13::i;:::-;:19;;;6669:32;;6785:12;6805:2;6800;:7;6785:22;;6823:1;6817:2;:7;6813:63;;6847:2;6841;6834:4;:9;;;;;;:15;6826:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6813:63;6975:18;996:25;6996:4;:18;6975:39;;7032:1;7024:4;:9;7020:91;;996:25;7056:4;7043:10;:17;;;;;;:32;7035:76;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7020:91;7124:10;7117:17;;7141:12;7161:2;7156;:7;7141:22;;7179:1;7173:2;:7;7169:63;;7203:2;7197;7190:4;:9;;;;;;:15;7182:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7169:63;7239:12;7259:2;7254;:7;7239:22;;7277:1;7271:2;:7;7267:63;;7301:2;7295;7288:4;:9;;;;;;:15;7280:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7267:63;7347:14;:12;:14::i;:::-;7342:2;:19;;;;;;7337:24;;7377:14;:12;:14::i;:::-;7372:2;:19;;;;;;7367:24;;7397:12;7417:2;7412;:7;7397:22;;7435:1;7429:2;:7;7425:63;;7459:2;7453;7446:4;:9;;;;;;:15;7438:50;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7425:63;7572:22;;:::i;:::-;7597:14;;;;;;;;7606:4;7597:14;;;7572:39;;7626:27;7630:6;7638:14;;;;;;;;7647:4;7638:14;;;7626:3;:27::i;:::-;7617:36;;7695:27;7699:6;7707:14;;;;;;;;7716:4;7707:14;;;7695:3;:27::i;:::-;7686:36;;7764:27;7768:6;7776:14;;;;;;;;7785:4;7776:14;;;7764:3;:27::i;:::-;7755:36;;7831:6;7824:13;;;;;;;;;;;;6206:1636;;;;;:::o;2909:109::-;2970:7;996:25;2992:1;:7;;;:21;;;;;;2985:28;;2909:109;;;:::o;1674:92::-;1732:7;1754:1;:7;;;1747:14;;1674:92;;;:::o;4227:132:23:-;4274:6;4302:8;;;;;;;;;;;:27;;;1752:29;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;1752:29:23;;;1742:40;;;;;;4302:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4302:51:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4302:51:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4302:51:23;;;;;;;;;;;;;;;;4288:66;;4227:132;:::o;834:176:153:-;892:7;911:9;927:1;923;:5;911:17;;951:1;946;:6;;938:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1002:1;995:8;;;834:176;;;;:::o;17742:1228:126:-;17845:6;17853:7;17870:16;17892:18;17920:8;:17;;;17916:415;;;17959:14;:12;:14::i;:::-;17947:26;;17994:8;:19;;;17981:32;;17916:415;;;18034:19;18056:8;:20;;;18034:42;;18103:11;18084:31;;18278:11;18265:38;;;18304:8;:19;;;18265:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18265:59:126;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18265:59:126;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18265:59:126;;;;;;;;;;;;;;;;18252:72;;17916:415;;18796:20;18819:9;:19;;;18847:4;18819:34;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;18819:34:126;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;18819:34:126;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;18819:34:126;;;;;;;;;;;;;;;;18796:57;;18878:10;18863:12;:25;18859:71;;;18911:12;18898:25;;18859:71;18943:9;18954:10;18935:30;;;;;;;17742:1228;;;:::o;788:96:150:-;833:15;867:10;860:17;;788:96;:::o;4789:131:23:-;4834:8;4866;;;;;;;;;;;:27;;;2120;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2120:27:23;;;2110:38;;;;;;4866:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;4866:48:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;4866:48:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;4866:48:23;;;;;;;;;;;;;;;;4850:65;;4789:131;:::o;2178:225:154:-;2271:1;2251:22;;:8;:22;;;;2243:73;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2360:8;2331:38;;2352:6;;;;;;;;;;;2331:38;;;;;;;;;;;;2388:8;2379:6;;:17;;;;;;;;;;;;;;;;;;2178:225;:::o;1274:134:153:-;1332:7;1358:43;1362:1;1365;1358:43;;;;;;;;;;;;;;;;;:3;:43::i;:::-;1351:50;;1274:134;;;;:::o;4924:156:23:-;4975:14;5019:8;;;;;;;;;;;:27;;;2287:33;;;;;;;;;;;;;;;;49:4:-1;39:7;30;26:21;22:32;13:7;6:49;2287:33:23;;;2277:44;;;;;;5019:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:9:-1;5:2;;;30:1;27;20:12;5:2;5019:55:23;;;;8:9:-1;5:2;;;45:16;42:1;39;24:38;77:16;74:1;67:27;5:2;5019:55:23;;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;5019:55:23;;;;;;;;;;;;;;;;4997:78;;4924:156;:::o;2163:127:7:-;2209:7;2231:54;2224:61;;2163:127;:::o;4068:159::-;4127:15;;:::i;:::-;4157:47;;;;;;;;996:25;;4167:1;:7;;;:21;;;;;;4166:37;4157:47;;;4150:54;;4068:159;;;:::o;4514:172::-;4576:15;;:::i;:::-;4606:57;;;;;;;;996:25;;4626:1;:7;;;:21;;;;;;4625:37;4615:1;:7;;;:47;4606:57;;;4599:64;;4514:172;;;:::o;1905:87::-;1952:7;1974:13;1967:20;;1905:87;:::o;5058:207::-;5132:15;;:::i;:::-;5155:9;5177:1;:7;;;5167:1;:7;;;:17;5155:29;;5203:1;:7;;;5198:1;:12;;5190:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5249:11;;;;;;;;5258:1;5249:11;;;5242:18;;;5058:207;;;;:::o;1732:187:153:-;1818:7;1850:1;1845;:6;;1853:12;1837:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;23:1:-1;8:100;33:3;30:1;27:10;8:100;;;99:1;94:3;90:11;84:18;80:1;75:3;71:11;64:39;52:2;49:1;45:10;40:15;;8:100;;;12:14;1837:29:153;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1876:9;1892:1;1888;:5;1876:17;;1911:1;1904:8;;;1732:187;;;;;:::o;497:26918:126:-;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o",
  "source": "pragma solidity ^0.5.13;\n\nimport \"openzeppelin-solidity/contracts/math/SafeMath.sol\";\nimport \"openzeppelin-solidity/contracts/ownership/Ownable.sol\";\n\nimport \"../common/FixidityLib.sol\";\nimport \"../common/Initializable.sol\";\nimport \"../common/UsingRegistry.sol\";\nimport \"../common/interfaces/ICeloVersionedContract.sol\";\nimport \"../common/libraries/ReentrancyGuard.sol\";\nimport \"../stability/interfaces/IStableToken.sol\";\n\n/**\n * @title Facilitates large exchanges between CELO stable tokens.\n */\ncontract GrandaMento is\n  ICeloVersionedContract,\n  Ownable,\n  Initializable,\n  UsingRegistry,\n  ReentrancyGuard\n{\n  using FixidityLib for FixidityLib.Fraction;\n  using SafeMath for uint256;\n\n  // Emitted when a new exchange proposal is created.\n  event ExchangeProposalCreated(\n    uint256 indexed proposalId,\n    address indexed exchanger,\n    string stableTokenRegistryId,\n    uint256 sellAmount,\n    uint256 buyAmount,\n    bool sellCelo\n  );\n\n  // Emitted when an exchange proposal is approved by the approver.\n  event ExchangeProposalApproved(uint256 indexed proposalId);\n\n  // Emitted when an exchange proposal is cancelled.\n  event ExchangeProposalCancelled(uint256 indexed proposalId);\n\n  // Emitted when an exchange proposal is executed.\n  event ExchangeProposalExecuted(uint256 indexed proposalId);\n\n  // Emitted when the approver is set.\n  event ApproverSet(address approver);\n\n  // Emitted when maxApprovalExchangeRateChange is set.\n  event MaxApprovalExchangeRateChangeSet(uint256 maxApprovalExchangeRateChange);\n\n  // Emitted when the spread is set.\n  event SpreadSet(uint256 spread);\n\n  // Emitted when the veto period in seconds is set.\n  event VetoPeriodSecondsSet(uint256 vetoPeriodSeconds);\n\n  // Emitted when the exchange limits for a stable token are set.\n  event StableTokenExchangeLimitsSet(\n    string stableTokenRegistryId,\n    uint256 minExchangeAmount,\n    uint256 maxExchangeAmount\n  );\n\n  enum ExchangeProposalState { None, Proposed, Approved, Executed, Cancelled }\n\n  struct ExchangeLimits {\n    // The minimum amount of an asset that can be exchanged in a single proposal.\n    uint256 minExchangeAmount;\n    // The maximum amount of an asset that can be exchanged in a single proposal.\n    uint256 maxExchangeAmount;\n  }\n\n  struct ExchangeProposal {\n    // The exchanger/proposer of the exchange proposal.\n    address payable exchanger;\n    // The stable token involved in this proposal. This is stored rather than\n    // the stable token's registry ID in case the contract address is changed\n    // after a proposal is created, which could affect refunding or burning the\n    // stable token.\n    address stableToken;\n    // The state of the exchange proposal.\n    ExchangeProposalState state;\n    // Whether the exchanger is selling CELO and buying stableToken.\n    bool sellCelo;\n    // The amount of the sell token being sold. If a stable token is being sold,\n    // the amount of stable token in \"units\" is stored rather than the \"value.\"\n    // This is because stable tokens may experience demurrage/inflation, where\n    // the amount of stable token \"units\" doesn't change with time, but the \"value\"\n    // does. This is important to ensure the correct inflation-adjusted amount\n    // of the stable token is transferred out of this contract when a deposit is\n    // refunded or an exchange selling the stable token is executed.\n    // See StableToken.sol for more details on what \"units\" vs \"values\" are.\n    uint256 sellAmount;\n    // The amount of the buy token being bought. For stable tokens, this is\n    // kept track of as the value, not units.\n    uint256 buyAmount;\n    // The price of CELO quoted in stableToken at the time of the exchange proposal\n    // creation. This is the price used to calculate the buyAmount. Used for a\n    // safety check when an approval is being made that the price isn't wildly\n    // different. Recalculating buyAmount is not sufficient because if a stable token\n    // is being sold that has demurrage enabled, the original value when the stable\n    // tokens were deposited cannot be calculated.\n    uint256 celoStableTokenExchangeRate;\n    // The veto period in seconds at the time the proposal was created. This is kept\n    // track of on a per-proposal basis to lock-in the veto period for a proposal so\n    // that changes to the contract's vetoPeriodSeconds do not affect existing\n    // proposals.\n    uint256 vetoPeriodSeconds;\n    // The timestamp (`block.timestamp`) at which the exchange proposal was approved\n    // in seconds. If the exchange proposal has not ever been approved, is 0.\n    uint256 approvalTimestamp;\n  }\n\n  // The address with the authority to approve exchange proposals.\n  address public approver;\n\n  // The maximum allowed change in the CELO/stable token price when an exchange proposal\n  // is being approved relative to the rate when the exchange proposal was created.\n  FixidityLib.Fraction public maxApprovalExchangeRateChange;\n\n  // The percent fee imposed upon an exchange execution.\n  FixidityLib.Fraction public spread;\n\n  // The period in seconds after an approval during which an exchange proposal can be vetoed.\n  uint256 public vetoPeriodSeconds;\n\n  // The minimum and maximum amount of the stable token that can be minted or\n  // burned in a single exchange. Indexed by the stable token registry identifier string.\n  mapping(string => ExchangeLimits) public stableTokenExchangeLimits;\n\n  // State for all exchange proposals. Indexed by the exchange proposal ID.\n  mapping(uint256 => ExchangeProposal) public exchangeProposals;\n\n  // An array containing a superset of the IDs of exchange proposals that are currently\n  // in the Proposed or Approved state. Intended to allow easy viewing of all active\n  // exchange proposals. It's possible for a proposal ID in this array to no longer be\n  // active, so filtering is required to find the true set of active proposal IDs.\n  // A superset is kept because exchange proposal vetoes, intended to be done\n  // by Governance, effectively go through a multi-day timelock. If the veto\n  // call was required to provide the index in an array of activeProposalIds to\n  // remove corresponding to the vetoed exchange proposal, the timelock could result\n  // in the provided index being stale by the time the veto would be executed.\n  // Alternative approaches exist, like maintaining a linkedlist of active proposal\n  // IDs, but this approach was chosen for its low implementation complexity.\n  uint256[] public activeProposalIdsSuperset;\n\n  // Number of exchange proposals that have ever been created. Used for assigning\n  // an exchange proposal ID to a new proposal.\n  uint256 public exchangeProposalCount;\n\n  /**\n   * @notice Reverts if the sender is not the approver.\n   */\n  modifier onlyApprover() {\n    require(msg.sender == approver, \"Sender must be approver\");\n    _;\n  }\n\n  /**\n   * @notice Sets initialized == true on implementation contracts.\n   * @param test Set to true to skip implementation initialization.\n   */\n  constructor(bool test) public Initializable(test) {}\n\n  /**\n   * @notice Returns the storage, major, minor, and patch version of the contract.\n   * @return The storage, major, minor, and patch version of the contract.\n   */\n  function getVersionNumber() external pure returns (uint256, uint256, uint256, uint256) {\n    return (1, 1, 0, 0);\n  }\n\n  /**\n   * @notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n   * @param _registry The address of the registry.\n   * @param _approver The approver that has the ability to approve exchange proposals.\n   * @param _maxApprovalExchangeRateChange The maximum allowed change in CELO price\n   * between an exchange proposal's creation and approval.\n   * @param _spread The spread charged on exchanges.\n   * @param _vetoPeriodSeconds The length of the veto period in seconds.\n   */\n  function initialize(\n    address _registry,\n    address _approver,\n    uint256 _maxApprovalExchangeRateChange,\n    uint256 _spread,\n    uint256 _vetoPeriodSeconds\n  ) external initializer {\n    _transferOwnership(msg.sender);\n    setRegistry(_registry);\n    setApprover(_approver);\n    setMaxApprovalExchangeRateChange(_maxApprovalExchangeRateChange);\n    setSpread(_spread);\n    setVetoPeriodSeconds(_vetoPeriodSeconds);\n  }\n\n  /**\n   * @notice Creates a new exchange proposal and deposits the tokens being sold.\n   * @dev Stable token value amounts are used for the sellAmount, not unit amounts.\n   * @param stableTokenRegistryId The string registry ID for the stable token\n   * involved in the exchange.\n   * @param sellAmount The amount of the sell token being sold.\n   * @param sellCelo Whether CELO is being sold.\n   * @return The proposal identifier for the newly created exchange proposal.\n   */\n  function createExchangeProposal(\n    string calldata stableTokenRegistryId,\n    uint256 sellAmount,\n    bool sellCelo\n  ) external nonReentrant returns (uint256) {\n    address stableToken = registry.getAddressForStringOrDie(stableTokenRegistryId);\n\n    // Gets the price of CELO quoted in stableToken.\n    uint256 celoStableTokenExchangeRate = getOracleExchangeRate(stableToken).unwrap();\n\n    // Using the current oracle exchange rate, calculate what the buy amount is.\n    // This takes the spread into consideration.\n    uint256 buyAmount = getBuyAmount(celoStableTokenExchangeRate, sellAmount, sellCelo);\n\n    // Create new scope to prevent a stack too deep error.\n    {\n      // Get the minimum and maximum amount of stable token than can be involved\n      // in the exchange. This reverts if exchange limits for the stable token have\n      // not been set.\n      (uint256 minExchangeAmount, uint256 maxExchangeAmount) = getStableTokenExchangeLimits(\n        stableTokenRegistryId\n      );\n      // Ensure that the amount of stableToken being bought or sold is within\n      // the configurable exchange limits.\n      uint256 stableTokenExchangeAmount = sellCelo ? buyAmount : sellAmount;\n      require(\n        stableTokenExchangeAmount <= maxExchangeAmount &&\n          stableTokenExchangeAmount >= minExchangeAmount,\n        \"Stable token exchange amount not within limits\"\n      );\n    }\n\n    // Deposit the assets being sold.\n    IERC20 sellToken = sellCelo ? getGoldToken() : IERC20(stableToken);\n    require(\n      sellToken.transferFrom(msg.sender, address(this), sellAmount),\n      \"Transfer in of sell token failed\"\n    );\n\n    // Record the proposal.\n    // Add 1 to the running proposal count, and use the updated proposal count as\n    // the proposal ID. Proposal IDs intentionally start at 1.\n    exchangeProposalCount = exchangeProposalCount.add(1);\n    // For stable tokens, the amount is stored in units to deal with demurrage.\n    uint256 storedSellAmount = sellCelo\n      ? sellAmount\n      : IStableToken(stableToken).valueToUnits(sellAmount);\n    exchangeProposals[exchangeProposalCount] = ExchangeProposal({\n      exchanger: msg.sender,\n      stableToken: stableToken,\n      state: ExchangeProposalState.Proposed,\n      sellCelo: sellCelo,\n      sellAmount: storedSellAmount,\n      buyAmount: buyAmount,\n      celoStableTokenExchangeRate: celoStableTokenExchangeRate,\n      vetoPeriodSeconds: vetoPeriodSeconds,\n      approvalTimestamp: 0 // initial value when not approved yet\n    });\n    // StableToken.unitsToValue (called within getSellTokenAndSellAmount) can\n    // overflow for very large StableToken amounts. Call it here as a sanity\n    // check, so that the overflow happens here, blocking proposal creation\n    // rather than when attempting to execute the proposal, which would lock\n    // funds in this contract.\n    getSellTokenAndSellAmount(exchangeProposals[exchangeProposalCount]);\n    // Push it into the array of active proposals.\n    activeProposalIdsSuperset.push(exchangeProposalCount);\n    // Even if stable tokens are being sold, the sellAmount emitted is the \"value.\"\n    emit ExchangeProposalCreated(\n      exchangeProposalCount,\n      msg.sender,\n      stableTokenRegistryId,\n      sellAmount,\n      buyAmount,\n      sellCelo\n    );\n    return exchangeProposalCount;\n  }\n\n  /**\n   * @notice Approves an existing exchange proposal.\n   * @dev Sender must be the approver. Exchange proposal must be in the Proposed state.\n   * @param proposalId The identifier of the proposal to approve.\n   */\n  function approveExchangeProposal(uint256 proposalId) external nonReentrant onlyApprover {\n    ExchangeProposal storage proposal = exchangeProposals[proposalId];\n    // Ensure the proposal is in the Proposed state.\n    require(proposal.state == ExchangeProposalState.Proposed, \"Proposal must be in Proposed state\");\n    // Ensure the change in the current price of CELO quoted in the stable token\n    // relative to the value when the proposal was created is within the allowed limit.\n    FixidityLib.Fraction memory currentRate = getOracleExchangeRate(proposal.stableToken);\n    FixidityLib.Fraction memory proposalRate = FixidityLib.wrap(\n      proposal.celoStableTokenExchangeRate\n    );\n    (FixidityLib.Fraction memory lesserRate, FixidityLib.Fraction memory greaterRate) = currentRate\n      .lt(proposalRate)\n      ? (currentRate, proposalRate)\n      : (proposalRate, currentRate);\n    FixidityLib.Fraction memory rateChange = greaterRate.subtract(lesserRate).divide(proposalRate);\n    require(\n      rateChange.lte(maxApprovalExchangeRateChange),\n      \"CELO exchange rate is too different from the proposed price\"\n    );\n\n    // Set the time the approval occurred and change the state.\n    proposal.approvalTimestamp = block.timestamp;\n    proposal.state = ExchangeProposalState.Approved;\n    emit ExchangeProposalApproved(proposalId);\n  }\n\n  /**\n   * @notice Cancels an exchange proposal.\n   * @dev Only callable by the exchanger if the proposal is in the Proposed state\n   * or the owner if the proposal is in the Approved state.\n   * @param proposalId The identifier of the proposal to cancel.\n   */\n  function cancelExchangeProposal(uint256 proposalId) external nonReentrant {\n    ExchangeProposal storage proposal = exchangeProposals[proposalId];\n    // Require the appropriate state and sender.\n    // This will also revert if a proposalId is given that does not correspond\n    // to a previously created exchange proposal.\n    if (proposal.state == ExchangeProposalState.Proposed) {\n      require(proposal.exchanger == msg.sender, \"Sender must be exchanger\");\n    } else if (proposal.state == ExchangeProposalState.Approved) {\n      require(isOwner(), \"Sender must be owner\");\n    } else {\n      revert(\"Proposal must be in Proposed or Approved state\");\n    }\n    // Mark the proposal as cancelled. Do so prior to refunding as a measure against reentrancy.\n    proposal.state = ExchangeProposalState.Cancelled;\n    // Get the token and amount that will be refunded to the proposer.\n    (IERC20 refundToken, uint256 refundAmount) = getSellTokenAndSellAmount(proposal);\n    // Finally, transfer out the deposited funds.\n    require(\n      refundToken.transfer(proposal.exchanger, refundAmount),\n      \"Transfer out of refund token failed\"\n    );\n    emit ExchangeProposalCancelled(proposalId);\n  }\n\n  /**\n   * @notice Executes an exchange proposal that's been approved and not vetoed.\n   * @dev Callable by anyone. Reverts if the proposal is not in the Approved state\n   * or proposal.vetoPeriodSeconds has not elapsed since approval.\n   * @param proposalId The identifier of the proposal to execute.\n   */\n  function executeExchangeProposal(uint256 proposalId) external nonReentrant {\n    ExchangeProposal storage proposal = exchangeProposals[proposalId];\n    // Require that the proposal is in the Approved state.\n    require(proposal.state == ExchangeProposalState.Approved, \"Proposal must be in Approved state\");\n    // Require that the veto period has elapsed since the approval time.\n    require(\n      proposal.approvalTimestamp.add(proposal.vetoPeriodSeconds) <= block.timestamp,\n      \"Veto period not elapsed\"\n    );\n    // Mark the proposal as executed. Do so prior to exchanging as a measure against reentrancy.\n    proposal.state = ExchangeProposalState.Executed;\n    // Perform the exchange.\n    (IERC20 sellToken, uint256 sellAmount) = getSellTokenAndSellAmount(proposal);\n    // If the exchange sells CELO, the CELO is sent to the Reserve from this contract\n    // and stable token is minted to the exchanger.\n    if (proposal.sellCelo) {\n      // Send the CELO from this contract to the reserve.\n      require(\n        sellToken.transfer(address(getReserve()), sellAmount),\n        \"Transfer out of CELO to Reserve failed\"\n      );\n      // Mint stable token to the exchanger.\n      require(\n        IStableToken(proposal.stableToken).mint(proposal.exchanger, proposal.buyAmount),\n        \"Stable token mint failed\"\n      );\n    } else {\n      // If the exchange is selling stable token, the stable token is burned from\n      // this contract and CELO is transferred from the Reserve to the exchanger.\n\n      // Burn the stable token from this contract.\n      require(IStableToken(proposal.stableToken).burn(sellAmount), \"Stable token burn failed\");\n      // Transfer the CELO from the Reserve to the exchanger.\n      require(\n        getReserve().transferExchangeGold(proposal.exchanger, proposal.buyAmount),\n        \"Transfer out of CELO from Reserve failed\"\n      );\n    }\n    emit ExchangeProposalExecuted(proposalId);\n  }\n\n  /**\n   * @notice Gets the sell token and the sell amount for a proposal.\n   * @dev For stable token sell amounts that are stored as units, the value\n   * is returned. Ensures sell amount is not greater than this contract's balance.\n   * @param proposal The proposal to get the sell token and sell amount for.\n   * @return (the IERC20 sell token, the value sell amount).\n   */\n  function getSellTokenAndSellAmount(ExchangeProposal memory proposal)\n    private\n    view\n    returns (IERC20, uint256)\n  {\n    IERC20 sellToken;\n    uint256 sellAmount;\n    if (proposal.sellCelo) {\n      sellToken = getGoldToken();\n      sellAmount = proposal.sellAmount;\n    } else {\n      address stableToken = proposal.stableToken;\n      sellToken = IERC20(stableToken);\n      // When selling stableToken, the sell amount is stored in units.\n      // Units must be converted to value when refunding.\n      sellAmount = IStableToken(stableToken).unitsToValue(proposal.sellAmount);\n    }\n    // In the event a precision issue from the unit <-> value calculations results\n    // in sellAmount being greater than this contract's balance, set the sellAmount\n    // to the entire balance.\n    // This check should not be necessary for CELO, but is done so regardless\n    // for extra certainty that cancelling an exchange proposal can never fail\n    // if for some reason the CELO balance of this contract is less than the\n    // recorded sell amount.\n    uint256 totalBalance = sellToken.balanceOf(address(this));\n    if (totalBalance < sellAmount) {\n      sellAmount = totalBalance;\n    }\n    return (sellToken, sellAmount);\n  }\n\n  /**\n   * @notice Using the oracle price, charges the spread and calculates the amount of\n   * the asset being bought.\n   * @dev Stable token value amounts are used for the sellAmount, not unit amounts.\n   * Assumes both CELO and the stable token have 18 decimals.\n   * @param celoStableTokenExchangeRate The unwrapped fraction exchange rate of CELO\n   * quoted in the stable token.\n   * @param sellAmount The amount of the sell token being sold.\n   * @param sellCelo Whether CELO is being sold.\n   * @return The amount of the asset being bought.\n   */\n  function getBuyAmount(uint256 celoStableTokenExchangeRate, uint256 sellAmount, bool sellCelo)\n    public\n    view\n    returns (uint256)\n  {\n    FixidityLib.Fraction memory exchangeRate = FixidityLib.wrap(celoStableTokenExchangeRate);\n    // If stableToken is being sold, instead use the price of stableToken\n    // quoted in CELO.\n    if (!sellCelo) {\n      exchangeRate = exchangeRate.reciprocal();\n    }\n    // The sell amount taking the spread into account, ie:\n    // (1 - spread) * sellAmount\n    FixidityLib.Fraction memory adjustedSellAmount = FixidityLib.fixed1().subtract(spread).multiply(\n      FixidityLib.newFixed(sellAmount)\n    );\n    // Calculate the buy amount:\n    // exchangeRate * adjustedSellAmount\n    return exchangeRate.multiply(adjustedSellAmount).fromFixed();\n  }\n\n  /**\n   * @notice Removes the proposal ID found at the provided index of activeProposalIdsSuperset\n   * if the exchange proposal is not active.\n   * @dev Anyone can call. Reverts if the exchange proposal is active.\n   * @param index The index of the proposal ID to remove from activeProposalIdsSuperset.\n   */\n  function removeFromActiveProposalIdsSuperset(uint256 index) external {\n    require(index < activeProposalIdsSuperset.length, \"Index out of bounds\");\n    uint256 proposalId = activeProposalIdsSuperset[index];\n    // Require the exchange proposal to be inactive.\n    require(\n      exchangeProposals[proposalId].state != ExchangeProposalState.Proposed &&\n        exchangeProposals[proposalId].state != ExchangeProposalState.Approved,\n      \"Exchange proposal not inactive\"\n    );\n    // If not removing the last element, overwrite the index with the value of\n    // the last element.\n    uint256 lastIndex = activeProposalIdsSuperset.length.sub(1);\n    if (index < lastIndex) {\n      activeProposalIdsSuperset[index] = activeProposalIdsSuperset[lastIndex];\n    }\n    // Delete the last element.\n    activeProposalIdsSuperset.length--;\n  }\n\n  /**\n   * @notice Gets the proposal identifiers of exchange proposals in the\n   * Proposed or Approved state. Returns a version of activeProposalIdsSuperset\n   * with inactive proposal IDs set as 0.\n   * @dev Elements with a proposal ID of 0 should be filtered out by the consumer.\n   * @return An array of active exchange proposals IDs.\n   */\n  function getActiveProposalIds() external view returns (uint256[] memory) {\n    // Solidity doesn't play well with dynamically sized memory arrays.\n    // Instead, this array is created with the same length as activeProposalIdsSuperset,\n    // and will replace elements that are inactive proposal IDs with the value 0.\n    uint256[] memory activeProposalIds = new uint256[](activeProposalIdsSuperset.length);\n\n    for (uint256 i = 0; i < activeProposalIdsSuperset.length; i = i.add(1)) {\n      uint256 proposalId = activeProposalIdsSuperset[i];\n      if (\n        exchangeProposals[proposalId].state == ExchangeProposalState.Proposed ||\n        exchangeProposals[proposalId].state == ExchangeProposalState.Approved\n      ) {\n        activeProposalIds[i] = proposalId;\n      }\n    }\n    return activeProposalIds;\n  }\n\n  /**\n   * @notice Gets the oracle CELO price quoted in the stable token.\n   * @dev Reverts if there is not a rate for the provided stable token.\n   * @param stableToken The stable token to get the oracle price for.\n   * @return The oracle CELO price quoted in the stable token.\n   */\n  function getOracleExchangeRate(address stableToken)\n    private\n    view\n    returns (FixidityLib.Fraction memory)\n  {\n    uint256 rateNumerator;\n    uint256 rateDenominator;\n    (rateNumerator, rateDenominator) = getSortedOracles().medianRate(stableToken);\n    // When rateDenominator is 0, it means there are no rates known to SortedOracles.\n    require(rateDenominator > 0, \"No oracle rates present for token\");\n    return FixidityLib.wrap(rateNumerator).divide(FixidityLib.wrap(rateDenominator));\n  }\n\n  /**\n   * @notice Gets the minimum and maximum amount of a stable token that can be\n   * involved in a single exchange.\n   * @dev Reverts if there is no explicit exchange limit for the stable token.\n   * @param stableTokenRegistryId The string registry ID for the stable token.\n   * @return (minimum exchange amount, maximum exchange amount).\n   */\n  function getStableTokenExchangeLimits(string memory stableTokenRegistryId)\n    public\n    view\n    returns (uint256, uint256)\n  {\n    ExchangeLimits memory exchangeLimits = stableTokenExchangeLimits[stableTokenRegistryId];\n    // Require the configurable stableToken max exchange amount to be > 0.\n    // This covers the case where a stableToken has never been explicitly permitted.\n    require(\n      exchangeLimits.maxExchangeAmount > 0,\n      \"Max stable token exchange amount must be defined\"\n    );\n    return (exchangeLimits.minExchangeAmount, exchangeLimits.maxExchangeAmount);\n  }\n\n  /**\n   * @notice Sets the approver.\n   * @dev Sender must be owner. New approver is allowed to be address(0).\n   * @param newApprover The new value for the approver.\n   */\n  function setApprover(address newApprover) public onlyOwner {\n    approver = newApprover;\n    emit ApproverSet(newApprover);\n  }\n\n  /**\n   * @notice Sets the maximum allowed change in the CELO/stable token price when\n   * an exchange proposal is being approved relative to the price when the proposal\n   * was created.\n   * @dev Sender must be owner.\n   * @param newMaxApprovalExchangeRateChange The new value for maxApprovalExchangeRateChange\n   * to be wrapped.\n   */\n  function setMaxApprovalExchangeRateChange(uint256 newMaxApprovalExchangeRateChange)\n    public\n    onlyOwner\n  {\n    maxApprovalExchangeRateChange = FixidityLib.wrap(newMaxApprovalExchangeRateChange);\n    emit MaxApprovalExchangeRateChangeSet(newMaxApprovalExchangeRateChange);\n  }\n\n  /**\n   * @notice Sets the spread.\n   * @dev Sender must be owner.\n   * @param newSpread The new value for the spread to be wrapped. Must be <= fixed 1.\n   */\n  function setSpread(uint256 newSpread) public onlyOwner {\n    require(newSpread <= FixidityLib.fixed1().unwrap(), \"Spread must be smaller than 1\");\n    spread = FixidityLib.wrap(newSpread);\n    emit SpreadSet(newSpread);\n  }\n\n  /**\n   * @notice Sets the minimum and maximum amount of the stable token an exchange can involve.\n   * @dev Sender must be owner. Setting the maxExchangeAmount to 0 effectively disables new\n   * exchange proposals for the token.\n   * @param stableTokenRegistryId The registry ID string for the stable token to set limits for.\n   * @param minExchangeAmount The new minimum exchange amount for the stable token.\n   * @param maxExchangeAmount The new maximum exchange amount for the stable token.\n   */\n  function setStableTokenExchangeLimits(\n    string calldata stableTokenRegistryId,\n    uint256 minExchangeAmount,\n    uint256 maxExchangeAmount\n  ) external onlyOwner {\n    require(\n      minExchangeAmount <= maxExchangeAmount,\n      \"Min exchange amount must not be greater than max\"\n    );\n    stableTokenExchangeLimits[stableTokenRegistryId] = ExchangeLimits({\n      minExchangeAmount: minExchangeAmount,\n      maxExchangeAmount: maxExchangeAmount\n    });\n    emit StableTokenExchangeLimitsSet(stableTokenRegistryId, minExchangeAmount, maxExchangeAmount);\n  }\n\n  /**\n   * @notice Sets the veto period in seconds.\n   * @dev Sender must be owner.\n   * @param newVetoPeriodSeconds The new value for the veto period in seconds.\n   */\n  function setVetoPeriodSeconds(uint256 newVetoPeriodSeconds) public onlyOwner {\n    // Hardcode a max of 4 weeks.\n    // A minimum is not enforced for flexibility. A case of interest is if\n    // Governance were to be set as the `approver`, it would be desirable to\n    // set the veto period to 0 seconds.\n    require(newVetoPeriodSeconds <= 4 weeks, \"Veto period cannot exceed 4 weeks\");\n    vetoPeriodSeconds = newVetoPeriodSeconds;\n    emit VetoPeriodSecondsSet(newVetoPeriodSeconds);\n  }\n}\n",
  "sourcePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/GrandaMento.sol",
  "ast": {
    "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/GrandaMento.sol",
    "exportedSymbols": {
      "GrandaMento": [
        38813
      ]
    },
    "id": 38814,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 37719,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:126"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 37720,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 43830,
        "src": "26:59:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 37721,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 43948,
        "src": "86:63:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/FixidityLib.sol",
        "file": "../common/FixidityLib.sol",
        "id": 37722,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 3568,
        "src": "151:35:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/Initializable.sol",
        "file": "../common/Initializable.sol",
        "id": 37723,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 4662,
        "src": "187:37:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/UsingRegistry.sol",
        "file": "../common/UsingRegistry.sol",
        "id": 37724,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 8573,
        "src": "225:37:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/ICeloVersionedContract.sol",
        "file": "../common/interfaces/ICeloVersionedContract.sol",
        "id": 37725,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 9341,
        "src": "263:57:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/libraries/ReentrancyGuard.sol",
        "file": "../common/libraries/ReentrancyGuard.sol",
        "id": 37726,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 9719,
        "src": "321:49:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/IStableToken.sol",
        "file": "../stability/interfaces/IStableToken.sol",
        "id": 37727,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 42886,
        "src": "371:50:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37728,
              "name": "ICeloVersionedContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9340,
              "src": "523:22:126",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICeloVersionedContract_$9340",
                "typeString": "contract ICeloVersionedContract"
              }
            },
            "id": 37729,
            "nodeType": "InheritanceSpecifier",
            "src": "523:22:126"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37730,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 43947,
              "src": "549:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$43947",
                "typeString": "contract Ownable"
              }
            },
            "id": 37731,
            "nodeType": "InheritanceSpecifier",
            "src": "549:7:126"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37732,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4661,
              "src": "560:13:126",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$4661",
                "typeString": "contract Initializable"
              }
            },
            "id": 37733,
            "nodeType": "InheritanceSpecifier",
            "src": "560:13:126"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37734,
              "name": "UsingRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8572,
              "src": "577:13:126",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UsingRegistry_$8572",
                "typeString": "contract UsingRegistry"
              }
            },
            "id": 37735,
            "nodeType": "InheritanceSpecifier",
            "src": "577:13:126"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37736,
              "name": "ReentrancyGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9718,
              "src": "594:15:126",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuard_$9718",
                "typeString": "contract ReentrancyGuard"
              }
            },
            "id": 37737,
            "nodeType": "InheritanceSpecifier",
            "src": "594:15:126"
          }
        ],
        "contractDependencies": [
          4661,
          8572,
          9340,
          9718,
          43492,
          43947
        ],
        "contractKind": "contract",
        "documentation": "@title Facilitates large exchanges between CELO stable tokens.",
        "fullyImplemented": true,
        "id": 38813,
        "linearizedBaseContracts": [
          38813,
          9718,
          8572,
          4661,
          43947,
          43492,
          9340
        ],
        "name": "GrandaMento",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 37740,
            "libraryName": {
              "contractScope": null,
              "id": 37738,
              "name": "FixidityLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3567,
              "src": "620:11:126",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FixidityLib_$3567",
                "typeString": "library FixidityLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "614:43:126",
            "typeName": {
              "contractScope": null,
              "id": 37739,
              "name": "FixidityLib.Fraction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2968,
              "src": "636:20:126",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            }
          },
          {
            "id": 37743,
            "libraryName": {
              "contractScope": null,
              "id": 37741,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 43829,
              "src": "666:8:126",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$43829",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "660:27:126",
            "typeName": {
              "id": 37742,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "679:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37757,
            "name": "ExchangeProposalCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37745,
                  "indexed": true,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 37757,
                  "src": "780:26:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37747,
                  "indexed": true,
                  "name": "exchanger",
                  "nodeType": "VariableDeclaration",
                  "scope": 37757,
                  "src": "812:25:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37749,
                  "indexed": false,
                  "name": "stableTokenRegistryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 37757,
                  "src": "843:28:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37748,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:6:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37751,
                  "indexed": false,
                  "name": "sellAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37757,
                  "src": "877:18:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "877:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37753,
                  "indexed": false,
                  "name": "buyAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37757,
                  "src": "901:17:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "901:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37755,
                  "indexed": false,
                  "name": "sellCelo",
                  "nodeType": "VariableDeclaration",
                  "scope": 37757,
                  "src": "924:13:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37754,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:4:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "774:167:126"
            },
            "src": "745:197:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37761,
            "name": "ExchangeProposalApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37759,
                  "indexed": true,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 37761,
                  "src": "1045:26:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1044:28:126"
            },
            "src": "1014:59:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37765,
            "name": "ExchangeProposalCancelled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37763,
                  "indexed": true,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 37765,
                  "src": "1162:26:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1162:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1161:28:126"
            },
            "src": "1130:60:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37769,
            "name": "ExchangeProposalExecuted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37767,
                  "indexed": true,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 37769,
                  "src": "1277:26:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1276:28:126"
            },
            "src": "1246:59:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37773,
            "name": "ApproverSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37771,
                  "indexed": false,
                  "name": "approver",
                  "nodeType": "VariableDeclaration",
                  "scope": 37773,
                  "src": "1366:16:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1365:18:126"
            },
            "src": "1348:36:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37777,
            "name": "MaxApprovalExchangeRateChangeSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37775,
                  "indexed": false,
                  "name": "maxApprovalExchangeRateChange",
                  "nodeType": "VariableDeclaration",
                  "scope": 37777,
                  "src": "1483:37:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1482:39:126"
            },
            "src": "1444:78:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37781,
            "name": "SpreadSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37779,
                  "indexed": false,
                  "name": "spread",
                  "nodeType": "VariableDeclaration",
                  "scope": 37781,
                  "src": "1579:14:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1578:16:126"
            },
            "src": "1563:32:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37785,
            "name": "VetoPeriodSecondsSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37783,
                  "indexed": false,
                  "name": "vetoPeriodSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 37785,
                  "src": "1679:25:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1678:27:126"
            },
            "src": "1652:54:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37793,
            "name": "StableTokenExchangeLimitsSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37787,
                  "indexed": false,
                  "name": "stableTokenRegistryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 37793,
                  "src": "1816:28:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37786,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1816:6:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37789,
                  "indexed": false,
                  "name": "minExchangeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37793,
                  "src": "1850:25:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37791,
                  "indexed": false,
                  "name": "maxExchangeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37793,
                  "src": "1881:25:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1810:100:126"
            },
            "src": "1776:135:126"
          },
          {
            "canonicalName": "GrandaMento.ExchangeProposalState",
            "id": 37799,
            "members": [
              {
                "id": 37794,
                "name": "None",
                "nodeType": "EnumValue",
                "src": "1944:4:126"
              },
              {
                "id": 37795,
                "name": "Proposed",
                "nodeType": "EnumValue",
                "src": "1950:8:126"
              },
              {
                "id": 37796,
                "name": "Approved",
                "nodeType": "EnumValue",
                "src": "1960:8:126"
              },
              {
                "id": 37797,
                "name": "Executed",
                "nodeType": "EnumValue",
                "src": "1970:8:126"
              },
              {
                "id": 37798,
                "name": "Cancelled",
                "nodeType": "EnumValue",
                "src": "1980:9:126"
              }
            ],
            "name": "ExchangeProposalState",
            "nodeType": "EnumDefinition",
            "src": "1915:76:126"
          },
          {
            "canonicalName": "GrandaMento.ExchangeLimits",
            "id": 37804,
            "members": [
              {
                "constant": false,
                "id": 37801,
                "name": "minExchangeAmount",
                "nodeType": "VariableDeclaration",
                "scope": 37804,
                "src": "2105:25:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37800,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2105:7:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37803,
                "name": "maxExchangeAmount",
                "nodeType": "VariableDeclaration",
                "scope": 37804,
                "src": "2218:25:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37802,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2218:7:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ExchangeLimits",
            "nodeType": "StructDefinition",
            "scope": 38813,
            "src": "1995:253:126",
            "visibility": "public"
          },
          {
            "canonicalName": "GrandaMento.ExchangeProposal",
            "id": 37823,
            "members": [
              {
                "constant": false,
                "id": 37806,
                "name": "exchanger",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "2338:25:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 37805,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2338:15:126",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37808,
                "name": "stableToken",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "2626:19:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 37807,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2626:7:126",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37810,
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "2694:27:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                  "typeString": "enum GrandaMento.ExchangeProposalState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 37809,
                  "name": "ExchangeProposalState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 37799,
                  "src": "2694:21:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                    "typeString": "enum GrandaMento.ExchangeProposalState"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37812,
                "name": "sellCelo",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "2796:13:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 37811,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2796:4:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37814,
                "name": "sellAmount",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "3445:18:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37813,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3445:7:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37816,
                "name": "buyAmount",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "3591:17:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37815,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3591:7:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37818,
                "name": "celoStableTokenExchangeRate",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "4077:35:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37817,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4077:7:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37820,
                "name": "vetoPeriodSeconds",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "4385:25:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37819,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4385:7:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37822,
                "name": "approvalTimestamp",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "4579:25:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37821,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4579:7:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ExchangeProposal",
            "nodeType": "StructDefinition",
            "scope": 38813,
            "src": "2252:2357:126",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37825,
            "name": "approver",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "4680:23:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 37824,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4680:7:126",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37827,
            "name": "maxApprovalExchangeRateChange",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "4881:57:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Fraction_$2968_storage",
              "typeString": "struct FixidityLib.Fraction"
            },
            "typeName": {
              "contractScope": null,
              "id": 37826,
              "name": "FixidityLib.Fraction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2968,
              "src": "4881:20:126",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37829,
            "name": "spread",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "5000:34:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Fraction_$2968_storage",
              "typeString": "struct FixidityLib.Fraction"
            },
            "typeName": {
              "contractScope": null,
              "id": 37828,
              "name": "FixidityLib.Fraction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2968,
              "src": "5000:20:126",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37831,
            "name": "vetoPeriodSeconds",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "5133:32:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37830,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5133:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37835,
            "name": "stableTokenExchangeLimits",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "5338:66:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_ExchangeLimits_$37804_storage_$",
              "typeString": "mapping(string => struct GrandaMento.ExchangeLimits)"
            },
            "typeName": {
              "id": 37834,
              "keyType": {
                "id": 37832,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5346:6:126",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "5338:33:126",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_ExchangeLimits_$37804_storage_$",
                "typeString": "mapping(string => struct GrandaMento.ExchangeLimits)"
              },
              "valueType": {
                "contractScope": null,
                "id": 37833,
                "name": "ExchangeLimits",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 37804,
                "src": "5356:14:126",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ExchangeLimits_$37804_storage_ptr",
                  "typeString": "struct GrandaMento.ExchangeLimits"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37839,
            "name": "exchangeProposals",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "5485:61:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
              "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal)"
            },
            "typeName": {
              "id": 37838,
              "keyType": {
                "id": 37836,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5493:7:126",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "5485:36:126",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal)"
              },
              "valueType": {
                "contractScope": null,
                "id": 37837,
                "name": "ExchangeProposal",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 37823,
                "src": "5504:16:126",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                  "typeString": "struct GrandaMento.ExchangeProposal"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37842,
            "name": "activeProposalIdsSuperset",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "6455:42:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 37840,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6455:7:126",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 37841,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "6455:9:126",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37844,
            "name": "exchangeProposalCount",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "6632:36:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37843,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6632:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37855,
              "nodeType": "Block",
              "src": "6765:76:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 37847,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45085,
                            "src": "6779:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 37848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6779:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 37849,
                          "name": "approver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37825,
                          "src": "6793:8:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6779:22:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e646572206d75737420626520617070726f766572",
                        "id": 37851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6803:25:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8fd6d9e84a913c2056cc57d9de71bf548ba2a0ceb02699a44b3a7d52aa725b72",
                          "typeString": "literal_string \"Sender must be approver\""
                        },
                        "value": "Sender must be approver"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8fd6d9e84a913c2056cc57d9de71bf548ba2a0ceb02699a44b3a7d52aa725b72",
                          "typeString": "literal_string \"Sender must be approver\""
                        }
                      ],
                      "id": 37846,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "6771:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6771:58:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37853,
                  "nodeType": "ExpressionStatement",
                  "src": "6771:58:126"
                },
                {
                  "id": 37854,
                  "nodeType": "PlaceholderStatement",
                  "src": "6835:1:126"
                }
              ]
            },
            "documentation": "@notice Reverts if the sender is not the approver.",
            "id": 37856,
            "name": "onlyApprover",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 37845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6762:2:126"
            },
            "src": "6741:100:126",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 37864,
              "nodeType": "Block",
              "src": "7042:2:126",
              "statements": []
            },
            "documentation": "@notice Sets initialized == true on implementation contracts.\n@param test Set to true to skip implementation initialization.",
            "id": 37865,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 37861,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37858,
                    "src": "7036:4:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 37862,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37860,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4661,
                  "src": "7022:13:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$4661_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7022:19:126"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37858,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 37865,
                  "src": "7004:9:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37857,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7004:4:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7003:11:126"
            },
            "returnParameters": {
              "id": 37863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7042:0:126"
            },
            "scope": 38813,
            "src": "6992:52:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37882,
              "nodeType": "Block",
              "src": "7305:30:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 37876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7319:1:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 37877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7322:1:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 37878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7325:1:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 37879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7328:1:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 37880,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7318:12:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 1,int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 37875,
                  "id": 37881,
                  "nodeType": "Return",
                  "src": "7311:19:126"
                }
              ]
            },
            "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return The storage, major, minor, and patch version of the contract.",
            "id": 37883,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7243:2:126"
            },
            "returnParameters": {
              "id": 37875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37868,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37883,
                  "src": "7269:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7269:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37870,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37883,
                  "src": "7278:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7278:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37872,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37883,
                  "src": "7287:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7287:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37874,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37883,
                  "src": "7296:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7296:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7268:36:126"
            },
            "scope": 38813,
            "src": "7218:117:126",
            "stateMutability": "pure",
            "superFunction": 9339,
            "visibility": "external"
          },
          {
            "body": {
              "id": 37923,
              "nodeType": "Block",
              "src": "8042:237:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 37899,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45085,
                          "src": "8067:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8067:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 37898,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43946,
                      "src": "8048:18:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 37901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8048:30:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37902,
                  "nodeType": "ExpressionStatement",
                  "src": "8048:30:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37904,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37885,
                        "src": "8096:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37903,
                      "name": "setRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8389,
                      "src": "8084:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 37905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8084:22:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37906,
                  "nodeType": "ExpressionStatement",
                  "src": "8084:22:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37908,
                        "name": "_approver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37887,
                        "src": "8124:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37907,
                      "name": "setApprover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38706,
                      "src": "8112:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 37909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8112:22:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37910,
                  "nodeType": "ExpressionStatement",
                  "src": "8112:22:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37912,
                        "name": "_maxApprovalExchangeRateChange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37889,
                        "src": "8173:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37911,
                      "name": "setMaxApprovalExchangeRateChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38725,
                      "src": "8140:32:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 37913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8140:64:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37914,
                  "nodeType": "ExpressionStatement",
                  "src": "8140:64:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37916,
                        "name": "_spread",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37891,
                        "src": "8220:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37915,
                      "name": "setSpread",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38755,
                      "src": "8210:9:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 37917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8210:18:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37918,
                  "nodeType": "ExpressionStatement",
                  "src": "8210:18:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37920,
                        "name": "_vetoPeriodSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37893,
                        "src": "8255:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37919,
                      "name": "setVetoPeriodSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38812,
                      "src": "8234:20:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 37921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8234:40:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37922,
                  "nodeType": "ExpressionStatement",
                  "src": "8234:40:126"
                }
              ]
            },
            "documentation": "@notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n@param _registry The address of the registry.\n@param _approver The approver that has the ability to approve exchange proposals.\n@param _maxApprovalExchangeRateChange The maximum allowed change in CELO price\nbetween an exchange proposal's creation and approval.\n@param _spread The spread charged on exchanges.\n@param _vetoPeriodSeconds The length of the veto period in seconds.",
            "id": 37924,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 37896,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37895,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4660,
                  "src": "8030:11:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8030:11:126"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37885,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 37924,
                  "src": "7879:17:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7879:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37887,
                  "name": "_approver",
                  "nodeType": "VariableDeclaration",
                  "scope": 37924,
                  "src": "7902:17:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7902:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37889,
                  "name": "_maxApprovalExchangeRateChange",
                  "nodeType": "VariableDeclaration",
                  "scope": 37924,
                  "src": "7925:38:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37888,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7925:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37891,
                  "name": "_spread",
                  "nodeType": "VariableDeclaration",
                  "scope": 37924,
                  "src": "7969:15:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7969:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37893,
                  "name": "_vetoPeriodSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 37924,
                  "src": "7990:26:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7990:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7873:147:126"
            },
            "returnParameters": {
              "id": 37897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8042:0:126"
            },
            "scope": 38813,
            "src": "7854:425:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38071,
              "nodeType": "Block",
              "src": "8922:3160:126",
              "statements": [
                {
                  "assignments": [
                    37938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37938,
                      "name": "stableToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 38071,
                      "src": "8928:19:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37937,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8928:7:126",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 37943,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37941,
                        "name": "stableTokenRegistryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37926,
                        "src": "8984:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 37939,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8328,
                        "src": "8950:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRegistry_$9514",
                          "typeString": "contract IRegistry"
                        }
                      },
                      "id": 37940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAddressForStringOrDie",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9496,
                      "src": "8950:33:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 37942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8950:56:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8928:78:126"
                },
                {
                  "assignments": [
                    37945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37945,
                      "name": "celoStableTokenExchangeRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 38071,
                      "src": "9066:35:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37944,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9066:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 37951,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 37947,
                            "name": "stableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37938,
                            "src": "9126:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 37946,
                          "name": "getOracleExchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38660,
                          "src": "9104:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (address) view returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 37948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9104:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 37949,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unwrap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3012,
                      "src": "9104:41:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                      }
                    },
                    "id": 37950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9104:43:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9066:81:126"
                },
                {
                  "assignments": [
                    37953
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37953,
                      "name": "buyAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 38071,
                      "src": "9284:17:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37952,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9284:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 37959,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37955,
                        "name": "celoStableTokenExchangeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37945,
                        "src": "9317:27:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37956,
                        "name": "sellAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37928,
                        "src": "9346:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37957,
                        "name": "sellCelo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37930,
                        "src": "9358:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37954,
                      "name": "getBuyAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38487,
                      "src": "9304:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,bool) view returns (uint256)"
                      }
                    },
                    "id": 37958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9304:63:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9284:83:126"
                },
                {
                  "id": 37986,
                  "nodeType": "Block",
                  "src": "9433:722:126",
                  "statements": [
                    {
                      "assignments": [
                        37961,
                        37963
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 37961,
                          "name": "minExchangeAmount",
                          "nodeType": "VariableDeclaration",
                          "scope": 37986,
                          "src": "9630:25:126",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 37960,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9630:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 37963,
                          "name": "maxExchangeAmount",
                          "nodeType": "VariableDeclaration",
                          "scope": 37986,
                          "src": "9657:25:126",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 37962,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9657:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 37967,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 37965,
                            "name": "stableTokenRegistryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37926,
                            "src": "9724:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 37964,
                          "name": "getStableTokenExchangeLimits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38690,
                          "src": "9686:28:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                            "typeString": "function (string memory) view returns (uint256,uint256)"
                          }
                        },
                        "id": 37966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9686:67:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "9629:124:126"
                    },
                    {
                      "assignments": [
                        37969
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 37969,
                          "name": "stableTokenExchangeAmount",
                          "nodeType": "VariableDeclaration",
                          "scope": 37986,
                          "src": "9882:33:126",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 37968,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9882:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 37974,
                      "initialValue": {
                        "argumentTypes": null,
                        "condition": {
                          "argumentTypes": null,
                          "id": 37970,
                          "name": "sellCelo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37930,
                          "src": "9918:8:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "argumentTypes": null,
                          "id": 37972,
                          "name": "sellAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37928,
                          "src": "9941:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 37973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "9918:33:126",
                        "trueExpression": {
                          "argumentTypes": null,
                          "id": 37971,
                          "name": "buyAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37953,
                          "src": "9929:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "9882:69:126"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 37982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 37978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 37976,
                                "name": "stableTokenExchangeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37969,
                                "src": "9976:25:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 37977,
                                "name": "maxExchangeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37963,
                                "src": "10005:17:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9976:46:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 37981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 37979,
                                "name": "stableTokenExchangeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37969,
                                "src": "10036:25:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 37980,
                                "name": "minExchangeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37961,
                                "src": "10065:17:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10036:46:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "9976:106:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "537461626c6520746f6b656e2065786368616e676520616d6f756e74206e6f742077697468696e206c696d697473",
                            "id": 37983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10092:48:126",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_abff683270a5c9e3636b2bef3a56099622c6c5e2bed3532270ab1542fc51361e",
                              "typeString": "literal_string \"Stable token exchange amount not within limits\""
                            },
                            "value": "Stable token exchange amount not within limits"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_abff683270a5c9e3636b2bef3a56099622c6c5e2bed3532270ab1542fc51361e",
                              "typeString": "literal_string \"Stable token exchange amount not within limits\""
                            }
                          ],
                          "id": 37975,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            45088,
                            45089
                          ],
                          "referencedDeclaration": 45089,
                          "src": "9959:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 37984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9959:189:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 37985,
                      "nodeType": "ExpressionStatement",
                      "src": "9959:189:126"
                    }
                  ]
                },
                {
                  "assignments": [
                    37988
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37988,
                      "name": "sellToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 38071,
                      "src": "10199:16:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44421",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 37987,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 44421,
                        "src": "10199:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44421",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 37996,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "id": 37989,
                      "name": "sellCelo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37930,
                      "src": "10218:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 37993,
                          "name": "stableToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37938,
                          "src": "10253:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 37992,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44421,
                        "src": "10246:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$44421_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 37994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10246:19:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44421",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 37995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "10218:47:126",
                    "trueExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 37990,
                        "name": "getGoldToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8480,
                        "src": "10229:12:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$44421_$",
                          "typeString": "function () view returns (contract IERC20)"
                        }
                      },
                      "id": 37991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10229:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44421",
                        "typeString": "contract IERC20"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$44421",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10199:66:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 38000,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45085,
                              "src": "10309:3:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 38001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10309:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 38003,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45381,
                                "src": "10329:4:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GrandaMento_$38813",
                                  "typeString": "contract GrandaMento"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GrandaMento_$38813",
                                  "typeString": "contract GrandaMento"
                                }
                              ],
                              "id": 38002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10321:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 38004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10321:13:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 38005,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37928,
                            "src": "10336:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 37998,
                            "name": "sellToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37988,
                            "src": "10286:9:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$44421",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 37999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44404,
                          "src": "10286:22:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 38006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10286:61:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e7366657220696e206f662073656c6c20746f6b656e206661696c6564",
                        "id": 38007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10355:34:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c3d3acf05ce3453d7e66bf75f2aa176fc296c2d3dc774cde7eabf241efe8438",
                          "typeString": "literal_string \"Transfer in of sell token failed\""
                        },
                        "value": "Transfer in of sell token failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c3d3acf05ce3453d7e66bf75f2aa176fc296c2d3dc774cde7eabf241efe8438",
                          "typeString": "literal_string \"Transfer in of sell token failed\""
                        }
                      ],
                      "id": 37997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "10271:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10271:124:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38009,
                  "nodeType": "ExpressionStatement",
                  "src": "10271:124:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38010,
                      "name": "exchangeProposalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37844,
                      "src": "10575:21:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 38013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10625:1:126",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 38011,
                          "name": "exchangeProposalCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37844,
                          "src": "10599:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43669,
                        "src": "10599:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 38014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10599:28:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10575:52:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38016,
                  "nodeType": "ExpressionStatement",
                  "src": "10575:52:126"
                },
                {
                  "assignments": [
                    38018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38018,
                      "name": "storedSellAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 38071,
                      "src": "10713:24:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38017,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10713:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38028,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "id": 38019,
                      "name": "sellCelo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37930,
                      "src": "10740:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 38025,
                          "name": "sellAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37928,
                          "src": "10815:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 38022,
                              "name": "stableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37938,
                              "src": "10789:11:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 38021,
                            "name": "IStableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42885,
                            "src": "10776:12:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IStableToken_$42885_$",
                              "typeString": "type(contract IStableToken)"
                            }
                          },
                          "id": 38023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10776:25:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStableToken_$42885",
                            "typeString": "contract IStableToken"
                          }
                        },
                        "id": 38024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valueToUnits",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42859,
                        "src": "10776:38:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256)"
                        }
                      },
                      "id": 38026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10776:50:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "10740:86:126",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 38020,
                      "name": "sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37928,
                      "src": "10757:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10713:113:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 38029,
                        "name": "exchangeProposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37839,
                        "src": "10832:17:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                          "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                        }
                      },
                      "id": 38031,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 38030,
                        "name": "exchangeProposalCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37844,
                        "src": "10850:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10832:40:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                        "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38033,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45085,
                            "src": "10911:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 38034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10911:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38035,
                          "name": "stableToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37938,
                          "src": "10942:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38036,
                            "name": "ExchangeProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37799,
                            "src": "10968:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                              "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                            }
                          },
                          "id": 38037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Proposed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10968:30:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38038,
                          "name": "sellCelo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37930,
                          "src": "11016:8:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38039,
                          "name": "storedSellAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38018,
                          "src": "11044:16:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38040,
                          "name": "buyAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37953,
                          "src": "11079:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38041,
                          "name": "celoStableTokenExchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37945,
                          "src": "11125:27:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38042,
                          "name": "vetoPeriodSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37831,
                          "src": "11179:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 38043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11223:1:126",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 38032,
                        "name": "ExchangeProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37823,
                        "src": "10875:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ExchangeProposal_$37823_storage_ptr_$",
                          "typeString": "type(struct GrandaMento.ExchangeProposal storage pointer)"
                        }
                      },
                      "id": 38044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "exchanger",
                        "stableToken",
                        "state",
                        "sellCelo",
                        "sellAmount",
                        "buyAmount",
                        "celoStableTokenExchangeRate",
                        "vetoPeriodSeconds",
                        "approvalTimestamp"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "10875:395:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$37823_memory",
                        "typeString": "struct GrandaMento.ExchangeProposal memory"
                      }
                    },
                    "src": "10832:438:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                      "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                    }
                  },
                  "id": 38046,
                  "nodeType": "ExpressionStatement",
                  "src": "10832:438:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 38048,
                          "name": "exchangeProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37839,
                          "src": "11641:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                            "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                          }
                        },
                        "id": 38050,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 38049,
                          "name": "exchangeProposalCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37844,
                          "src": "11659:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11641:40:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                          "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                          "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                        }
                      ],
                      "id": 38047,
                      "name": "getSellTokenAndSellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38432,
                      "src": "11615:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ExchangeProposal_$37823_memory_ptr_$returns$_t_contract$_IERC20_$44421_$_t_uint256_$",
                        "typeString": "function (struct GrandaMento.ExchangeProposal memory) view returns (contract IERC20,uint256)"
                      }
                    },
                    "id": 38051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11615:67:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$44421_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20,uint256)"
                    }
                  },
                  "id": 38052,
                  "nodeType": "ExpressionStatement",
                  "src": "11615:67:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38056,
                        "name": "exchangeProposalCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37844,
                        "src": "11770:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 38053,
                        "name": "activeProposalIdsSuperset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37842,
                        "src": "11739:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 38055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11739:30:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 38057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11739:53:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38058,
                  "nodeType": "ExpressionStatement",
                  "src": "11739:53:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38060,
                        "name": "exchangeProposalCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37844,
                        "src": "11918:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38061,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45085,
                          "src": "11947:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 38062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11947:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38063,
                        "name": "stableTokenRegistryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37926,
                        "src": "11965:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38064,
                        "name": "sellAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37928,
                        "src": "11994:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38065,
                        "name": "buyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37953,
                        "src": "12012:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38066,
                        "name": "sellCelo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37930,
                        "src": "12029:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 38059,
                      "name": "ExchangeProposalCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37757,
                      "src": "11887:23:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,address,string memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 38067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11887:156:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38068,
                  "nodeType": "EmitStatement",
                  "src": "11882:161:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38069,
                    "name": "exchangeProposalCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37844,
                    "src": "12056:21:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37936,
                  "id": 38070,
                  "nodeType": "Return",
                  "src": "12049:28:126"
                }
              ]
            },
            "documentation": "@notice Creates a new exchange proposal and deposits the tokens being sold.\n@dev Stable token value amounts are used for the sellAmount, not unit amounts.\n@param stableTokenRegistryId The string registry ID for the stable token\ninvolved in the exchange.\n@param sellAmount The amount of the sell token being sold.\n@param sellCelo Whether CELO is being sold.\n@return The proposal identifier for the newly created exchange proposal.",
            "id": 38072,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 37933,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37932,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9717,
                  "src": "8891:12:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8891:12:126"
              }
            ],
            "name": "createExchangeProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37926,
                  "name": "stableTokenRegistryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 38072,
                  "src": "8797:37:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37925,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8797:6:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37928,
                  "name": "sellAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 38072,
                  "src": "8840:18:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8840:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37930,
                  "name": "sellCelo",
                  "nodeType": "VariableDeclaration",
                  "scope": 38072,
                  "src": "8864:13:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37929,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8864:4:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8791:90:126"
            },
            "returnParameters": {
              "id": 37936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37935,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38072,
                  "src": "8913:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8913:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8912:9:126"
            },
            "scope": 38813,
            "src": "8760:3322:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38171,
              "nodeType": "Block",
              "src": "12393:1258:126",
              "statements": [
                {
                  "assignments": [
                    38082
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38082,
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 38171,
                      "src": "12399:33:126",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                        "typeString": "struct GrandaMento.ExchangeProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38081,
                        "name": "ExchangeProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 37823,
                        "src": "12399:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38086,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 38083,
                      "name": "exchangeProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37839,
                      "src": "12435:17:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                        "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                      }
                    },
                    "id": 38085,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 38084,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38074,
                      "src": "12453:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12435:29:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                      "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12399:65:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                          "typeString": "enum GrandaMento.ExchangeProposalState"
                        },
                        "id": 38092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38088,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38082,
                            "src": "12531:8:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                              "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                            }
                          },
                          "id": 38089,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37810,
                          "src": "12531:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38090,
                            "name": "ExchangeProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37799,
                            "src": "12549:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                              "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                            }
                          },
                          "id": 38091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Proposed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12549:30:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          }
                        },
                        "src": "12531:48:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f706f73616c206d75737420626520696e2050726f706f736564207374617465",
                        "id": 38093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12581:36:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f07d250355247691ebfa293273b531c2088ec330ce34593573f341f0d9db861",
                          "typeString": "literal_string \"Proposal must be in Proposed state\""
                        },
                        "value": "Proposal must be in Proposed state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f07d250355247691ebfa293273b531c2088ec330ce34593573f341f0d9db861",
                          "typeString": "literal_string \"Proposal must be in Proposed state\""
                        }
                      ],
                      "id": 38087,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "12523:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12523:95:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38095,
                  "nodeType": "ExpressionStatement",
                  "src": "12523:95:126"
                },
                {
                  "assignments": [
                    38099
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38099,
                      "name": "currentRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 38171,
                      "src": "12793:39:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38098,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2968,
                        "src": "12793:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38104,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38101,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38082,
                          "src": "12857:8:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                            "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                          }
                        },
                        "id": 38102,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stableToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37808,
                        "src": "12857:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38100,
                      "name": "getOracleExchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38660,
                      "src": "12835:21:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (address) view returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 38103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12835:43:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12793:85:126"
                },
                {
                  "assignments": [
                    38108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38108,
                      "name": "proposalRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 38171,
                      "src": "12884:40:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38107,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2968,
                        "src": "12884:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38114,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38111,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38082,
                          "src": "12951:8:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                            "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                          }
                        },
                        "id": 38112,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "celoStableTokenExchangeRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37818,
                        "src": "12951:36:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 38109,
                        "name": "FixidityLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3567,
                        "src": "12927:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                          "typeString": "type(library FixidityLib)"
                        }
                      },
                      "id": 38110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3001,
                      "src": "12927:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 38113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12927:66:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12884:109:126"
                },
                {
                  "assignments": [
                    38118,
                    38120
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38118,
                      "name": "lesserRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 38171,
                      "src": "13000:38:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38117,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2968,
                        "src": "13000:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38120,
                      "name": "greaterRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 38171,
                      "src": "13040:39:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38119,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2968,
                        "src": "13040:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38132,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 38123,
                          "name": "proposalRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38108,
                          "src": "13105:12:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 38121,
                          "name": "currentRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38099,
                          "src": "13083:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        "id": 38122,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3520,
                        "src": "13083:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                          "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                        }
                      },
                      "id": 38124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13083:35:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 38128,
                          "name": "proposalRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38108,
                          "src": "13164:12:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38129,
                          "name": "currentRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38099,
                          "src": "13178:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        }
                      ],
                      "id": 38130,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13163:27:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "tuple(struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 38131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "13083:107:126",
                    "trueExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 38125,
                          "name": "currentRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38099,
                          "src": "13128:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38126,
                          "name": "proposalRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38108,
                          "src": "13141:12:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        }
                      ],
                      "id": 38127,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13127:27:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "tuple(struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$",
                      "typeString": "tuple(struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12999:191:126"
                },
                {
                  "assignments": [
                    38136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38136,
                      "name": "rateChange",
                      "nodeType": "VariableDeclaration",
                      "scope": 38171,
                      "src": "13196:38:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38135,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2968,
                        "src": "13196:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38144,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38142,
                        "name": "proposalRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38108,
                        "src": "13277:12:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38139,
                            "name": "lesserRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38118,
                            "src": "13258:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38137,
                            "name": "greaterRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38120,
                            "src": "13237:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 38138,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "subtract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3186,
                          "src": "13237:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_struct$_Fraction_$2968_memory_ptr_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 38140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13237:32:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 38141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "divide",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3472,
                      "src": "13237:39:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_struct$_Fraction_$2968_memory_ptr_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 38143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13237:53:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13196:94:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38148,
                            "name": "maxApprovalExchangeRateChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37827,
                            "src": "13326:29:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38146,
                            "name": "rateChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38136,
                            "src": "13311:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 38147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lte",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3536,
                          "src": "13311:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                          }
                        },
                        "id": 38149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13311:45:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43454c4f2065786368616e6765207261746520697320746f6f20646966666572656e742066726f6d207468652070726f706f736564207072696365",
                        "id": 38150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13364:61:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0ac17e3919bdf22a49d2ef31bd4c38ec015be0b3ae601abd9de4a352dbf757b",
                          "typeString": "literal_string \"CELO exchange rate is too different from the proposed price\""
                        },
                        "value": "CELO exchange rate is too different from the proposed price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0ac17e3919bdf22a49d2ef31bd4c38ec015be0b3ae601abd9de4a352dbf757b",
                          "typeString": "literal_string \"CELO exchange rate is too different from the proposed price\""
                        }
                      ],
                      "id": 38145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "13296:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13296:135:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38152,
                  "nodeType": "ExpressionStatement",
                  "src": "13296:135:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38153,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38082,
                        "src": "13502:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      },
                      "id": 38155,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "approvalTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37822,
                      "src": "13502:26:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38156,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45075,
                        "src": "13531:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 38157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13531:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13502:44:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38159,
                  "nodeType": "ExpressionStatement",
                  "src": "13502:44:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38160,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38082,
                        "src": "13552:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      },
                      "id": 38162,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37810,
                      "src": "13552:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38163,
                        "name": "ExchangeProposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37799,
                        "src": "13569:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                          "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                        }
                      },
                      "id": 38164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Approved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13569:30:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "src": "13552:47:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                      "typeString": "enum GrandaMento.ExchangeProposalState"
                    }
                  },
                  "id": 38166,
                  "nodeType": "ExpressionStatement",
                  "src": "13552:47:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38168,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38074,
                        "src": "13635:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38167,
                      "name": "ExchangeProposalApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37761,
                      "src": "13610:24:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13610:36:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38170,
                  "nodeType": "EmitStatement",
                  "src": "13605:41:126"
                }
              ]
            },
            "documentation": "@notice Approves an existing exchange proposal.\n@dev Sender must be the approver. Exchange proposal must be in the Proposed state.\n@param proposalId The identifier of the proposal to approve.",
            "id": 38172,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38077,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38076,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9717,
                  "src": "12367:12:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12367:12:126"
              },
              {
                "arguments": null,
                "id": 38079,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38078,
                  "name": "onlyApprover",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 37856,
                  "src": "12380:12:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12380:12:126"
              }
            ],
            "name": "approveExchangeProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38074,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 38172,
                  "src": "12338:18:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38073,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12338:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12337:20:126"
            },
            "returnParameters": {
              "id": 38080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12393:0:126"
            },
            "scope": 38813,
            "src": "12305:1346:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38248,
              "nodeType": "Block",
              "src": "13991:1123:126",
              "statements": [
                {
                  "assignments": [
                    38180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38180,
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 38248,
                      "src": "13997:33:126",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                        "typeString": "struct GrandaMento.ExchangeProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38179,
                        "name": "ExchangeProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 37823,
                        "src": "13997:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38184,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 38181,
                      "name": "exchangeProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37839,
                      "src": "14033:17:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                        "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                      }
                    },
                    "id": 38183,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 38182,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38174,
                      "src": "14051:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14033:29:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                      "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13997:65:126"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                      "typeString": "enum GrandaMento.ExchangeProposalState"
                    },
                    "id": 38189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38185,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38180,
                        "src": "14250:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      },
                      "id": 38186,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37810,
                      "src": "14250:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38187,
                        "name": "ExchangeProposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37799,
                        "src": "14268:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                          "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                        }
                      },
                      "id": 38188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Proposed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14268:30:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "src": "14250:48:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      },
                      "id": 38204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38200,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38180,
                          "src": "14394:8:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                            "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                          }
                        },
                        "id": 38201,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37810,
                        "src": "14394:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                          "typeString": "enum GrandaMento.ExchangeProposalState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38202,
                          "name": "ExchangeProposalState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37799,
                          "src": "14412:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                            "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                          }
                        },
                        "id": 38203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Approved",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "14412:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                          "typeString": "enum GrandaMento.ExchangeProposalState"
                        }
                      },
                      "src": "14394:48:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 38216,
                      "nodeType": "Block",
                      "src": "14507:71:126",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "50726f706f73616c206d75737420626520696e2050726f706f736564206f7220417070726f766564207374617465",
                                "id": 38213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14522:48:126",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_91d3ace944acdf7d687a846eb2b5661f450ab871065be0f62adfff3bbd59ffb4",
                                  "typeString": "literal_string \"Proposal must be in Proposed or Approved state\""
                                },
                                "value": "Proposal must be in Proposed or Approved state"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_91d3ace944acdf7d687a846eb2b5661f450ab871065be0f62adfff3bbd59ffb4",
                                  "typeString": "literal_string \"Proposal must be in Proposed or Approved state\""
                                }
                              ],
                              "id": 38212,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                45090,
                                45091
                              ],
                              "referencedDeclaration": 45091,
                              "src": "14515:6:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 38214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14515:56:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 38215,
                          "nodeType": "ExpressionStatement",
                          "src": "14515:56:126"
                        }
                      ]
                    },
                    "id": 38217,
                    "nodeType": "IfStatement",
                    "src": "14390:188:126",
                    "trueBody": {
                      "id": 38211,
                      "nodeType": "Block",
                      "src": "14444:57:126",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 38206,
                                  "name": "isOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43891,
                                  "src": "14460:7:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 38207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14460:9:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "53656e646572206d757374206265206f776e6572",
                                "id": 38208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14471:22:126",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_404c2168553dbdc824a22b8a75a593b364cc920eebfd6e09e56793693e59f693",
                                  "typeString": "literal_string \"Sender must be owner\""
                                },
                                "value": "Sender must be owner"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_404c2168553dbdc824a22b8a75a593b364cc920eebfd6e09e56793693e59f693",
                                  "typeString": "literal_string \"Sender must be owner\""
                                }
                              ],
                              "id": 38205,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                45088,
                                45089
                              ],
                              "referencedDeclaration": 45089,
                              "src": "14452:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 38209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14452:42:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 38210,
                          "nodeType": "ExpressionStatement",
                          "src": "14452:42:126"
                        }
                      ]
                    }
                  },
                  "id": 38218,
                  "nodeType": "IfStatement",
                  "src": "14246:332:126",
                  "trueBody": {
                    "id": 38199,
                    "nodeType": "Block",
                    "src": "14300:84:126",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "id": 38195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 38191,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38180,
                                  "src": "14316:8:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                    "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                  }
                                },
                                "id": 38192,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "exchanger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 37806,
                                "src": "14316:18:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 38193,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45085,
                                  "src": "14338:3:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 38194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "14338:10:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "14316:32:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e646572206d7573742062652065786368616e676572",
                              "id": 38196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14350:26:126",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d0878d974f3ca893a13f341842199f45ffc8b0363faa926f8cac59e4e0ccf82",
                                "typeString": "literal_string \"Sender must be exchanger\""
                              },
                              "value": "Sender must be exchanger"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d0878d974f3ca893a13f341842199f45ffc8b0363faa926f8cac59e4e0ccf82",
                                "typeString": "literal_string \"Sender must be exchanger\""
                              }
                            ],
                            "id": 38190,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              45088,
                              45089
                            ],
                            "referencedDeclaration": 45089,
                            "src": "14308:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 38197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14308:69:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38198,
                        "nodeType": "ExpressionStatement",
                        "src": "14308:69:126"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38219,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38180,
                        "src": "14680:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      },
                      "id": 38221,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37810,
                      "src": "14680:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38222,
                        "name": "ExchangeProposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37799,
                        "src": "14697:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                          "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                        }
                      },
                      "id": 38223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14697:31:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "src": "14680:48:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                      "typeString": "enum GrandaMento.ExchangeProposalState"
                    }
                  },
                  "id": 38225,
                  "nodeType": "ExpressionStatement",
                  "src": "14680:48:126"
                },
                {
                  "assignments": [
                    38227,
                    38229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38227,
                      "name": "refundToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 38248,
                      "src": "14806:18:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44421",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38226,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 44421,
                        "src": "14806:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44421",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38229,
                      "name": "refundAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 38248,
                      "src": "14826:20:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38228,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14826:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38233,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38231,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38180,
                        "src": "14876:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      ],
                      "id": 38230,
                      "name": "getSellTokenAndSellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38432,
                      "src": "14850:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ExchangeProposal_$37823_memory_ptr_$returns$_t_contract$_IERC20_$44421_$_t_uint256_$",
                        "typeString": "function (struct GrandaMento.ExchangeProposal memory) view returns (contract IERC20,uint256)"
                      }
                    },
                    "id": 38232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14850:35:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$44421_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14805:80:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 38237,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38180,
                              "src": "14977:8:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                              }
                            },
                            "id": 38238,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchanger",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37806,
                            "src": "14977:18:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 38239,
                            "name": "refundAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38229,
                            "src": "14997:12:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38235,
                            "name": "refundToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38227,
                            "src": "14956:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$44421",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 38236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44375,
                          "src": "14956:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 38240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14956:54:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e73666572206f7574206f6620726566756e6420746f6b656e206661696c6564",
                        "id": 38241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15018:37:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9a882f5283dfc7ded7f8414ccb91e66df6245ba57228b30beb7da35984b0f40",
                          "typeString": "literal_string \"Transfer out of refund token failed\""
                        },
                        "value": "Transfer out of refund token failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9a882f5283dfc7ded7f8414ccb91e66df6245ba57228b30beb7da35984b0f40",
                          "typeString": "literal_string \"Transfer out of refund token failed\""
                        }
                      ],
                      "id": 38234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "14941:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14941:120:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38243,
                  "nodeType": "ExpressionStatement",
                  "src": "14941:120:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38245,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38174,
                        "src": "15098:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38244,
                      "name": "ExchangeProposalCancelled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37765,
                      "src": "15072:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15072:37:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38247,
                  "nodeType": "EmitStatement",
                  "src": "15067:42:126"
                }
              ]
            },
            "documentation": "@notice Cancels an exchange proposal.\n@dev Only callable by the exchanger if the proposal is in the Proposed state\nor the owner if the proposal is in the Approved state.\n@param proposalId The identifier of the proposal to cancel.",
            "id": 38249,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38177,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38176,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9717,
                  "src": "13978:12:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13978:12:126"
              }
            ],
            "name": "cancelExchangeProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38174,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 38249,
                  "src": "13949:18:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13949:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13948:20:126"
            },
            "returnParameters": {
              "id": 38178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13991:0:126"
            },
            "scope": 38813,
            "src": "13917:1197:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38357,
              "nodeType": "Block",
              "src": "15501:1859:126",
              "statements": [
                {
                  "assignments": [
                    38257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38257,
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 38357,
                      "src": "15507:33:126",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                        "typeString": "struct GrandaMento.ExchangeProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38256,
                        "name": "ExchangeProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 37823,
                        "src": "15507:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38261,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 38258,
                      "name": "exchangeProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37839,
                      "src": "15543:17:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                        "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                      }
                    },
                    "id": 38260,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 38259,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38251,
                      "src": "15561:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15543:29:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                      "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15507:65:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                          "typeString": "enum GrandaMento.ExchangeProposalState"
                        },
                        "id": 38267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38263,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38257,
                            "src": "15645:8:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                              "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                            }
                          },
                          "id": 38264,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37810,
                          "src": "15645:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38265,
                            "name": "ExchangeProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37799,
                            "src": "15663:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                              "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                            }
                          },
                          "id": 38266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Approved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "15663:30:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          }
                        },
                        "src": "15645:48:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f706f73616c206d75737420626520696e20417070726f766564207374617465",
                        "id": 38268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15695:36:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6492cca35e68d90b1c479734012d7c4759c952cfee1ac9ddb401bb3fff651638",
                          "typeString": "literal_string \"Proposal must be in Approved state\""
                        },
                        "value": "Proposal must be in Approved state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6492cca35e68d90b1c479734012d7c4759c952cfee1ac9ddb401bb3fff651638",
                          "typeString": "literal_string \"Proposal must be in Approved state\""
                        }
                      ],
                      "id": 38262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "15637:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15637:95:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38270,
                  "nodeType": "ExpressionStatement",
                  "src": "15637:95:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 38275,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38257,
                                "src": "15857:8:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                  "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                }
                              },
                              "id": 38276,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vetoPeriodSeconds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37820,
                              "src": "15857:26:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 38272,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38257,
                                "src": "15826:8:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                  "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                }
                              },
                              "id": 38273,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approvalTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37822,
                              "src": "15826:26:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 38274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43669,
                            "src": "15826:30:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 38277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15826:58:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38278,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45075,
                            "src": "15888:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 38279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "15888:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15826:77:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5665746f20706572696f64206e6f7420656c6170736564",
                        "id": 38281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15911:25:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9adb9325f97705d5387db63be73967a449629e33d2c0e1b56671067dfa3d14f",
                          "typeString": "literal_string \"Veto period not elapsed\""
                        },
                        "value": "Veto period not elapsed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9adb9325f97705d5387db63be73967a449629e33d2c0e1b56671067dfa3d14f",
                          "typeString": "literal_string \"Veto period not elapsed\""
                        }
                      ],
                      "id": 38271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "15811:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15811:131:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38283,
                  "nodeType": "ExpressionStatement",
                  "src": "15811:131:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38284,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38257,
                        "src": "16045:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      },
                      "id": 38286,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37810,
                      "src": "16045:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38287,
                        "name": "ExchangeProposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37799,
                        "src": "16062:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                          "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                        }
                      },
                      "id": 38288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Executed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "16062:30:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "src": "16045:47:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                      "typeString": "enum GrandaMento.ExchangeProposalState"
                    }
                  },
                  "id": 38290,
                  "nodeType": "ExpressionStatement",
                  "src": "16045:47:126"
                },
                {
                  "assignments": [
                    38292,
                    38294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38292,
                      "name": "sellToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 38357,
                      "src": "16128:16:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44421",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38291,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 44421,
                        "src": "16128:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44421",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38294,
                      "name": "sellAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 38357,
                      "src": "16146:18:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38293,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16146:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38298,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38296,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38257,
                        "src": "16194:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      ],
                      "id": 38295,
                      "name": "getSellTokenAndSellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38432,
                      "src": "16168:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ExchangeProposal_$37823_memory_ptr_$returns$_t_contract$_IERC20_$44421_$_t_uint256_$",
                        "typeString": "function (struct GrandaMento.ExchangeProposal memory) view returns (contract IERC20,uint256)"
                      }
                    },
                    "id": 38297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16168:35:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$44421_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16127:76:126"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 38299,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38257,
                      "src": "16351:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                        "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                      }
                    },
                    "id": 38300,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sellCelo",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37812,
                    "src": "16351:17:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 38351,
                    "nodeType": "Block",
                    "src": "16770:539:126",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 38334,
                                  "name": "sellAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38294,
                                  "src": "17042:10:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 38330,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38257,
                                        "src": "17015:8:126",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                        }
                                      },
                                      "id": 38331,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "stableToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 37808,
                                      "src": "17015:20:126",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 38329,
                                    "name": "IStableToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42885,
                                    "src": "17002:12:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IStableToken_$42885_$",
                                      "typeString": "type(contract IStableToken)"
                                    }
                                  },
                                  "id": 38332,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17002:34:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStableToken_$42885",
                                    "typeString": "contract IStableToken"
                                  }
                                },
                                "id": 38333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "burn",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 42845,
                                "src": "17002:39:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) external returns (bool)"
                                }
                              },
                              "id": 38335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17002:51:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "537461626c6520746f6b656e206275726e206661696c6564",
                              "id": 38336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17055:26:126",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_efec162428556da2b45d085c1a911c7ef180d0382abc4781aed63a8187c50108",
                                "typeString": "literal_string \"Stable token burn failed\""
                              },
                              "value": "Stable token burn failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_efec162428556da2b45d085c1a911c7ef180d0382abc4781aed63a8187c50108",
                                "typeString": "literal_string \"Stable token burn failed\""
                              }
                            ],
                            "id": 38328,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              45088,
                              45089
                            ],
                            "referencedDeclaration": 45089,
                            "src": "16994:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 38337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16994:88:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38338,
                        "nodeType": "ExpressionStatement",
                        "src": "16994:88:126"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 38343,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38257,
                                    "src": "17203:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                      "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                    }
                                  },
                                  "id": 38344,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "exchanger",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37806,
                                  "src": "17203:18:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 38345,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38257,
                                    "src": "17223:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                      "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                    }
                                  },
                                  "id": 38346,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37816,
                                  "src": "17223:18:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 38340,
                                    "name": "getReserve",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8532,
                                    "src": "17169:10:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IReserve_$42751_$",
                                      "typeString": "function () view returns (contract IReserve)"
                                    }
                                  },
                                  "id": 38341,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17169:12:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IReserve_$42751",
                                    "typeString": "contract IReserve"
                                  }
                                },
                                "id": 38342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferExchangeGold",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 42700,
                                "src": "17169:33:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address payable,uint256) external returns (bool)"
                                }
                              },
                              "id": 38347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17169:73:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5472616e73666572206f7574206f662043454c4f2066726f6d2052657365727665206661696c6564",
                              "id": 38348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17252:42:126",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b3166ce0190dbb91e92210474c455f5511f5a0a878da93f4f966137efc12b895",
                                "typeString": "literal_string \"Transfer out of CELO from Reserve failed\""
                              },
                              "value": "Transfer out of CELO from Reserve failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b3166ce0190dbb91e92210474c455f5511f5a0a878da93f4f966137efc12b895",
                                "typeString": "literal_string \"Transfer out of CELO from Reserve failed\""
                              }
                            ],
                            "id": 38339,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              45088,
                              45089
                            ],
                            "referencedDeclaration": 45089,
                            "src": "17152:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 38349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17152:150:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38350,
                        "nodeType": "ExpressionStatement",
                        "src": "17152:150:126"
                      }
                    ]
                  },
                  "id": 38352,
                  "nodeType": "IfStatement",
                  "src": "16347:962:126",
                  "trueBody": {
                    "id": 38327,
                    "nodeType": "Block",
                    "src": "16370:394:126",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 38305,
                                        "name": "getReserve",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 8532,
                                        "src": "16480:10:126",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IReserve_$42751_$",
                                          "typeString": "function () view returns (contract IReserve)"
                                        }
                                      },
                                      "id": 38306,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16480:12:126",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IReserve_$42751",
                                        "typeString": "contract IReserve"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IReserve_$42751",
                                        "typeString": "contract IReserve"
                                      }
                                    ],
                                    "id": 38304,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "16472:7:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 38307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16472:21:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 38308,
                                  "name": "sellAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38294,
                                  "src": "16495:10:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 38302,
                                  "name": "sellToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38292,
                                  "src": "16453:9:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$44421",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 38303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44375,
                                "src": "16453:18:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 38309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16453:53:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5472616e73666572206f7574206f662043454c4f20746f2052657365727665206661696c6564",
                              "id": 38310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16516:40:126",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6fc922853d1b52a948a9059e822d355fcf8ace00967171f83e0cd00d5de8b72b",
                                "typeString": "literal_string \"Transfer out of CELO to Reserve failed\""
                              },
                              "value": "Transfer out of CELO to Reserve failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6fc922853d1b52a948a9059e822d355fcf8ace00967171f83e0cd00d5de8b72b",
                                "typeString": "literal_string \"Transfer out of CELO to Reserve failed\""
                              }
                            ],
                            "id": 38301,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              45088,
                              45089
                            ],
                            "referencedDeclaration": 45089,
                            "src": "16436:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 38311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16436:128:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38312,
                        "nodeType": "ExpressionStatement",
                        "src": "16436:128:126"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 38319,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38257,
                                    "src": "16674:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                      "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                    }
                                  },
                                  "id": 38320,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "exchanger",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37806,
                                  "src": "16674:18:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 38321,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38257,
                                    "src": "16694:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                      "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                    }
                                  },
                                  "id": 38322,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37816,
                                  "src": "16694:18:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 38315,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38257,
                                        "src": "16647:8:126",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                        }
                                      },
                                      "id": 38316,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "stableToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 37808,
                                      "src": "16647:20:126",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 38314,
                                    "name": "IStableToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42885,
                                    "src": "16634:12:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IStableToken_$42885_$",
                                      "typeString": "type(contract IStableToken)"
                                    }
                                  },
                                  "id": 38317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16634:34:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStableToken_$42885",
                                    "typeString": "contract IStableToken"
                                  }
                                },
                                "id": 38318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 42838,
                                "src": "16634:39:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 38323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16634:79:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "537461626c6520746f6b656e206d696e74206661696c6564",
                              "id": 38324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16723:26:126",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5e1b1f0876e7b6c87ca8770e27a0603b7f7c4f2716d8c02c9fb21d8065e1d99",
                                "typeString": "literal_string \"Stable token mint failed\""
                              },
                              "value": "Stable token mint failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5e1b1f0876e7b6c87ca8770e27a0603b7f7c4f2716d8c02c9fb21d8065e1d99",
                                "typeString": "literal_string \"Stable token mint failed\""
                              }
                            ],
                            "id": 38313,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              45088,
                              45089
                            ],
                            "referencedDeclaration": 45089,
                            "src": "16617:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 38325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16617:140:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38326,
                        "nodeType": "ExpressionStatement",
                        "src": "16617:140:126"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38354,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38251,
                        "src": "17344:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38353,
                      "name": "ExchangeProposalExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37769,
                      "src": "17319:24:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17319:36:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38356,
                  "nodeType": "EmitStatement",
                  "src": "17314:41:126"
                }
              ]
            },
            "documentation": "@notice Executes an exchange proposal that's been approved and not vetoed.\n@dev Callable by anyone. Reverts if the proposal is not in the Approved state\nor proposal.vetoPeriodSeconds has not elapsed since approval.\n@param proposalId The identifier of the proposal to execute.",
            "id": 38358,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38254,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38253,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9717,
                  "src": "15488:12:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "15488:12:126"
              }
            ],
            "name": "executeExchangeProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38251,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 38358,
                  "src": "15459:18:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15459:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15458:20:126"
            },
            "returnParameters": {
              "id": 38255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15501:0:126"
            },
            "scope": 38813,
            "src": "15426:1934:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38431,
              "nodeType": "Block",
              "src": "17864:1106:126",
              "statements": [
                {
                  "assignments": [
                    38368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38368,
                      "name": "sellToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 38431,
                      "src": "17870:16:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44421",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38367,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 44421,
                        "src": "17870:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44421",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38369,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17870:16:126"
                },
                {
                  "assignments": [
                    38371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38371,
                      "name": "sellAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 38431,
                      "src": "17892:18:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38370,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17892:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38372,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17892:18:126"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 38373,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38360,
                      "src": "17920:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$37823_memory_ptr",
                        "typeString": "struct GrandaMento.ExchangeProposal memory"
                      }
                    },
                    "id": 38374,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sellCelo",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37812,
                    "src": "17920:17:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 38407,
                    "nodeType": "Block",
                    "src": "18026:305:126",
                    "statements": [
                      {
                        "assignments": [
                          38387
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 38387,
                            "name": "stableToken",
                            "nodeType": "VariableDeclaration",
                            "scope": 38407,
                            "src": "18034:19:126",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 38386,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18034:7:126",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 38390,
                        "initialValue": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38388,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38360,
                            "src": "18056:8:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExchangeProposal_$37823_memory_ptr",
                              "typeString": "struct GrandaMento.ExchangeProposal memory"
                            }
                          },
                          "id": 38389,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stableToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37808,
                          "src": "18056:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18034:42:126"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 38395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 38391,
                            "name": "sellToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38368,
                            "src": "18084:9:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$44421",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 38393,
                                "name": "stableToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38387,
                                "src": "18103:11:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 38392,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44421,
                              "src": "18096:6:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$44421_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 38394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18096:19:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$44421",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "18084:31:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$44421",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 38396,
                        "nodeType": "ExpressionStatement",
                        "src": "18084:31:126"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 38405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 38397,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38371,
                            "src": "18252:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 38402,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38360,
                                  "src": "18304:8:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ExchangeProposal_$37823_memory_ptr",
                                    "typeString": "struct GrandaMento.ExchangeProposal memory"
                                  }
                                },
                                "id": 38403,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sellAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 37814,
                                "src": "18304:19:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 38399,
                                    "name": "stableToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38387,
                                    "src": "18278:11:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 38398,
                                  "name": "IStableToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42885,
                                  "src": "18265:12:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IStableToken_$42885_$",
                                    "typeString": "type(contract IStableToken)"
                                  }
                                },
                                "id": 38400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18265:25:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStableToken_$42885",
                                  "typeString": "contract IStableToken"
                                }
                              },
                              "id": 38401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "unitsToValue",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42866,
                              "src": "18265:38:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view external returns (uint256)"
                              }
                            },
                            "id": 38404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18265:59:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18252:72:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38406,
                        "nodeType": "ExpressionStatement",
                        "src": "18252:72:126"
                      }
                    ]
                  },
                  "id": 38408,
                  "nodeType": "IfStatement",
                  "src": "17916:415:126",
                  "trueBody": {
                    "id": 38385,
                    "nodeType": "Block",
                    "src": "17939:81:126",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 38378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 38375,
                            "name": "sellToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38368,
                            "src": "17947:9:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$44421",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 38376,
                              "name": "getGoldToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8480,
                              "src": "17959:12:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$44421_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 38377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17959:14:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$44421",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "17947:26:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$44421",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 38379,
                        "nodeType": "ExpressionStatement",
                        "src": "17947:26:126"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 38383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 38380,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38371,
                            "src": "17981:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 38381,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38360,
                              "src": "17994:8:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExchangeProposal_$37823_memory_ptr",
                                "typeString": "struct GrandaMento.ExchangeProposal memory"
                              }
                            },
                            "id": 38382,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sellAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37814,
                            "src": "17994:19:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17981:32:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38384,
                        "nodeType": "ExpressionStatement",
                        "src": "17981:32:126"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    38410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38410,
                      "name": "totalBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 38431,
                      "src": "18796:20:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38409,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18796:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38417,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38414,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45381,
                            "src": "18847:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GrandaMento_$38813",
                              "typeString": "contract GrandaMento"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GrandaMento_$38813",
                              "typeString": "contract GrandaMento"
                            }
                          ],
                          "id": 38413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18839:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 38415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18839:13:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 38411,
                        "name": "sellToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38368,
                        "src": "18819:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44421",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 38412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44366,
                      "src": "18819:19:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 38416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18819:34:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18796:57:126"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 38418,
                      "name": "totalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38410,
                      "src": "18863:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 38419,
                      "name": "sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38371,
                      "src": "18878:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18863:25:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 38426,
                  "nodeType": "IfStatement",
                  "src": "18859:71:126",
                  "trueBody": {
                    "id": 38425,
                    "nodeType": "Block",
                    "src": "18890:40:126",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 38423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 38421,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38371,
                            "src": "18898:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 38422,
                            "name": "totalBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38410,
                            "src": "18911:12:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18898:25:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38424,
                        "nodeType": "ExpressionStatement",
                        "src": "18898:25:126"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 38427,
                        "name": "sellToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38368,
                        "src": "18943:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44421",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38428,
                        "name": "sellAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38371,
                        "src": "18954:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 38429,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "18942:23:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$44421_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20,uint256)"
                    }
                  },
                  "functionReturnParameters": 38366,
                  "id": 38430,
                  "nodeType": "Return",
                  "src": "18935:30:126"
                }
              ]
            },
            "documentation": "@notice Gets the sell token and the sell amount for a proposal.\n@dev For stable token sell amounts that are stored as units, the value\nis returned. Ensures sell amount is not greater than this contract's balance.\n@param proposal The proposal to get the sell token and sell amount for.\n@return (the IERC20 sell token, the value sell amount).",
            "id": 38432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSellTokenAndSellAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38360,
                  "name": "proposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 38432,
                  "src": "17777:32:126",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExchangeProposal_$37823_memory_ptr",
                    "typeString": "struct GrandaMento.ExchangeProposal"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 38359,
                    "name": "ExchangeProposal",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 37823,
                    "src": "17777:16:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                      "typeString": "struct GrandaMento.ExchangeProposal"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17776:34:126"
            },
            "returnParameters": {
              "id": 38366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38363,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38432,
                  "src": "17845:6:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$44421",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 38362,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 44421,
                    "src": "17845:6:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$44421",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38365,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38432,
                  "src": "17853:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17853:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17844:17:126"
            },
            "scope": 38813,
            "src": "17742:1228:126",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 38486,
              "nodeType": "Block",
              "src": "19666:650:126",
              "statements": [
                {
                  "assignments": [
                    38446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38446,
                      "name": "exchangeRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 38486,
                      "src": "19672:40:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38445,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2968,
                        "src": "19672:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38451,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38449,
                        "name": "celoStableTokenExchangeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38434,
                        "src": "19732:27:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 38447,
                        "name": "FixidityLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3567,
                        "src": "19715:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                          "typeString": "type(library FixidityLib)"
                        }
                      },
                      "id": 38448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3001,
                      "src": "19715:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 38450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19715:45:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19672:88:126"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 38453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "19867:9:126",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 38452,
                      "name": "sellCelo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38438,
                      "src": "19868:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 38461,
                  "nodeType": "IfStatement",
                  "src": "19863:70:126",
                  "trueBody": {
                    "id": 38460,
                    "nodeType": "Block",
                    "src": "19878:55:126",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 38458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 38454,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38446,
                            "src": "19886:12:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 38455,
                                "name": "exchangeRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38446,
                                "src": "19901:12:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                                  "typeString": "struct FixidityLib.Fraction memory"
                                }
                              },
                              "id": 38456,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "reciprocal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3430,
                              "src": "19901:23:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_struct$_Fraction_$2968_memory_ptr_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                                "typeString": "function (struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 38457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19901:25:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "src": "19886:40:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        "id": 38459,
                        "nodeType": "ExpressionStatement",
                        "src": "19886:40:126"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    38465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38465,
                      "name": "adjustedSellAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 38486,
                      "src": "20030:46:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38464,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2968,
                        "src": "20030:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38478,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38475,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38436,
                            "src": "20154:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38473,
                            "name": "FixidityLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3567,
                            "src": "20133:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                              "typeString": "type(library FixidityLib)"
                            }
                          },
                          "id": 38474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "newFixed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3050,
                          "src": "20133:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 38476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20133:32:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38470,
                            "name": "spread",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37829,
                            "src": "20109:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 38466,
                                "name": "FixidityLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3567,
                                "src": "20079:11:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                                  "typeString": "type(library FixidityLib)"
                                }
                              },
                              "id": 38467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fixed1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2989,
                              "src": "20079:18:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                                "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 38468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20079:20:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 38469,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "subtract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3186,
                          "src": "20079:29:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_struct$_Fraction_$2968_memory_ptr_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 38471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20079:37:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 38472,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multiply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3404,
                      "src": "20079:46:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_struct$_Fraction_$2968_memory_ptr_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 38477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20079:92:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20030:141:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38481,
                            "name": "adjustedSellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38465,
                            "src": "20280:18:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38479,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38446,
                            "src": "20258:12:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 38480,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "multiply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3404,
                          "src": "20258:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_struct$_Fraction_$2968_memory_ptr_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 38482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20258:41:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 38483,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromFixed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3063,
                      "src": "20258:51:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                      }
                    },
                    "id": 38484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20258:53:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 38442,
                  "id": 38485,
                  "nodeType": "Return",
                  "src": "20251:60:126"
                }
              ]
            },
            "documentation": "@notice Using the oracle price, charges the spread and calculates the amount of\nthe asset being bought.\n@dev Stable token value amounts are used for the sellAmount, not unit amounts.\nAssumes both CELO and the stable token have 18 decimals.\n@param celoStableTokenExchangeRate The unwrapped fraction exchange rate of CELO\nquoted in the stable token.\n@param sellAmount The amount of the sell token being sold.\n@param sellCelo Whether CELO is being sold.\n@return The amount of the asset being bought.",
            "id": 38487,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBuyAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38434,
                  "name": "celoStableTokenExchangeRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 38487,
                  "src": "19550:35:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19550:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38436,
                  "name": "sellAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 38487,
                  "src": "19587:18:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19587:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38438,
                  "name": "sellCelo",
                  "nodeType": "VariableDeclaration",
                  "scope": 38487,
                  "src": "19607:13:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 38437,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19607:4:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19549:72:126"
            },
            "returnParameters": {
              "id": 38442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38441,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38487,
                  "src": "19655:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19655:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19654:9:126"
            },
            "scope": 38813,
            "src": "19528:788:126",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38551,
              "nodeType": "Block",
              "src": "20700:767:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 38493,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38489,
                          "src": "20714:5:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38494,
                            "name": "activeProposalIdsSuperset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37842,
                            "src": "20722:25:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 38495,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "20722:32:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20714:40:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e646578206f7574206f6620626f756e6473",
                        "id": 38497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20756:21:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                          "typeString": "literal_string \"Index out of bounds\""
                        },
                        "value": "Index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                          "typeString": "literal_string \"Index out of bounds\""
                        }
                      ],
                      "id": 38492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "20706:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20706:72:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38499,
                  "nodeType": "ExpressionStatement",
                  "src": "20706:72:126"
                },
                {
                  "assignments": [
                    38501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38501,
                      "name": "proposalId",
                      "nodeType": "VariableDeclaration",
                      "scope": 38551,
                      "src": "20784:18:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38500,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20784:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38505,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 38502,
                      "name": "activeProposalIdsSuperset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37842,
                      "src": "20805:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 38504,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 38503,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38489,
                      "src": "20831:5:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "20805:32:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20784:53:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 38521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          },
                          "id": 38513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 38507,
                                "name": "exchangeProposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37839,
                                "src": "20911:17:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                                  "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                                }
                              },
                              "id": 38509,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 38508,
                                "name": "proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38501,
                                "src": "20929:10:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20911:29:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                                "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                              }
                            },
                            "id": 38510,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37810,
                            "src": "20911:35:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 38511,
                              "name": "ExchangeProposalState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37799,
                              "src": "20950:21:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                                "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                              }
                            },
                            "id": 38512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Proposed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "20950:30:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            }
                          },
                          "src": "20911:69:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          },
                          "id": 38520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 38514,
                                "name": "exchangeProposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37839,
                                "src": "20992:17:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                                  "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                                }
                              },
                              "id": 38516,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 38515,
                                "name": "proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38501,
                                "src": "21010:10:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20992:29:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                                "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                              }
                            },
                            "id": 38517,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37810,
                            "src": "20992:35:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 38518,
                              "name": "ExchangeProposalState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37799,
                              "src": "21031:21:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                                "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                              }
                            },
                            "id": 38519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Approved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "21031:30:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            }
                          },
                          "src": "20992:69:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "20911:150:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45786368616e67652070726f706f73616c206e6f7420696e616374697665",
                        "id": 38522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21069:32:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56c29c7b37ffda0688125b531f5db03c5503cc91e651368e4740314f6992c046",
                          "typeString": "literal_string \"Exchange proposal not inactive\""
                        },
                        "value": "Exchange proposal not inactive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56c29c7b37ffda0688125b531f5db03c5503cc91e651368e4740314f6992c046",
                          "typeString": "literal_string \"Exchange proposal not inactive\""
                        }
                      ],
                      "id": 38506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "20896:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20896:211:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38524,
                  "nodeType": "ExpressionStatement",
                  "src": "20896:211:126"
                },
                {
                  "assignments": [
                    38526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38526,
                      "name": "lastIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 38551,
                      "src": "21217:17:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38525,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21217:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38532,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 38530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21274:1:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38527,
                          "name": "activeProposalIdsSuperset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37842,
                          "src": "21237:25:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 38528,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "21237:32:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 38529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43685,
                      "src": "21237:36:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 38531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21237:39:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21217:59:126"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 38533,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38489,
                      "src": "21286:5:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 38534,
                      "name": "lastIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38526,
                      "src": "21294:9:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21286:17:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 38545,
                  "nodeType": "IfStatement",
                  "src": "21282:109:126",
                  "trueBody": {
                    "id": 38544,
                    "nodeType": "Block",
                    "src": "21305:86:126",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 38542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 38536,
                              "name": "activeProposalIdsSuperset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37842,
                              "src": "21313:25:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 38538,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 38537,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38489,
                              "src": "21339:5:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "21313:32:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 38539,
                              "name": "activeProposalIdsSuperset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37842,
                              "src": "21348:25:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 38541,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 38540,
                              "name": "lastIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38526,
                              "src": "21374:9:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21348:36:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21313:71:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38543,
                        "nodeType": "ExpressionStatement",
                        "src": "21313:71:126"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "21428:34:126",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38546,
                        "name": "activeProposalIdsSuperset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37842,
                        "src": "21428:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 38548,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "21428:32:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38550,
                  "nodeType": "ExpressionStatement",
                  "src": "21428:34:126"
                }
              ]
            },
            "documentation": "@notice Removes the proposal ID found at the provided index of activeProposalIdsSuperset\nif the exchange proposal is not active.\n@dev Anyone can call. Reverts if the exchange proposal is active.\n@param index The index of the proposal ID to remove from activeProposalIdsSuperset.",
            "id": 38552,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeFromActiveProposalIdsSuperset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38489,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 38552,
                  "src": "20676:13:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20676:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20675:15:126"
            },
            "returnParameters": {
              "id": 38491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20700:0:126"
            },
            "scope": 38813,
            "src": "20631:836:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38617,
              "nodeType": "Block",
              "src": "21889:741:126",
              "statements": [
                {
                  "assignments": [
                    38561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38561,
                      "name": "activeProposalIds",
                      "nodeType": "VariableDeclaration",
                      "scope": 38617,
                      "src": "22138:34:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38559,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22138:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38560,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "22138:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38568,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38565,
                          "name": "activeProposalIdsSuperset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37842,
                          "src": "22189:25:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 38566,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "22189:32:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "22175:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38562,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22179:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38563,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "22179:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 38567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22175:47:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22138:84:126"
                },
                {
                  "body": {
                    "id": 38613,
                    "nodeType": "Block",
                    "src": "22301:295:126",
                    "statements": [
                      {
                        "assignments": [
                          38585
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 38585,
                            "name": "proposalId",
                            "nodeType": "VariableDeclaration",
                            "scope": 38613,
                            "src": "22309:18:126",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 38584,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22309:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 38589,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 38586,
                            "name": "activeProposalIdsSuperset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37842,
                            "src": "22330:25:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 38588,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 38587,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38570,
                            "src": "22356:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22330:28:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22309:49:126"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 38604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            },
                            "id": 38596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 38590,
                                  "name": "exchangeProposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37839,
                                  "src": "22379:17:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                                    "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                                  }
                                },
                                "id": 38592,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 38591,
                                  "name": "proposalId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38585,
                                  "src": "22397:10:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22379:29:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                                  "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                                }
                              },
                              "id": 38593,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "state",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37810,
                              "src": "22379:35:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                                "typeString": "enum GrandaMento.ExchangeProposalState"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 38594,
                                "name": "ExchangeProposalState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37799,
                                "src": "22418:21:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                                  "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                                }
                              },
                              "id": 38595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Proposed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "22418:30:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                                "typeString": "enum GrandaMento.ExchangeProposalState"
                              }
                            },
                            "src": "22379:69:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            },
                            "id": 38603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 38597,
                                  "name": "exchangeProposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37839,
                                  "src": "22460:17:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                                    "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                                  }
                                },
                                "id": 38599,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 38598,
                                  "name": "proposalId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38585,
                                  "src": "22478:10:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22460:29:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                                  "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                                }
                              },
                              "id": 38600,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "state",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37810,
                              "src": "22460:35:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                                "typeString": "enum GrandaMento.ExchangeProposalState"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 38601,
                                "name": "ExchangeProposalState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37799,
                                "src": "22499:21:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                                  "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                                }
                              },
                              "id": 38602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Approved",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "22499:30:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                                "typeString": "enum GrandaMento.ExchangeProposalState"
                              }
                            },
                            "src": "22460:69:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "22379:150:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 38612,
                        "nodeType": "IfStatement",
                        "src": "22366:224:126",
                        "trueBody": {
                          "id": 38611,
                          "nodeType": "Block",
                          "src": "22538:52:126",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 38609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 38605,
                                    "name": "activeProposalIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38561,
                                    "src": "22548:17:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 38607,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 38606,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38570,
                                    "src": "22566:1:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "22548:20:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 38608,
                                  "name": "proposalId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38585,
                                  "src": "22571:10:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22548:33:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 38610,
                              "nodeType": "ExpressionStatement",
                              "src": "22548:33:126"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 38573,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38570,
                      "src": "22249:1:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38574,
                        "name": "activeProposalIdsSuperset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37842,
                        "src": "22253:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 38575,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "22253:32:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22249:36:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38614,
                  "initializationExpression": {
                    "assignments": [
                      38570
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 38570,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 38614,
                        "src": "22234:9:126",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 38569,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22234:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 38572,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 38571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22246:1:126",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "22234:13:126"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 38582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 38577,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38570,
                        "src": "22287:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 38580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22297:1:126",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38578,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38570,
                            "src": "22291:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 38579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43669,
                          "src": "22291:5:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 38581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22291:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "22287:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38583,
                    "nodeType": "ExpressionStatement",
                    "src": "22287:12:126"
                  },
                  "nodeType": "ForStatement",
                  "src": "22229:367:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38615,
                    "name": "activeProposalIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38561,
                    "src": "22608:17:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 38557,
                  "id": 38616,
                  "nodeType": "Return",
                  "src": "22601:24:126"
                }
              ]
            },
            "documentation": "@notice Gets the proposal identifiers of exchange proposals in the\nProposed or Approved state. Returns a version of activeProposalIdsSuperset\nwith inactive proposal IDs set as 0.\n@dev Elements with a proposal ID of 0 should be filtered out by the consumer.\n@return An array of active exchange proposals IDs.",
            "id": 38618,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveProposalIds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21845:2:126"
            },
            "returnParameters": {
              "id": 38557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38556,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38618,
                  "src": "21871:16:126",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 38554,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21871:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38555,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "21871:9:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21870:18:126"
            },
            "scope": 38813,
            "src": "21816:814:126",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38659,
              "nodeType": "Block",
              "src": "23036:387:126",
              "statements": [
                {
                  "assignments": [
                    38626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38626,
                      "name": "rateNumerator",
                      "nodeType": "VariableDeclaration",
                      "scope": 38659,
                      "src": "23042:21:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38625,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23042:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38627,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23042:21:126"
                },
                {
                  "assignments": [
                    38629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38629,
                      "name": "rateDenominator",
                      "nodeType": "VariableDeclaration",
                      "scope": 38659,
                      "src": "23069:23:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38628,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23069:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38630,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23069:23:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 38631,
                          "name": "rateNumerator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38626,
                          "src": "23099:13:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38632,
                          "name": "rateDenominator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38629,
                          "src": "23114:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 38633,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "23098:32:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 38637,
                          "name": "stableToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38620,
                          "src": "23163:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38634,
                            "name": "getSortedOracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8545,
                            "src": "23133:16:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ISortedOracles_$42827_$",
                              "typeString": "function () view returns (contract ISortedOracles)"
                            }
                          },
                          "id": 38635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23133:18:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISortedOracles_$42827",
                            "typeString": "contract ISortedOracles"
                          }
                        },
                        "id": 38636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "medianRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42812,
                        "src": "23133:29:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 38638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23133:42:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "23098:77:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38640,
                  "nodeType": "ExpressionStatement",
                  "src": "23098:77:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 38642,
                          "name": "rateDenominator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38629,
                          "src": "23275:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 38643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23293:1:126",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "23275:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f206f7261636c652072617465732070726573656e7420666f7220746f6b656e",
                        "id": 38645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23296:35:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7367d7d56c5f8cec11d2f702a1fadc61ae1a809eeeb3a70092f20e50e401cf7",
                          "typeString": "literal_string \"No oracle rates present for token\""
                        },
                        "value": "No oracle rates present for token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7367d7d56c5f8cec11d2f702a1fadc61ae1a809eeeb3a70092f20e50e401cf7",
                          "typeString": "literal_string \"No oracle rates present for token\""
                        }
                      ],
                      "id": 38641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "23267:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23267:65:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38647,
                  "nodeType": "ExpressionStatement",
                  "src": "23267:65:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38655,
                            "name": "rateDenominator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38629,
                            "src": "23401:15:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38653,
                            "name": "FixidityLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3567,
                            "src": "23384:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                              "typeString": "type(library FixidityLib)"
                            }
                          },
                          "id": 38654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wrap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3001,
                          "src": "23384:16:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 38656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23384:33:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38650,
                            "name": "rateNumerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38626,
                            "src": "23362:13:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38648,
                            "name": "FixidityLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3567,
                            "src": "23345:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                              "typeString": "type(library FixidityLib)"
                            }
                          },
                          "id": 38649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wrap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3001,
                          "src": "23345:16:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 38651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23345:31:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 38652,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "divide",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3472,
                      "src": "23345:38:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_struct$_Fraction_$2968_memory_ptr_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 38657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23345:73:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "functionReturnParameters": 38624,
                  "id": 38658,
                  "nodeType": "Return",
                  "src": "23338:80:126"
                }
              ]
            },
            "documentation": "@notice Gets the oracle CELO price quoted in the stable token.\n@dev Reverts if there is not a rate for the provided stable token.\n@param stableToken The stable token to get the oracle price for.\n@return The oracle CELO price quoted in the stable token.",
            "id": 38660,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOracleExchangeRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38620,
                  "name": "stableToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 38660,
                  "src": "22950:19:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22950:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22949:21:126"
            },
            "returnParameters": {
              "id": 38624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38623,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38660,
                  "src": "23005:27:126",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                    "typeString": "struct FixidityLib.Fraction"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 38622,
                    "name": "FixidityLib.Fraction",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2968,
                    "src": "23005:20:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                      "typeString": "struct FixidityLib.Fraction"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23004:29:126"
            },
            "scope": 38813,
            "src": "22919:504:126",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 38689,
              "nodeType": "Block",
              "src": "23905:460:126",
              "statements": [
                {
                  "assignments": [
                    38670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38670,
                      "name": "exchangeLimits",
                      "nodeType": "VariableDeclaration",
                      "scope": 38689,
                      "src": "23911:36:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeLimits_$37804_memory_ptr",
                        "typeString": "struct GrandaMento.ExchangeLimits"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38669,
                        "name": "ExchangeLimits",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 37804,
                        "src": "23911:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeLimits_$37804_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeLimits"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38674,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 38671,
                      "name": "stableTokenExchangeLimits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37835,
                      "src": "23950:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_ExchangeLimits_$37804_storage_$",
                        "typeString": "mapping(string memory => struct GrandaMento.ExchangeLimits storage ref)"
                      }
                    },
                    "id": 38673,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 38672,
                      "name": "stableTokenRegistryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38662,
                      "src": "23976:21:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23950:48:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeLimits_$37804_storage",
                      "typeString": "struct GrandaMento.ExchangeLimits storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23911:87:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38676,
                            "name": "exchangeLimits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38670,
                            "src": "24179:14:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExchangeLimits_$37804_memory_ptr",
                              "typeString": "struct GrandaMento.ExchangeLimits memory"
                            }
                          },
                          "id": 38677,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxExchangeAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37803,
                          "src": "24179:32:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 38678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24214:1:126",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24179:36:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d617820737461626c6520746f6b656e2065786368616e676520616d6f756e74206d75737420626520646566696e6564",
                        "id": 38680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24223:50:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79c687fe29e1c0c528f93c98d274726b3cd9195311965a3aaec2f4a0bc06595a",
                          "typeString": "literal_string \"Max stable token exchange amount must be defined\""
                        },
                        "value": "Max stable token exchange amount must be defined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79c687fe29e1c0c528f93c98d274726b3cd9195311965a3aaec2f4a0bc06595a",
                          "typeString": "literal_string \"Max stable token exchange amount must be defined\""
                        }
                      ],
                      "id": 38675,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "24164:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24164:115:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38682,
                  "nodeType": "ExpressionStatement",
                  "src": "24164:115:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38683,
                          "name": "exchangeLimits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38670,
                          "src": "24293:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeLimits_$37804_memory_ptr",
                            "typeString": "struct GrandaMento.ExchangeLimits memory"
                          }
                        },
                        "id": 38684,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "minExchangeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37801,
                        "src": "24293:32:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38685,
                          "name": "exchangeLimits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38670,
                          "src": "24327:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeLimits_$37804_memory_ptr",
                            "typeString": "struct GrandaMento.ExchangeLimits memory"
                          }
                        },
                        "id": 38686,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxExchangeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37803,
                        "src": "24327:32:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 38687,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "24292:68:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 38668,
                  "id": 38688,
                  "nodeType": "Return",
                  "src": "24285:75:126"
                }
              ]
            },
            "documentation": "@notice Gets the minimum and maximum amount of a stable token that can be\ninvolved in a single exchange.\n@dev Reverts if there is no explicit exchange limit for the stable token.\n@param stableTokenRegistryId The string registry ID for the stable token.\n@return (minimum exchange amount, maximum exchange amount).",
            "id": 38690,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStableTokenExchangeLimits",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38662,
                  "name": "stableTokenRegistryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 38690,
                  "src": "23815:35:126",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 38661,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23815:6:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23814:37:126"
            },
            "returnParameters": {
              "id": 38668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38665,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38690,
                  "src": "23885:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23885:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38667,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38690,
                  "src": "23894:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23894:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23884:18:126"
            },
            "scope": 38813,
            "src": "23777:588:126",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38705,
              "nodeType": "Block",
              "src": "24602:68:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38697,
                      "name": "approver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37825,
                      "src": "24608:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 38698,
                      "name": "newApprover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38692,
                      "src": "24619:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "24608:22:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38700,
                  "nodeType": "ExpressionStatement",
                  "src": "24608:22:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38702,
                        "name": "newApprover",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38692,
                        "src": "24653:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38701,
                      "name": "ApproverSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37773,
                      "src": "24641:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24641:24:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38704,
                  "nodeType": "EmitStatement",
                  "src": "24636:29:126"
                }
              ]
            },
            "documentation": "@notice Sets the approver.\n@dev Sender must be owner. New approver is allowed to be address(0).\n@param newApprover The new value for the approver.",
            "id": 38706,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38695,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38694,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43880,
                  "src": "24592:9:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "24592:9:126"
              }
            ],
            "name": "setApprover",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38692,
                  "name": "newApprover",
                  "nodeType": "VariableDeclaration",
                  "scope": 38706,
                  "src": "24564:19:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24564:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24563:21:126"
            },
            "returnParameters": {
              "id": 38696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24602:0:126"
            },
            "scope": 38813,
            "src": "24543:127:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38724,
              "nodeType": "Block",
              "src": "25125:170:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38713,
                      "name": "maxApprovalExchangeRateChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37827,
                      "src": "25131:29:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                        "typeString": "struct FixidityLib.Fraction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 38716,
                          "name": "newMaxApprovalExchangeRateChange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38708,
                          "src": "25180:32:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 38714,
                          "name": "FixidityLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3567,
                          "src": "25163:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                            "typeString": "type(library FixidityLib)"
                          }
                        },
                        "id": 38715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wrap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3001,
                        "src": "25163:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 38717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25163:50:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "src": "25131:82:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                      "typeString": "struct FixidityLib.Fraction storage ref"
                    }
                  },
                  "id": 38719,
                  "nodeType": "ExpressionStatement",
                  "src": "25131:82:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38721,
                        "name": "newMaxApprovalExchangeRateChange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38708,
                        "src": "25257:32:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38720,
                      "name": "MaxApprovalExchangeRateChangeSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37777,
                      "src": "25224:32:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25224:66:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38723,
                  "nodeType": "EmitStatement",
                  "src": "25219:71:126"
                }
              ]
            },
            "documentation": "@notice Sets the maximum allowed change in the CELO/stable token price when\nan exchange proposal is being approved relative to the price when the proposal\nwas created.\n@dev Sender must be owner.\n@param newMaxApprovalExchangeRateChange The new value for maxApprovalExchangeRateChange\nto be wrapped.",
            "id": 38725,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38711,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38710,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43880,
                  "src": "25113:9:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "25113:9:126"
              }
            ],
            "name": "setMaxApprovalExchangeRateChange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38708,
                  "name": "newMaxApprovalExchangeRateChange",
                  "nodeType": "VariableDeclaration",
                  "scope": 38725,
                  "src": "25056:40:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25056:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25055:42:126"
            },
            "returnParameters": {
              "id": 38712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25125:0:126"
            },
            "scope": 38813,
            "src": "25014:281:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38754,
              "nodeType": "Block",
              "src": "25514:168:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 38733,
                          "name": "newSpread",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38727,
                          "src": "25528:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 38734,
                                  "name": "FixidityLib",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3567,
                                  "src": "25541:11:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                                    "typeString": "type(library FixidityLib)"
                                  }
                                },
                                "id": 38735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fixed1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2989,
                                "src": "25541:18:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                                  "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                                }
                              },
                              "id": 38736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "25541:20:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                                "typeString": "struct FixidityLib.Fraction memory"
                              }
                            },
                            "id": 38737,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unwrap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3012,
                            "src": "25541:27:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                              "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                            }
                          },
                          "id": 38738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25541:29:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25528:42:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "537072656164206d75737420626520736d616c6c6572207468616e2031",
                        "id": 38740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25572:31:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ebe8fd080937c2aa0fb61e021581458a09554c648b508b19824ba5cdb4869ee",
                          "typeString": "literal_string \"Spread must be smaller than 1\""
                        },
                        "value": "Spread must be smaller than 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ebe8fd080937c2aa0fb61e021581458a09554c648b508b19824ba5cdb4869ee",
                          "typeString": "literal_string \"Spread must be smaller than 1\""
                        }
                      ],
                      "id": 38732,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "25520:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25520:84:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38742,
                  "nodeType": "ExpressionStatement",
                  "src": "25520:84:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38743,
                      "name": "spread",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37829,
                      "src": "25610:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                        "typeString": "struct FixidityLib.Fraction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 38746,
                          "name": "newSpread",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38727,
                          "src": "25636:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 38744,
                          "name": "FixidityLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3567,
                          "src": "25619:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                            "typeString": "type(library FixidityLib)"
                          }
                        },
                        "id": 38745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wrap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3001,
                        "src": "25619:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 38747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25619:27:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "src": "25610:36:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                      "typeString": "struct FixidityLib.Fraction storage ref"
                    }
                  },
                  "id": 38749,
                  "nodeType": "ExpressionStatement",
                  "src": "25610:36:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38751,
                        "name": "newSpread",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38727,
                        "src": "25667:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38750,
                      "name": "SpreadSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37781,
                      "src": "25657:9:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25657:20:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38753,
                  "nodeType": "EmitStatement",
                  "src": "25652:25:126"
                }
              ]
            },
            "documentation": "@notice Sets the spread.\n@dev Sender must be owner.\n@param newSpread The new value for the spread to be wrapped. Must be <= fixed 1.",
            "id": 38755,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38730,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38729,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43880,
                  "src": "25504:9:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "25504:9:126"
              }
            ],
            "name": "setSpread",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38727,
                  "name": "newSpread",
                  "nodeType": "VariableDeclaration",
                  "scope": 38755,
                  "src": "25478:17:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25478:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25477:19:126"
            },
            "returnParameters": {
              "id": 38731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25514:0:126"
            },
            "scope": 38813,
            "src": "25459:223:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38788,
              "nodeType": "Block",
              "src": "26354:395:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 38767,
                          "name": "minExchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38759,
                          "src": "26375:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 38768,
                          "name": "maxExchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38761,
                          "src": "26396:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "26375:38:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d696e2065786368616e676520616d6f756e74206d757374206e6f742062652067726561746572207468616e206d6178",
                        "id": 38770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26421:50:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55b505c4d68020c2e891038105b4f4ecd9a61ba2e1c7341c64d391411c6f4c2e",
                          "typeString": "literal_string \"Min exchange amount must not be greater than max\""
                        },
                        "value": "Min exchange amount must not be greater than max"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55b505c4d68020c2e891038105b4f4ecd9a61ba2e1c7341c64d391411c6f4c2e",
                          "typeString": "literal_string \"Min exchange amount must not be greater than max\""
                        }
                      ],
                      "id": 38766,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "26360:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26360:117:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38772,
                  "nodeType": "ExpressionStatement",
                  "src": "26360:117:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 38773,
                        "name": "stableTokenExchangeLimits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37835,
                        "src": "26483:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_ExchangeLimits_$37804_storage_$",
                          "typeString": "mapping(string memory => struct GrandaMento.ExchangeLimits storage ref)"
                        }
                      },
                      "id": 38775,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 38774,
                        "name": "stableTokenRegistryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38757,
                        "src": "26509:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "26483:48:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeLimits_$37804_storage",
                        "typeString": "struct GrandaMento.ExchangeLimits storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 38777,
                          "name": "minExchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38759,
                          "src": "26576:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38778,
                          "name": "maxExchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38761,
                          "src": "26620:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 38776,
                        "name": "ExchangeLimits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37804,
                        "src": "26534:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ExchangeLimits_$37804_storage_ptr_$",
                          "typeString": "type(struct GrandaMento.ExchangeLimits storage pointer)"
                        }
                      },
                      "id": 38779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "minExchangeAmount",
                        "maxExchangeAmount"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "26534:110:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeLimits_$37804_memory",
                        "typeString": "struct GrandaMento.ExchangeLimits memory"
                      }
                    },
                    "src": "26483:161:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeLimits_$37804_storage",
                      "typeString": "struct GrandaMento.ExchangeLimits storage ref"
                    }
                  },
                  "id": 38781,
                  "nodeType": "ExpressionStatement",
                  "src": "26483:161:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38783,
                        "name": "stableTokenRegistryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38757,
                        "src": "26684:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38784,
                        "name": "minExchangeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38759,
                        "src": "26707:17:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38785,
                        "name": "maxExchangeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38761,
                        "src": "26726:17:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38782,
                      "name": "StableTokenExchangeLimitsSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37793,
                      "src": "26655:28:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 38786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26655:89:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38787,
                  "nodeType": "EmitStatement",
                  "src": "26650:94:126"
                }
              ]
            },
            "documentation": "@notice Sets the minimum and maximum amount of the stable token an exchange can involve.\n@dev Sender must be owner. Setting the maxExchangeAmount to 0 effectively disables new\nexchange proposals for the token.\n@param stableTokenRegistryId The registry ID string for the stable token to set limits for.\n@param minExchangeAmount The new minimum exchange amount for the stable token.\n@param maxExchangeAmount The new maximum exchange amount for the stable token.",
            "id": 38789,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38764,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38763,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43880,
                  "src": "26344:9:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "26344:9:126"
              }
            ],
            "name": "setStableTokenExchangeLimits",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38757,
                  "name": "stableTokenRegistryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 38789,
                  "src": "26231:37:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 38756,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "26231:6:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38759,
                  "name": "minExchangeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 38789,
                  "src": "26274:25:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26274:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38761,
                  "name": "maxExchangeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 38789,
                  "src": "26305:25:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26305:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26225:109:126"
            },
            "returnParameters": {
              "id": 38765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26354:0:126"
            },
            "scope": 38813,
            "src": "26188:561:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38811,
              "nodeType": "Block",
              "src": "26999:414:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 38797,
                          "name": "newVetoPeriodSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38791,
                          "src": "27240:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 38798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27264:7:126",
                          "subdenomination": "weeks",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2419200_by_1",
                            "typeString": "int_const 2419200"
                          },
                          "value": "4"
                        },
                        "src": "27240:31:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5665746f20706572696f642063616e6e6f74206578636565642034207765656b73",
                        "id": 38800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27273:35:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbb965376e8cf5f333b57ce44de7c4b8880c6cfb990bd33179bafc5d0b6bc178",
                          "typeString": "literal_string \"Veto period cannot exceed 4 weeks\""
                        },
                        "value": "Veto period cannot exceed 4 weeks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbb965376e8cf5f333b57ce44de7c4b8880c6cfb990bd33179bafc5d0b6bc178",
                          "typeString": "literal_string \"Veto period cannot exceed 4 weeks\""
                        }
                      ],
                      "id": 38796,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "27232:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27232:77:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38802,
                  "nodeType": "ExpressionStatement",
                  "src": "27232:77:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38803,
                      "name": "vetoPeriodSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37831,
                      "src": "27315:17:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 38804,
                      "name": "newVetoPeriodSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38791,
                      "src": "27335:20:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27315:40:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38806,
                  "nodeType": "ExpressionStatement",
                  "src": "27315:40:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38808,
                        "name": "newVetoPeriodSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38791,
                        "src": "27387:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38807,
                      "name": "VetoPeriodSecondsSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37785,
                      "src": "27366:20:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27366:42:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38810,
                  "nodeType": "EmitStatement",
                  "src": "27361:47:126"
                }
              ]
            },
            "documentation": "@notice Sets the veto period in seconds.\n@dev Sender must be owner.\n@param newVetoPeriodSeconds The new value for the veto period in seconds.",
            "id": 38812,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38794,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38793,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43880,
                  "src": "26989:9:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "26989:9:126"
              }
            ],
            "name": "setVetoPeriodSeconds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38791,
                  "name": "newVetoPeriodSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 38812,
                  "src": "26952:28:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26952:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26951:30:126"
            },
            "returnParameters": {
              "id": 38795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26999:0:126"
            },
            "scope": 38813,
            "src": "26922:491:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 38814,
        "src": "497:26918:126"
      }
    ],
    "src": "0:27416:126"
  },
  "legacyAST": {
    "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/GrandaMento.sol",
    "exportedSymbols": {
      "GrandaMento": [
        38813
      ]
    },
    "id": 38814,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 37719,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".13"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:126"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "openzeppelin-solidity/contracts/math/SafeMath.sol",
        "id": 37720,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 43830,
        "src": "26:59:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "file": "openzeppelin-solidity/contracts/ownership/Ownable.sol",
        "id": 37721,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 43948,
        "src": "86:63:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/FixidityLib.sol",
        "file": "../common/FixidityLib.sol",
        "id": 37722,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 3568,
        "src": "151:35:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/Initializable.sol",
        "file": "../common/Initializable.sol",
        "id": 37723,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 4662,
        "src": "187:37:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/UsingRegistry.sol",
        "file": "../common/UsingRegistry.sol",
        "id": 37724,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 8573,
        "src": "225:37:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/interfaces/ICeloVersionedContract.sol",
        "file": "../common/interfaces/ICeloVersionedContract.sol",
        "id": 37725,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 9341,
        "src": "263:57:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/common/libraries/ReentrancyGuard.sol",
        "file": "../common/libraries/ReentrancyGuard.sol",
        "id": 37726,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 9719,
        "src": "321:49:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/hiroki.yasui/go/src/github.com/celo-org/celo-monorepo/packages/protocol/contracts/stability/interfaces/IStableToken.sol",
        "file": "../stability/interfaces/IStableToken.sol",
        "id": 37727,
        "nodeType": "ImportDirective",
        "scope": 38814,
        "sourceUnit": 42886,
        "src": "371:50:126",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37728,
              "name": "ICeloVersionedContract",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9340,
              "src": "523:22:126",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ICeloVersionedContract_$9340",
                "typeString": "contract ICeloVersionedContract"
              }
            },
            "id": 37729,
            "nodeType": "InheritanceSpecifier",
            "src": "523:22:126"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37730,
              "name": "Ownable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 43947,
              "src": "549:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Ownable_$43947",
                "typeString": "contract Ownable"
              }
            },
            "id": 37731,
            "nodeType": "InheritanceSpecifier",
            "src": "549:7:126"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37732,
              "name": "Initializable",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 4661,
              "src": "560:13:126",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Initializable_$4661",
                "typeString": "contract Initializable"
              }
            },
            "id": 37733,
            "nodeType": "InheritanceSpecifier",
            "src": "560:13:126"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37734,
              "name": "UsingRegistry",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 8572,
              "src": "577:13:126",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_UsingRegistry_$8572",
                "typeString": "contract UsingRegistry"
              }
            },
            "id": 37735,
            "nodeType": "InheritanceSpecifier",
            "src": "577:13:126"
          },
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 37736,
              "name": "ReentrancyGuard",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 9718,
              "src": "594:15:126",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ReentrancyGuard_$9718",
                "typeString": "contract ReentrancyGuard"
              }
            },
            "id": 37737,
            "nodeType": "InheritanceSpecifier",
            "src": "594:15:126"
          }
        ],
        "contractDependencies": [
          4661,
          8572,
          9340,
          9718,
          43492,
          43947
        ],
        "contractKind": "contract",
        "documentation": "@title Facilitates large exchanges between CELO stable tokens.",
        "fullyImplemented": true,
        "id": 38813,
        "linearizedBaseContracts": [
          38813,
          9718,
          8572,
          4661,
          43947,
          43492,
          9340
        ],
        "name": "GrandaMento",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 37740,
            "libraryName": {
              "contractScope": null,
              "id": 37738,
              "name": "FixidityLib",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 3567,
              "src": "620:11:126",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_FixidityLib_$3567",
                "typeString": "library FixidityLib"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "614:43:126",
            "typeName": {
              "contractScope": null,
              "id": 37739,
              "name": "FixidityLib.Fraction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2968,
              "src": "636:20:126",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            }
          },
          {
            "id": 37743,
            "libraryName": {
              "contractScope": null,
              "id": 37741,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 43829,
              "src": "666:8:126",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$43829",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "660:27:126",
            "typeName": {
              "id": 37742,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "679:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37757,
            "name": "ExchangeProposalCreated",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37756,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37745,
                  "indexed": true,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 37757,
                  "src": "780:26:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "780:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37747,
                  "indexed": true,
                  "name": "exchanger",
                  "nodeType": "VariableDeclaration",
                  "scope": 37757,
                  "src": "812:25:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37746,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "812:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37749,
                  "indexed": false,
                  "name": "stableTokenRegistryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 37757,
                  "src": "843:28:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37748,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "843:6:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37751,
                  "indexed": false,
                  "name": "sellAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37757,
                  "src": "877:18:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37750,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "877:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37753,
                  "indexed": false,
                  "name": "buyAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37757,
                  "src": "901:17:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37752,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "901:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37755,
                  "indexed": false,
                  "name": "sellCelo",
                  "nodeType": "VariableDeclaration",
                  "scope": 37757,
                  "src": "924:13:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37754,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "924:4:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "774:167:126"
            },
            "src": "745:197:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37761,
            "name": "ExchangeProposalApproved",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37759,
                  "indexed": true,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 37761,
                  "src": "1045:26:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1044:28:126"
            },
            "src": "1014:59:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37765,
            "name": "ExchangeProposalCancelled",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37763,
                  "indexed": true,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 37765,
                  "src": "1162:26:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37762,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1162:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1161:28:126"
            },
            "src": "1130:60:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37769,
            "name": "ExchangeProposalExecuted",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37768,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37767,
                  "indexed": true,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 37769,
                  "src": "1277:26:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37766,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1277:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1276:28:126"
            },
            "src": "1246:59:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37773,
            "name": "ApproverSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37772,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37771,
                  "indexed": false,
                  "name": "approver",
                  "nodeType": "VariableDeclaration",
                  "scope": 37773,
                  "src": "1366:16:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1366:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1365:18:126"
            },
            "src": "1348:36:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37777,
            "name": "MaxApprovalExchangeRateChangeSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37775,
                  "indexed": false,
                  "name": "maxApprovalExchangeRateChange",
                  "nodeType": "VariableDeclaration",
                  "scope": 37777,
                  "src": "1483:37:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1483:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1482:39:126"
            },
            "src": "1444:78:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37781,
            "name": "SpreadSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37779,
                  "indexed": false,
                  "name": "spread",
                  "nodeType": "VariableDeclaration",
                  "scope": 37781,
                  "src": "1579:14:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37778,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1579:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1578:16:126"
            },
            "src": "1563:32:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37785,
            "name": "VetoPeriodSecondsSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37784,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37783,
                  "indexed": false,
                  "name": "vetoPeriodSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 37785,
                  "src": "1679:25:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37782,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1679:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1678:27:126"
            },
            "src": "1652:54:126"
          },
          {
            "anonymous": false,
            "documentation": null,
            "id": 37793,
            "name": "StableTokenExchangeLimitsSet",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 37792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37787,
                  "indexed": false,
                  "name": "stableTokenRegistryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 37793,
                  "src": "1816:28:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37786,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1816:6:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37789,
                  "indexed": false,
                  "name": "minExchangeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37793,
                  "src": "1850:25:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37788,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1850:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37791,
                  "indexed": false,
                  "name": "maxExchangeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 37793,
                  "src": "1881:25:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1881:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1810:100:126"
            },
            "src": "1776:135:126"
          },
          {
            "canonicalName": "GrandaMento.ExchangeProposalState",
            "id": 37799,
            "members": [
              {
                "id": 37794,
                "name": "None",
                "nodeType": "EnumValue",
                "src": "1944:4:126"
              },
              {
                "id": 37795,
                "name": "Proposed",
                "nodeType": "EnumValue",
                "src": "1950:8:126"
              },
              {
                "id": 37796,
                "name": "Approved",
                "nodeType": "EnumValue",
                "src": "1960:8:126"
              },
              {
                "id": 37797,
                "name": "Executed",
                "nodeType": "EnumValue",
                "src": "1970:8:126"
              },
              {
                "id": 37798,
                "name": "Cancelled",
                "nodeType": "EnumValue",
                "src": "1980:9:126"
              }
            ],
            "name": "ExchangeProposalState",
            "nodeType": "EnumDefinition",
            "src": "1915:76:126"
          },
          {
            "canonicalName": "GrandaMento.ExchangeLimits",
            "id": 37804,
            "members": [
              {
                "constant": false,
                "id": 37801,
                "name": "minExchangeAmount",
                "nodeType": "VariableDeclaration",
                "scope": 37804,
                "src": "2105:25:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37800,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2105:7:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37803,
                "name": "maxExchangeAmount",
                "nodeType": "VariableDeclaration",
                "scope": 37804,
                "src": "2218:25:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37802,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2218:7:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ExchangeLimits",
            "nodeType": "StructDefinition",
            "scope": 38813,
            "src": "1995:253:126",
            "visibility": "public"
          },
          {
            "canonicalName": "GrandaMento.ExchangeProposal",
            "id": 37823,
            "members": [
              {
                "constant": false,
                "id": 37806,
                "name": "exchanger",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "2338:25:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 37805,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2338:15:126",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37808,
                "name": "stableToken",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "2626:19:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 37807,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2626:7:126",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37810,
                "name": "state",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "2694:27:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                  "typeString": "enum GrandaMento.ExchangeProposalState"
                },
                "typeName": {
                  "contractScope": null,
                  "id": 37809,
                  "name": "ExchangeProposalState",
                  "nodeType": "UserDefinedTypeName",
                  "referencedDeclaration": 37799,
                  "src": "2694:21:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                    "typeString": "enum GrandaMento.ExchangeProposalState"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37812,
                "name": "sellCelo",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "2796:13:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 37811,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "2796:4:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37814,
                "name": "sellAmount",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "3445:18:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37813,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3445:7:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37816,
                "name": "buyAmount",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "3591:17:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37815,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "3591:7:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37818,
                "name": "celoStableTokenExchangeRate",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "4077:35:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37817,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4077:7:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37820,
                "name": "vetoPeriodSeconds",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "4385:25:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37819,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4385:7:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 37822,
                "name": "approvalTimestamp",
                "nodeType": "VariableDeclaration",
                "scope": 37823,
                "src": "4579:25:126",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 37821,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "4579:7:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "ExchangeProposal",
            "nodeType": "StructDefinition",
            "scope": 38813,
            "src": "2252:2357:126",
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37825,
            "name": "approver",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "4680:23:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 37824,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "4680:7:126",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37827,
            "name": "maxApprovalExchangeRateChange",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "4881:57:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Fraction_$2968_storage",
              "typeString": "struct FixidityLib.Fraction"
            },
            "typeName": {
              "contractScope": null,
              "id": 37826,
              "name": "FixidityLib.Fraction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2968,
              "src": "4881:20:126",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37829,
            "name": "spread",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "5000:34:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_Fraction_$2968_storage",
              "typeString": "struct FixidityLib.Fraction"
            },
            "typeName": {
              "contractScope": null,
              "id": 37828,
              "name": "FixidityLib.Fraction",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 2968,
              "src": "5000:20:126",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                "typeString": "struct FixidityLib.Fraction"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37831,
            "name": "vetoPeriodSeconds",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "5133:32:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37830,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "5133:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37835,
            "name": "stableTokenExchangeLimits",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "5338:66:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_ExchangeLimits_$37804_storage_$",
              "typeString": "mapping(string => struct GrandaMento.ExchangeLimits)"
            },
            "typeName": {
              "id": 37834,
              "keyType": {
                "id": 37832,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "5346:6:126",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "5338:33:126",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_ExchangeLimits_$37804_storage_$",
                "typeString": "mapping(string => struct GrandaMento.ExchangeLimits)"
              },
              "valueType": {
                "contractScope": null,
                "id": 37833,
                "name": "ExchangeLimits",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 37804,
                "src": "5356:14:126",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ExchangeLimits_$37804_storage_ptr",
                  "typeString": "struct GrandaMento.ExchangeLimits"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37839,
            "name": "exchangeProposals",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "5485:61:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
              "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal)"
            },
            "typeName": {
              "id": 37838,
              "keyType": {
                "id": 37836,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "5493:7:126",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "5485:36:126",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal)"
              },
              "valueType": {
                "contractScope": null,
                "id": 37837,
                "name": "ExchangeProposal",
                "nodeType": "UserDefinedTypeName",
                "referencedDeclaration": 37823,
                "src": "5504:16:126",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                  "typeString": "struct GrandaMento.ExchangeProposal"
                }
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37842,
            "name": "activeProposalIdsSuperset",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "6455:42:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
              "typeString": "uint256[]"
            },
            "typeName": {
              "baseType": {
                "id": 37840,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "6455:7:126",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 37841,
              "length": null,
              "nodeType": "ArrayTypeName",
              "src": "6455:9:126",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                "typeString": "uint256[]"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 37844,
            "name": "exchangeProposalCount",
            "nodeType": "VariableDeclaration",
            "scope": 38813,
            "src": "6632:36:126",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 37843,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "6632:7:126",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37855,
              "nodeType": "Block",
              "src": "6765:76:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 37850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 37847,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45085,
                            "src": "6779:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 37848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "6779:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 37849,
                          "name": "approver",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37825,
                          "src": "6793:8:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6779:22:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "53656e646572206d75737420626520617070726f766572",
                        "id": 37851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6803:25:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8fd6d9e84a913c2056cc57d9de71bf548ba2a0ceb02699a44b3a7d52aa725b72",
                          "typeString": "literal_string \"Sender must be approver\""
                        },
                        "value": "Sender must be approver"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8fd6d9e84a913c2056cc57d9de71bf548ba2a0ceb02699a44b3a7d52aa725b72",
                          "typeString": "literal_string \"Sender must be approver\""
                        }
                      ],
                      "id": 37846,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "6771:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 37852,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6771:58:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37853,
                  "nodeType": "ExpressionStatement",
                  "src": "6771:58:126"
                },
                {
                  "id": 37854,
                  "nodeType": "PlaceholderStatement",
                  "src": "6835:1:126"
                }
              ]
            },
            "documentation": "@notice Reverts if the sender is not the approver.",
            "id": 37856,
            "name": "onlyApprover",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 37845,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6762:2:126"
            },
            "src": "6741:100:126",
            "visibility": "internal"
          },
          {
            "body": {
              "id": 37864,
              "nodeType": "Block",
              "src": "7042:2:126",
              "statements": []
            },
            "documentation": "@notice Sets initialized == true on implementation contracts.\n@param test Set to true to skip implementation initialization.",
            "id": 37865,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 37861,
                    "name": "test",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37858,
                    "src": "7036:4:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  }
                ],
                "id": 37862,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37860,
                  "name": "Initializable",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4661,
                  "src": "7022:13:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Initializable_$4661_$",
                    "typeString": "type(contract Initializable)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "7022:19:126"
              }
            ],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37859,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37858,
                  "name": "test",
                  "nodeType": "VariableDeclaration",
                  "scope": 37865,
                  "src": "7004:9:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37857,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "7004:4:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7003:11:126"
            },
            "returnParameters": {
              "id": 37863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7042:0:126"
            },
            "scope": 38813,
            "src": "6992:52:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 37882,
              "nodeType": "Block",
              "src": "7305:30:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 37876,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7319:1:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 37877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7322:1:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 37878,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7325:1:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "30",
                        "id": 37879,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7328:1:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "id": 37880,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "7318:12:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_rational_1_by_1_$_t_rational_1_by_1_$_t_rational_0_by_1_$_t_rational_0_by_1_$",
                      "typeString": "tuple(int_const 1,int_const 1,int_const 0,int_const 0)"
                    }
                  },
                  "functionReturnParameters": 37875,
                  "id": 37881,
                  "nodeType": "Return",
                  "src": "7311:19:126"
                }
              ]
            },
            "documentation": "@notice Returns the storage, major, minor, and patch version of the contract.\n@return The storage, major, minor, and patch version of the contract.",
            "id": 37883,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getVersionNumber",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37866,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7243:2:126"
            },
            "returnParameters": {
              "id": 37875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37868,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37883,
                  "src": "7269:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37867,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7269:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37870,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37883,
                  "src": "7278:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7278:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37872,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37883,
                  "src": "7287:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37871,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7287:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37874,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 37883,
                  "src": "7296:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37873,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7296:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7268:36:126"
            },
            "scope": 38813,
            "src": "7218:117:126",
            "stateMutability": "pure",
            "superFunction": 9339,
            "visibility": "external"
          },
          {
            "body": {
              "id": 37923,
              "nodeType": "Block",
              "src": "8042:237:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 37899,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45085,
                          "src": "8067:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 37900,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "8067:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 37898,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43946,
                      "src": "8048:18:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 37901,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8048:30:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37902,
                  "nodeType": "ExpressionStatement",
                  "src": "8048:30:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37904,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37885,
                        "src": "8096:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37903,
                      "name": "setRegistry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 8389,
                      "src": "8084:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 37905,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8084:22:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37906,
                  "nodeType": "ExpressionStatement",
                  "src": "8084:22:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37908,
                        "name": "_approver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37887,
                        "src": "8124:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 37907,
                      "name": "setApprover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38706,
                      "src": "8112:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 37909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8112:22:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37910,
                  "nodeType": "ExpressionStatement",
                  "src": "8112:22:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37912,
                        "name": "_maxApprovalExchangeRateChange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37889,
                        "src": "8173:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37911,
                      "name": "setMaxApprovalExchangeRateChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38725,
                      "src": "8140:32:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 37913,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8140:64:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37914,
                  "nodeType": "ExpressionStatement",
                  "src": "8140:64:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37916,
                        "name": "_spread",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37891,
                        "src": "8220:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37915,
                      "name": "setSpread",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38755,
                      "src": "8210:9:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 37917,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8210:18:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37918,
                  "nodeType": "ExpressionStatement",
                  "src": "8210:18:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37920,
                        "name": "_vetoPeriodSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37893,
                        "src": "8255:18:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 37919,
                      "name": "setVetoPeriodSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38812,
                      "src": "8234:20:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 37921,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8234:40:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 37922,
                  "nodeType": "ExpressionStatement",
                  "src": "8234:40:126"
                }
              ]
            },
            "documentation": "@notice Used in place of the constructor to allow the contract to be upgradable via proxy.\n@param _registry The address of the registry.\n@param _approver The approver that has the ability to approve exchange proposals.\n@param _maxApprovalExchangeRateChange The maximum allowed change in CELO price\nbetween an exchange proposal's creation and approval.\n@param _spread The spread charged on exchanges.\n@param _vetoPeriodSeconds The length of the veto period in seconds.",
            "id": 37924,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 37896,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37895,
                  "name": "initializer",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 4660,
                  "src": "8030:11:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8030:11:126"
              }
            ],
            "name": "initialize",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37894,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37885,
                  "name": "_registry",
                  "nodeType": "VariableDeclaration",
                  "scope": 37924,
                  "src": "7879:17:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37884,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7879:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37887,
                  "name": "_approver",
                  "nodeType": "VariableDeclaration",
                  "scope": 37924,
                  "src": "7902:17:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 37886,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7902:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37889,
                  "name": "_maxApprovalExchangeRateChange",
                  "nodeType": "VariableDeclaration",
                  "scope": 37924,
                  "src": "7925:38:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37888,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7925:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37891,
                  "name": "_spread",
                  "nodeType": "VariableDeclaration",
                  "scope": 37924,
                  "src": "7969:15:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37890,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7969:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37893,
                  "name": "_vetoPeriodSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 37924,
                  "src": "7990:26:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37892,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7990:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "7873:147:126"
            },
            "returnParameters": {
              "id": 37897,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8042:0:126"
            },
            "scope": 38813,
            "src": "7854:425:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38071,
              "nodeType": "Block",
              "src": "8922:3160:126",
              "statements": [
                {
                  "assignments": [
                    37938
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37938,
                      "name": "stableToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 38071,
                      "src": "8928:19:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 37937,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "8928:7:126",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 37943,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37941,
                        "name": "stableTokenRegistryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37926,
                        "src": "8984:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 37939,
                        "name": "registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8328,
                        "src": "8950:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IRegistry_$9514",
                          "typeString": "contract IRegistry"
                        }
                      },
                      "id": 37940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAddressForStringOrDie",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 9496,
                      "src": "8950:33:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 37942,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8950:56:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8928:78:126"
                },
                {
                  "assignments": [
                    37945
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37945,
                      "name": "celoStableTokenExchangeRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 38071,
                      "src": "9066:35:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37944,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9066:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 37951,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 37947,
                            "name": "stableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37938,
                            "src": "9126:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 37946,
                          "name": "getOracleExchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38660,
                          "src": "9104:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (address) view returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 37948,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9104:34:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 37949,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "unwrap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3012,
                      "src": "9104:41:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                      }
                    },
                    "id": 37950,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9104:43:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9066:81:126"
                },
                {
                  "assignments": [
                    37953
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37953,
                      "name": "buyAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 38071,
                      "src": "9284:17:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 37952,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "9284:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 37959,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 37955,
                        "name": "celoStableTokenExchangeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37945,
                        "src": "9317:27:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37956,
                        "name": "sellAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37928,
                        "src": "9346:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 37957,
                        "name": "sellCelo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37930,
                        "src": "9358:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 37954,
                      "name": "getBuyAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38487,
                      "src": "9304:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_bool_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,bool) view returns (uint256)"
                      }
                    },
                    "id": 37958,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9304:63:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9284:83:126"
                },
                {
                  "id": 37986,
                  "nodeType": "Block",
                  "src": "9433:722:126",
                  "statements": [
                    {
                      "assignments": [
                        37961,
                        37963
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 37961,
                          "name": "minExchangeAmount",
                          "nodeType": "VariableDeclaration",
                          "scope": 37986,
                          "src": "9630:25:126",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 37960,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9630:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        },
                        {
                          "constant": false,
                          "id": 37963,
                          "name": "maxExchangeAmount",
                          "nodeType": "VariableDeclaration",
                          "scope": 37986,
                          "src": "9657:25:126",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 37962,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9657:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 37967,
                      "initialValue": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 37965,
                            "name": "stableTokenRegistryId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37926,
                            "src": "9724:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_calldata_ptr",
                              "typeString": "string calldata"
                            }
                          ],
                          "id": 37964,
                          "name": "getStableTokenExchangeLimits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38690,
                          "src": "9686:28:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$_t_uint256_$_t_uint256_$",
                            "typeString": "function (string memory) view returns (uint256,uint256)"
                          }
                        },
                        "id": 37966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9686:67:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                          "typeString": "tuple(uint256,uint256)"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "9629:124:126"
                    },
                    {
                      "assignments": [
                        37969
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 37969,
                          "name": "stableTokenExchangeAmount",
                          "nodeType": "VariableDeclaration",
                          "scope": 37986,
                          "src": "9882:33:126",
                          "stateVariable": false,
                          "storageLocation": "default",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "typeName": {
                            "id": 37968,
                            "name": "uint256",
                            "nodeType": "ElementaryTypeName",
                            "src": "9882:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "value": null,
                          "visibility": "internal"
                        }
                      ],
                      "id": 37974,
                      "initialValue": {
                        "argumentTypes": null,
                        "condition": {
                          "argumentTypes": null,
                          "id": 37970,
                          "name": "sellCelo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37930,
                          "src": "9918:8:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseExpression": {
                          "argumentTypes": null,
                          "id": 37972,
                          "name": "sellAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37928,
                          "src": "9941:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 37973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "Conditional",
                        "src": "9918:33:126",
                        "trueExpression": {
                          "argumentTypes": null,
                          "id": 37971,
                          "name": "buyAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37953,
                          "src": "9929:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "9882:69:126"
                    },
                    {
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "id": 37982,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 37978,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 37976,
                                "name": "stableTokenExchangeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37969,
                                "src": "9976:25:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 37977,
                                "name": "maxExchangeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37963,
                                "src": "10005:17:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9976:46:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "&&",
                            "rightExpression": {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 37981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "id": 37979,
                                "name": "stableTokenExchangeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37969,
                                "src": "10036:25:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "argumentTypes": null,
                                "id": 37980,
                                "name": "minExchangeAmount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37961,
                                "src": "10065:17:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "10036:46:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "src": "9976:106:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "hexValue": "537461626c6520746f6b656e2065786368616e676520616d6f756e74206e6f742077697468696e206c696d697473",
                            "id": 37983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10092:48:126",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_abff683270a5c9e3636b2bef3a56099622c6c5e2bed3532270ab1542fc51361e",
                              "typeString": "literal_string \"Stable token exchange amount not within limits\""
                            },
                            "value": "Stable token exchange amount not within limits"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_abff683270a5c9e3636b2bef3a56099622c6c5e2bed3532270ab1542fc51361e",
                              "typeString": "literal_string \"Stable token exchange amount not within limits\""
                            }
                          ],
                          "id": 37975,
                          "name": "require",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [
                            45088,
                            45089
                          ],
                          "referencedDeclaration": 45089,
                          "src": "9959:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                            "typeString": "function (bool,string memory) pure"
                          }
                        },
                        "id": 37984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9959:189:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_tuple$__$",
                          "typeString": "tuple()"
                        }
                      },
                      "id": 37985,
                      "nodeType": "ExpressionStatement",
                      "src": "9959:189:126"
                    }
                  ]
                },
                {
                  "assignments": [
                    37988
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 37988,
                      "name": "sellToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 38071,
                      "src": "10199:16:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44421",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 37987,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 44421,
                        "src": "10199:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44421",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 37996,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "id": 37989,
                      "name": "sellCelo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37930,
                      "src": "10218:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 37993,
                          "name": "stableToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37938,
                          "src": "10253:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 37992,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 44421,
                        "src": "10246:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$44421_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 37994,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10246:19:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44421",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 37995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "10218:47:126",
                    "trueExpression": {
                      "argumentTypes": null,
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 37990,
                        "name": "getGoldToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 8480,
                        "src": "10229:12:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$44421_$",
                          "typeString": "function () view returns (contract IERC20)"
                        }
                      },
                      "id": 37991,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10229:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44421",
                        "typeString": "contract IERC20"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$44421",
                      "typeString": "contract IERC20"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10199:66:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 38000,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 45085,
                              "src": "10309:3:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 38001,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "10309:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 38003,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 45381,
                                "src": "10329:4:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_GrandaMento_$38813",
                                  "typeString": "contract GrandaMento"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_GrandaMento_$38813",
                                  "typeString": "contract GrandaMento"
                                }
                              ],
                              "id": 38002,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "10321:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": "address"
                            },
                            "id": 38004,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10321:13:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 38005,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37928,
                            "src": "10336:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 37998,
                            "name": "sellToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37988,
                            "src": "10286:9:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$44421",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 37999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transferFrom",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44404,
                          "src": "10286:22:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,address,uint256) external returns (bool)"
                          }
                        },
                        "id": 38006,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "10286:61:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e7366657220696e206f662073656c6c20746f6b656e206661696c6564",
                        "id": 38007,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10355:34:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8c3d3acf05ce3453d7e66bf75f2aa176fc296c2d3dc774cde7eabf241efe8438",
                          "typeString": "literal_string \"Transfer in of sell token failed\""
                        },
                        "value": "Transfer in of sell token failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8c3d3acf05ce3453d7e66bf75f2aa176fc296c2d3dc774cde7eabf241efe8438",
                          "typeString": "literal_string \"Transfer in of sell token failed\""
                        }
                      ],
                      "id": 37997,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "10271:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10271:124:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38009,
                  "nodeType": "ExpressionStatement",
                  "src": "10271:124:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38015,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38010,
                      "name": "exchangeProposalCount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37844,
                      "src": "10575:21:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 38013,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10625:1:126",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 38011,
                          "name": "exchangeProposalCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37844,
                          "src": "10599:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "add",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43669,
                        "src": "10599:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 38014,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10599:28:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10575:52:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38016,
                  "nodeType": "ExpressionStatement",
                  "src": "10575:52:126"
                },
                {
                  "assignments": [
                    38018
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38018,
                      "name": "storedSellAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 38071,
                      "src": "10713:24:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38017,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "10713:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38028,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "id": 38019,
                      "name": "sellCelo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37930,
                      "src": "10740:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 38025,
                          "name": "sellAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37928,
                          "src": "10815:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "id": 38022,
                              "name": "stableToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37938,
                              "src": "10789:11:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 38021,
                            "name": "IStableToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42885,
                            "src": "10776:12:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_IStableToken_$42885_$",
                              "typeString": "type(contract IStableToken)"
                            }
                          },
                          "id": 38023,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10776:25:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStableToken_$42885",
                            "typeString": "contract IStableToken"
                          }
                        },
                        "id": 38024,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "valueToUnits",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42859,
                        "src": "10776:38:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (uint256) view external returns (uint256)"
                        }
                      },
                      "id": 38026,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10776:50:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38027,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "10740:86:126",
                    "trueExpression": {
                      "argumentTypes": null,
                      "id": 38020,
                      "name": "sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37928,
                      "src": "10757:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10713:113:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38045,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 38029,
                        "name": "exchangeProposals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37839,
                        "src": "10832:17:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                          "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                        }
                      },
                      "id": 38031,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 38030,
                        "name": "exchangeProposalCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37844,
                        "src": "10850:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "10832:40:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                        "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38033,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45085,
                            "src": "10911:3:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 38034,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10911:10:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38035,
                          "name": "stableToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37938,
                          "src": "10942:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38036,
                            "name": "ExchangeProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37799,
                            "src": "10968:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                              "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                            }
                          },
                          "id": 38037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Proposed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "10968:30:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38038,
                          "name": "sellCelo",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37930,
                          "src": "11016:8:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38039,
                          "name": "storedSellAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38018,
                          "src": "11044:16:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38040,
                          "name": "buyAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37953,
                          "src": "11079:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38041,
                          "name": "celoStableTokenExchangeRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37945,
                          "src": "11125:27:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38042,
                          "name": "vetoPeriodSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37831,
                          "src": "11179:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 38043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11223:1:126",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address_payable",
                            "typeString": "address payable"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          },
                          {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 38032,
                        "name": "ExchangeProposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37823,
                        "src": "10875:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ExchangeProposal_$37823_storage_ptr_$",
                          "typeString": "type(struct GrandaMento.ExchangeProposal storage pointer)"
                        }
                      },
                      "id": 38044,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "exchanger",
                        "stableToken",
                        "state",
                        "sellCelo",
                        "sellAmount",
                        "buyAmount",
                        "celoStableTokenExchangeRate",
                        "vetoPeriodSeconds",
                        "approvalTimestamp"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "10875:395:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$37823_memory",
                        "typeString": "struct GrandaMento.ExchangeProposal memory"
                      }
                    },
                    "src": "10832:438:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                      "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                    }
                  },
                  "id": 38046,
                  "nodeType": "ExpressionStatement",
                  "src": "10832:438:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "baseExpression": {
                          "argumentTypes": null,
                          "id": 38048,
                          "name": "exchangeProposals",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37839,
                          "src": "11641:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                            "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                          }
                        },
                        "id": 38050,
                        "indexExpression": {
                          "argumentTypes": null,
                          "id": 38049,
                          "name": "exchangeProposalCount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37844,
                          "src": "11659:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11641:40:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                          "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                          "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                        }
                      ],
                      "id": 38047,
                      "name": "getSellTokenAndSellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38432,
                      "src": "11615:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ExchangeProposal_$37823_memory_ptr_$returns$_t_contract$_IERC20_$44421_$_t_uint256_$",
                        "typeString": "function (struct GrandaMento.ExchangeProposal memory) view returns (contract IERC20,uint256)"
                      }
                    },
                    "id": 38051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11615:67:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$44421_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20,uint256)"
                    }
                  },
                  "id": 38052,
                  "nodeType": "ExpressionStatement",
                  "src": "11615:67:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38056,
                        "name": "exchangeProposalCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37844,
                        "src": "11770:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 38053,
                        "name": "activeProposalIdsSuperset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37842,
                        "src": "11739:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 38055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "11739:30:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256) returns (uint256)"
                      }
                    },
                    "id": 38057,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11739:53:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38058,
                  "nodeType": "ExpressionStatement",
                  "src": "11739:53:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38060,
                        "name": "exchangeProposalCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37844,
                        "src": "11918:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38061,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 45085,
                          "src": "11947:3:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 38062,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "11947:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38063,
                        "name": "stableTokenRegistryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37926,
                        "src": "11965:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38064,
                        "name": "sellAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37928,
                        "src": "11994:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38065,
                        "name": "buyAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37953,
                        "src": "12012:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38066,
                        "name": "sellCelo",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37930,
                        "src": "12029:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 38059,
                      "name": "ExchangeProposalCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37757,
                      "src": "11887:23:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (uint256,address,string memory,uint256,uint256,bool)"
                      }
                    },
                    "id": 38067,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11887:156:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38068,
                  "nodeType": "EmitStatement",
                  "src": "11882:161:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38069,
                    "name": "exchangeProposalCount",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 37844,
                    "src": "12056:21:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 37936,
                  "id": 38070,
                  "nodeType": "Return",
                  "src": "12049:28:126"
                }
              ]
            },
            "documentation": "@notice Creates a new exchange proposal and deposits the tokens being sold.\n@dev Stable token value amounts are used for the sellAmount, not unit amounts.\n@param stableTokenRegistryId The string registry ID for the stable token\ninvolved in the exchange.\n@param sellAmount The amount of the sell token being sold.\n@param sellCelo Whether CELO is being sold.\n@return The proposal identifier for the newly created exchange proposal.",
            "id": 38072,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 37933,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 37932,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9717,
                  "src": "8891:12:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "8891:12:126"
              }
            ],
            "name": "createExchangeProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 37931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37926,
                  "name": "stableTokenRegistryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 38072,
                  "src": "8797:37:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 37925,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8797:6:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37928,
                  "name": "sellAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 38072,
                  "src": "8840:18:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37927,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8840:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 37930,
                  "name": "sellCelo",
                  "nodeType": "VariableDeclaration",
                  "scope": 38072,
                  "src": "8864:13:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 37929,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8864:4:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8791:90:126"
            },
            "returnParameters": {
              "id": 37936,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 37935,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38072,
                  "src": "8913:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 37934,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8913:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "8912:9:126"
            },
            "scope": 38813,
            "src": "8760:3322:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38171,
              "nodeType": "Block",
              "src": "12393:1258:126",
              "statements": [
                {
                  "assignments": [
                    38082
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38082,
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 38171,
                      "src": "12399:33:126",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                        "typeString": "struct GrandaMento.ExchangeProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38081,
                        "name": "ExchangeProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 37823,
                        "src": "12399:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38086,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 38083,
                      "name": "exchangeProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37839,
                      "src": "12435:17:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                        "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                      }
                    },
                    "id": 38085,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 38084,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38074,
                      "src": "12453:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12435:29:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                      "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12399:65:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                          "typeString": "enum GrandaMento.ExchangeProposalState"
                        },
                        "id": 38092,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38088,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38082,
                            "src": "12531:8:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                              "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                            }
                          },
                          "id": 38089,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37810,
                          "src": "12531:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38090,
                            "name": "ExchangeProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37799,
                            "src": "12549:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                              "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                            }
                          },
                          "id": 38091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Proposed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "12549:30:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          }
                        },
                        "src": "12531:48:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f706f73616c206d75737420626520696e2050726f706f736564207374617465",
                        "id": 38093,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12581:36:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5f07d250355247691ebfa293273b531c2088ec330ce34593573f341f0d9db861",
                          "typeString": "literal_string \"Proposal must be in Proposed state\""
                        },
                        "value": "Proposal must be in Proposed state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5f07d250355247691ebfa293273b531c2088ec330ce34593573f341f0d9db861",
                          "typeString": "literal_string \"Proposal must be in Proposed state\""
                        }
                      ],
                      "id": 38087,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "12523:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12523:95:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38095,
                  "nodeType": "ExpressionStatement",
                  "src": "12523:95:126"
                },
                {
                  "assignments": [
                    38099
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38099,
                      "name": "currentRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 38171,
                      "src": "12793:39:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38098,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2968,
                        "src": "12793:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38104,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38101,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38082,
                          "src": "12857:8:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                            "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                          }
                        },
                        "id": 38102,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "stableToken",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37808,
                        "src": "12857:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38100,
                      "name": "getOracleExchangeRate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38660,
                      "src": "12835:21:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (address) view returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 38103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12835:43:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12793:85:126"
                },
                {
                  "assignments": [
                    38108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38108,
                      "name": "proposalRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 38171,
                      "src": "12884:40:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38107,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2968,
                        "src": "12884:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38114,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38111,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38082,
                          "src": "12951:8:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                            "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                          }
                        },
                        "id": 38112,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "celoStableTokenExchangeRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37818,
                        "src": "12951:36:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 38109,
                        "name": "FixidityLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3567,
                        "src": "12927:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                          "typeString": "type(library FixidityLib)"
                        }
                      },
                      "id": 38110,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3001,
                      "src": "12927:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 38113,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12927:66:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12884:109:126"
                },
                {
                  "assignments": [
                    38118,
                    38120
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38118,
                      "name": "lesserRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 38171,
                      "src": "13000:38:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38117,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2968,
                        "src": "13000:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38120,
                      "name": "greaterRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 38171,
                      "src": "13040:39:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38119,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2968,
                        "src": "13040:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38132,
                  "initialValue": {
                    "argumentTypes": null,
                    "condition": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 38123,
                          "name": "proposalRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38108,
                          "src": "13105:12:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 38121,
                          "name": "currentRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38099,
                          "src": "13083:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        "id": 38122,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "lt",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3520,
                        "src": "13083:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                          "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                        }
                      },
                      "id": 38124,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "13083:35:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 38128,
                          "name": "proposalRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38108,
                          "src": "13164:12:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38129,
                          "name": "currentRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38099,
                          "src": "13178:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        }
                      ],
                      "id": 38130,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13163:27:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "tuple(struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 38131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "13083:107:126",
                    "trueExpression": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 38125,
                          "name": "currentRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38099,
                          "src": "13128:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38126,
                          "name": "proposalRate",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38108,
                          "src": "13141:12:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        }
                      ],
                      "id": 38127,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "13127:27:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "tuple(struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory)"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$",
                      "typeString": "tuple(struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12999:191:126"
                },
                {
                  "assignments": [
                    38136
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38136,
                      "name": "rateChange",
                      "nodeType": "VariableDeclaration",
                      "scope": 38171,
                      "src": "13196:38:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38135,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2968,
                        "src": "13196:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38144,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38142,
                        "name": "proposalRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38108,
                        "src": "13277:12:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38139,
                            "name": "lesserRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38118,
                            "src": "13258:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38137,
                            "name": "greaterRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38120,
                            "src": "13237:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 38138,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "subtract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3186,
                          "src": "13237:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_struct$_Fraction_$2968_memory_ptr_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 38140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13237:32:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 38141,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "divide",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3472,
                      "src": "13237:39:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_struct$_Fraction_$2968_memory_ptr_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 38143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13237:53:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13196:94:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38148,
                            "name": "maxApprovalExchangeRateChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37827,
                            "src": "13326:29:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38146,
                            "name": "rateChange",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38136,
                            "src": "13311:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 38147,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "lte",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3536,
                          "src": "13311:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_bool_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (bool)"
                          }
                        },
                        "id": 38149,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "13311:45:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "43454c4f2065786368616e6765207261746520697320746f6f20646966666572656e742066726f6d207468652070726f706f736564207072696365",
                        "id": 38150,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13364:61:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b0ac17e3919bdf22a49d2ef31bd4c38ec015be0b3ae601abd9de4a352dbf757b",
                          "typeString": "literal_string \"CELO exchange rate is too different from the proposed price\""
                        },
                        "value": "CELO exchange rate is too different from the proposed price"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b0ac17e3919bdf22a49d2ef31bd4c38ec015be0b3ae601abd9de4a352dbf757b",
                          "typeString": "literal_string \"CELO exchange rate is too different from the proposed price\""
                        }
                      ],
                      "id": 38145,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "13296:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13296:135:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38152,
                  "nodeType": "ExpressionStatement",
                  "src": "13296:135:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38153,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38082,
                        "src": "13502:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      },
                      "id": 38155,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "approvalTimestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37822,
                      "src": "13502:26:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38156,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 45075,
                        "src": "13531:5:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 38157,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13531:15:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13502:44:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38159,
                  "nodeType": "ExpressionStatement",
                  "src": "13502:44:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38165,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38160,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38082,
                        "src": "13552:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      },
                      "id": 38162,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37810,
                      "src": "13552:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38163,
                        "name": "ExchangeProposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37799,
                        "src": "13569:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                          "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                        }
                      },
                      "id": 38164,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Approved",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "13569:30:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "src": "13552:47:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                      "typeString": "enum GrandaMento.ExchangeProposalState"
                    }
                  },
                  "id": 38166,
                  "nodeType": "ExpressionStatement",
                  "src": "13552:47:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38168,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38074,
                        "src": "13635:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38167,
                      "name": "ExchangeProposalApproved",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37761,
                      "src": "13610:24:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38169,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13610:36:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38170,
                  "nodeType": "EmitStatement",
                  "src": "13605:41:126"
                }
              ]
            },
            "documentation": "@notice Approves an existing exchange proposal.\n@dev Sender must be the approver. Exchange proposal must be in the Proposed state.\n@param proposalId The identifier of the proposal to approve.",
            "id": 38172,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38077,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38076,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9717,
                  "src": "12367:12:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12367:12:126"
              },
              {
                "arguments": null,
                "id": 38079,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38078,
                  "name": "onlyApprover",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 37856,
                  "src": "12380:12:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "12380:12:126"
              }
            ],
            "name": "approveExchangeProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38075,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38074,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 38172,
                  "src": "12338:18:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38073,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12338:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "12337:20:126"
            },
            "returnParameters": {
              "id": 38080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12393:0:126"
            },
            "scope": 38813,
            "src": "12305:1346:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38248,
              "nodeType": "Block",
              "src": "13991:1123:126",
              "statements": [
                {
                  "assignments": [
                    38180
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38180,
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 38248,
                      "src": "13997:33:126",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                        "typeString": "struct GrandaMento.ExchangeProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38179,
                        "name": "ExchangeProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 37823,
                        "src": "13997:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38184,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 38181,
                      "name": "exchangeProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37839,
                      "src": "14033:17:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                        "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                      }
                    },
                    "id": 38183,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 38182,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38174,
                      "src": "14051:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14033:29:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                      "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13997:65:126"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                      "typeString": "enum GrandaMento.ExchangeProposalState"
                    },
                    "id": 38189,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38185,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38180,
                        "src": "14250:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      },
                      "id": 38186,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37810,
                      "src": "14250:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38187,
                        "name": "ExchangeProposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37799,
                        "src": "14268:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                          "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                        }
                      },
                      "id": 38188,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Proposed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14268:30:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "src": "14250:48:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "condition": {
                      "argumentTypes": null,
                      "commonType": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      },
                      "id": 38204,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38200,
                          "name": "proposal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38180,
                          "src": "14394:8:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                            "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                          }
                        },
                        "id": 38201,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "state",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37810,
                        "src": "14394:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                          "typeString": "enum GrandaMento.ExchangeProposalState"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38202,
                          "name": "ExchangeProposalState",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37799,
                          "src": "14412:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                            "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                          }
                        },
                        "id": 38203,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "Approved",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "14412:30:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                          "typeString": "enum GrandaMento.ExchangeProposalState"
                        }
                      },
                      "src": "14394:48:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseBody": {
                      "id": 38216,
                      "nodeType": "Block",
                      "src": "14507:71:126",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "hexValue": "50726f706f73616c206d75737420626520696e2050726f706f736564206f7220417070726f766564207374617465",
                                "id": 38213,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14522:48:126",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_91d3ace944acdf7d687a846eb2b5661f450ab871065be0f62adfff3bbd59ffb4",
                                  "typeString": "literal_string \"Proposal must be in Proposed or Approved state\""
                                },
                                "value": "Proposal must be in Proposed or Approved state"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_stringliteral_91d3ace944acdf7d687a846eb2b5661f450ab871065be0f62adfff3bbd59ffb4",
                                  "typeString": "literal_string \"Proposal must be in Proposed or Approved state\""
                                }
                              ],
                              "id": 38212,
                              "name": "revert",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                45090,
                                45091
                              ],
                              "referencedDeclaration": 45091,
                              "src": "14515:6:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (string memory) pure"
                              }
                            },
                            "id": 38214,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14515:56:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 38215,
                          "nodeType": "ExpressionStatement",
                          "src": "14515:56:126"
                        }
                      ]
                    },
                    "id": 38217,
                    "nodeType": "IfStatement",
                    "src": "14390:188:126",
                    "trueBody": {
                      "id": 38211,
                      "nodeType": "Block",
                      "src": "14444:57:126",
                      "statements": [
                        {
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 38206,
                                  "name": "isOwner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 43891,
                                  "src": "14460:7:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                                    "typeString": "function () view returns (bool)"
                                  }
                                },
                                "id": 38207,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14460:9:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "argumentTypes": null,
                                "hexValue": "53656e646572206d757374206265206f776e6572",
                                "id": 38208,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "14471:22:126",
                                "subdenomination": null,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_404c2168553dbdc824a22b8a75a593b364cc920eebfd6e09e56793693e59f693",
                                  "typeString": "literal_string \"Sender must be owner\""
                                },
                                "value": "Sender must be owner"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_404c2168553dbdc824a22b8a75a593b364cc920eebfd6e09e56793693e59f693",
                                  "typeString": "literal_string \"Sender must be owner\""
                                }
                              ],
                              "id": 38205,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                45088,
                                45089
                              ],
                              "referencedDeclaration": 45089,
                              "src": "14452:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 38209,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "14452:42:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 38210,
                          "nodeType": "ExpressionStatement",
                          "src": "14452:42:126"
                        }
                      ]
                    }
                  },
                  "id": 38218,
                  "nodeType": "IfStatement",
                  "src": "14246:332:126",
                  "trueBody": {
                    "id": 38199,
                    "nodeType": "Block",
                    "src": "14300:84:126",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "commonType": {
                                "typeIdentifier": "t_address_payable",
                                "typeString": "address payable"
                              },
                              "id": 38195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 38191,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38180,
                                  "src": "14316:8:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                    "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                  }
                                },
                                "id": 38192,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "exchanger",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 37806,
                                "src": "14316:18:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 38193,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 45085,
                                  "src": "14338:3:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 38194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": null,
                                "src": "14338:10:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "src": "14316:32:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "53656e646572206d7573742062652065786368616e676572",
                              "id": 38196,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14350:26:126",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0d0878d974f3ca893a13f341842199f45ffc8b0363faa926f8cac59e4e0ccf82",
                                "typeString": "literal_string \"Sender must be exchanger\""
                              },
                              "value": "Sender must be exchanger"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0d0878d974f3ca893a13f341842199f45ffc8b0363faa926f8cac59e4e0ccf82",
                                "typeString": "literal_string \"Sender must be exchanger\""
                              }
                            ],
                            "id": 38190,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              45088,
                              45089
                            ],
                            "referencedDeclaration": 45089,
                            "src": "14308:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 38197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14308:69:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38198,
                        "nodeType": "ExpressionStatement",
                        "src": "14308:69:126"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38219,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38180,
                        "src": "14680:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      },
                      "id": 38221,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37810,
                      "src": "14680:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38222,
                        "name": "ExchangeProposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37799,
                        "src": "14697:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                          "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                        }
                      },
                      "id": 38223,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Cancelled",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "14697:31:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "src": "14680:48:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                      "typeString": "enum GrandaMento.ExchangeProposalState"
                    }
                  },
                  "id": 38225,
                  "nodeType": "ExpressionStatement",
                  "src": "14680:48:126"
                },
                {
                  "assignments": [
                    38227,
                    38229
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38227,
                      "name": "refundToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 38248,
                      "src": "14806:18:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44421",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38226,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 44421,
                        "src": "14806:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44421",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38229,
                      "name": "refundAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 38248,
                      "src": "14826:20:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38228,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "14826:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38233,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38231,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38180,
                        "src": "14876:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      ],
                      "id": 38230,
                      "name": "getSellTokenAndSellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38432,
                      "src": "14850:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ExchangeProposal_$37823_memory_ptr_$returns$_t_contract$_IERC20_$44421_$_t_uint256_$",
                        "typeString": "function (struct GrandaMento.ExchangeProposal memory) view returns (contract IERC20,uint256)"
                      }
                    },
                    "id": 38232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14850:35:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$44421_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14805:80:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 38237,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38180,
                              "src": "14977:8:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                              }
                            },
                            "id": 38238,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "exchanger",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37806,
                            "src": "14977:18:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          },
                          {
                            "argumentTypes": null,
                            "id": 38239,
                            "name": "refundAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38229,
                            "src": "14997:12:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38235,
                            "name": "refundToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38227,
                            "src": "14956:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$44421",
                              "typeString": "contract IERC20"
                            }
                          },
                          "id": 38236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "transfer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 44375,
                          "src": "14956:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint256) external returns (bool)"
                          }
                        },
                        "id": 38240,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "14956:54:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5472616e73666572206f7574206f6620726566756e6420746f6b656e206661696c6564",
                        "id": 38241,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15018:37:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9a882f5283dfc7ded7f8414ccb91e66df6245ba57228b30beb7da35984b0f40",
                          "typeString": "literal_string \"Transfer out of refund token failed\""
                        },
                        "value": "Transfer out of refund token failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9a882f5283dfc7ded7f8414ccb91e66df6245ba57228b30beb7da35984b0f40",
                          "typeString": "literal_string \"Transfer out of refund token failed\""
                        }
                      ],
                      "id": 38234,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "14941:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38242,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14941:120:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38243,
                  "nodeType": "ExpressionStatement",
                  "src": "14941:120:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38245,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38174,
                        "src": "15098:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38244,
                      "name": "ExchangeProposalCancelled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37765,
                      "src": "15072:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15072:37:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38247,
                  "nodeType": "EmitStatement",
                  "src": "15067:42:126"
                }
              ]
            },
            "documentation": "@notice Cancels an exchange proposal.\n@dev Only callable by the exchanger if the proposal is in the Proposed state\nor the owner if the proposal is in the Approved state.\n@param proposalId The identifier of the proposal to cancel.",
            "id": 38249,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38177,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38176,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9717,
                  "src": "13978:12:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "13978:12:126"
              }
            ],
            "name": "cancelExchangeProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38174,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 38249,
                  "src": "13949:18:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13949:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "13948:20:126"
            },
            "returnParameters": {
              "id": 38178,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13991:0:126"
            },
            "scope": 38813,
            "src": "13917:1197:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38357,
              "nodeType": "Block",
              "src": "15501:1859:126",
              "statements": [
                {
                  "assignments": [
                    38257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38257,
                      "name": "proposal",
                      "nodeType": "VariableDeclaration",
                      "scope": 38357,
                      "src": "15507:33:126",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                        "typeString": "struct GrandaMento.ExchangeProposal"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38256,
                        "name": "ExchangeProposal",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 37823,
                        "src": "15507:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38261,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 38258,
                      "name": "exchangeProposals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37839,
                      "src": "15543:17:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                        "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                      }
                    },
                    "id": 38260,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 38259,
                      "name": "proposalId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38251,
                      "src": "15561:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "15543:29:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                      "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15507:65:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                          "typeString": "enum GrandaMento.ExchangeProposalState"
                        },
                        "id": 38267,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38263,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38257,
                            "src": "15645:8:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                              "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                            }
                          },
                          "id": 38264,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "state",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37810,
                          "src": "15645:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38265,
                            "name": "ExchangeProposalState",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37799,
                            "src": "15663:21:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                              "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                            }
                          },
                          "id": 38266,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "Approved",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "15663:30:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          }
                        },
                        "src": "15645:48:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "50726f706f73616c206d75737420626520696e20417070726f766564207374617465",
                        "id": 38268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15695:36:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6492cca35e68d90b1c479734012d7c4759c952cfee1ac9ddb401bb3fff651638",
                          "typeString": "literal_string \"Proposal must be in Approved state\""
                        },
                        "value": "Proposal must be in Approved state"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6492cca35e68d90b1c479734012d7c4759c952cfee1ac9ddb401bb3fff651638",
                          "typeString": "literal_string \"Proposal must be in Approved state\""
                        }
                      ],
                      "id": 38262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "15637:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38269,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15637:95:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38270,
                  "nodeType": "ExpressionStatement",
                  "src": "15637:95:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 38275,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38257,
                                "src": "15857:8:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                  "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                }
                              },
                              "id": 38276,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "vetoPeriodSeconds",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37820,
                              "src": "15857:26:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 38272,
                                "name": "proposal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38257,
                                "src": "15826:8:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                  "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                }
                              },
                              "id": 38273,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approvalTimestamp",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37822,
                              "src": "15826:26:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 38274,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43669,
                            "src": "15826:30:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                              "typeString": "function (uint256,uint256) pure returns (uint256)"
                            }
                          },
                          "id": 38277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "15826:58:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38278,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45075,
                            "src": "15888:5:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 38279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "15888:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15826:77:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5665746f20706572696f64206e6f7420656c6170736564",
                        "id": 38281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15911:25:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_d9adb9325f97705d5387db63be73967a449629e33d2c0e1b56671067dfa3d14f",
                          "typeString": "literal_string \"Veto period not elapsed\""
                        },
                        "value": "Veto period not elapsed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_d9adb9325f97705d5387db63be73967a449629e33d2c0e1b56671067dfa3d14f",
                          "typeString": "literal_string \"Veto period not elapsed\""
                        }
                      ],
                      "id": 38271,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "15811:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15811:131:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38283,
                  "nodeType": "ExpressionStatement",
                  "src": "15811:131:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38289,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38284,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38257,
                        "src": "16045:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      },
                      "id": 38286,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "state",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 37810,
                      "src": "16045:14:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38287,
                        "name": "ExchangeProposalState",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37799,
                        "src": "16062:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                          "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                        }
                      },
                      "id": 38288,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "Executed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "16062:30:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                        "typeString": "enum GrandaMento.ExchangeProposalState"
                      }
                    },
                    "src": "16045:47:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                      "typeString": "enum GrandaMento.ExchangeProposalState"
                    }
                  },
                  "id": 38290,
                  "nodeType": "ExpressionStatement",
                  "src": "16045:47:126"
                },
                {
                  "assignments": [
                    38292,
                    38294
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38292,
                      "name": "sellToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 38357,
                      "src": "16128:16:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44421",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38291,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 44421,
                        "src": "16128:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44421",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 38294,
                      "name": "sellAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 38357,
                      "src": "16146:18:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38293,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "16146:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38298,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38296,
                        "name": "proposal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38257,
                        "src": "16194:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                        }
                      ],
                      "id": 38295,
                      "name": "getSellTokenAndSellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38432,
                      "src": "16168:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_ExchangeProposal_$37823_memory_ptr_$returns$_t_contract$_IERC20_$44421_$_t_uint256_$",
                        "typeString": "function (struct GrandaMento.ExchangeProposal memory) view returns (contract IERC20,uint256)"
                      }
                    },
                    "id": 38297,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16168:35:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$44421_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20,uint256)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "16127:76:126"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 38299,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38257,
                      "src": "16351:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                        "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                      }
                    },
                    "id": 38300,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sellCelo",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37812,
                    "src": "16351:17:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 38351,
                    "nodeType": "Block",
                    "src": "16770:539:126",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "id": 38334,
                                  "name": "sellAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38294,
                                  "src": "17042:10:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 38330,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38257,
                                        "src": "17015:8:126",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                        }
                                      },
                                      "id": 38331,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "stableToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 37808,
                                      "src": "17015:20:126",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 38329,
                                    "name": "IStableToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42885,
                                    "src": "17002:12:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IStableToken_$42885_$",
                                      "typeString": "type(contract IStableToken)"
                                    }
                                  },
                                  "id": 38332,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17002:34:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStableToken_$42885",
                                    "typeString": "contract IStableToken"
                                  }
                                },
                                "id": 38333,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "burn",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 42845,
                                "src": "17002:39:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (uint256) external returns (bool)"
                                }
                              },
                              "id": 38335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17002:51:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "537461626c6520746f6b656e206275726e206661696c6564",
                              "id": 38336,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17055:26:126",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_efec162428556da2b45d085c1a911c7ef180d0382abc4781aed63a8187c50108",
                                "typeString": "literal_string \"Stable token burn failed\""
                              },
                              "value": "Stable token burn failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_efec162428556da2b45d085c1a911c7ef180d0382abc4781aed63a8187c50108",
                                "typeString": "literal_string \"Stable token burn failed\""
                              }
                            ],
                            "id": 38328,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              45088,
                              45089
                            ],
                            "referencedDeclaration": 45089,
                            "src": "16994:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 38337,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16994:88:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38338,
                        "nodeType": "ExpressionStatement",
                        "src": "16994:88:126"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 38343,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38257,
                                    "src": "17203:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                      "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                    }
                                  },
                                  "id": 38344,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "exchanger",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37806,
                                  "src": "17203:18:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 38345,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38257,
                                    "src": "17223:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                      "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                    }
                                  },
                                  "id": 38346,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37816,
                                  "src": "17223:18:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 38340,
                                    "name": "getReserve",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 8532,
                                    "src": "17169:10:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IReserve_$42751_$",
                                      "typeString": "function () view returns (contract IReserve)"
                                    }
                                  },
                                  "id": 38341,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "17169:12:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IReserve_$42751",
                                    "typeString": "contract IReserve"
                                  }
                                },
                                "id": 38342,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transferExchangeGold",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 42700,
                                "src": "17169:33:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address payable,uint256) external returns (bool)"
                                }
                              },
                              "id": 38347,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17169:73:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5472616e73666572206f7574206f662043454c4f2066726f6d2052657365727665206661696c6564",
                              "id": 38348,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17252:42:126",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b3166ce0190dbb91e92210474c455f5511f5a0a878da93f4f966137efc12b895",
                                "typeString": "literal_string \"Transfer out of CELO from Reserve failed\""
                              },
                              "value": "Transfer out of CELO from Reserve failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b3166ce0190dbb91e92210474c455f5511f5a0a878da93f4f966137efc12b895",
                                "typeString": "literal_string \"Transfer out of CELO from Reserve failed\""
                              }
                            ],
                            "id": 38339,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              45088,
                              45089
                            ],
                            "referencedDeclaration": 45089,
                            "src": "17152:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 38349,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17152:150:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38350,
                        "nodeType": "ExpressionStatement",
                        "src": "17152:150:126"
                      }
                    ]
                  },
                  "id": 38352,
                  "nodeType": "IfStatement",
                  "src": "16347:962:126",
                  "trueBody": {
                    "id": 38327,
                    "nodeType": "Block",
                    "src": "16370:394:126",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "id": 38305,
                                        "name": "getReserve",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 8532,
                                        "src": "16480:10:126",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IReserve_$42751_$",
                                          "typeString": "function () view returns (contract IReserve)"
                                        }
                                      },
                                      "id": 38306,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "16480:12:126",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IReserve_$42751",
                                        "typeString": "contract IReserve"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_IReserve_$42751",
                                        "typeString": "contract IReserve"
                                      }
                                    ],
                                    "id": 38304,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "16472:7:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": "address"
                                  },
                                  "id": 38307,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16472:21:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "id": 38308,
                                  "name": "sellAmount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38294,
                                  "src": "16495:10:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 38302,
                                  "name": "sellToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38292,
                                  "src": "16453:9:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$44421",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 38303,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "transfer",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 44375,
                                "src": "16453:18:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 38309,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16453:53:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "5472616e73666572206f7574206f662043454c4f20746f2052657365727665206661696c6564",
                              "id": 38310,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16516:40:126",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6fc922853d1b52a948a9059e822d355fcf8ace00967171f83e0cd00d5de8b72b",
                                "typeString": "literal_string \"Transfer out of CELO to Reserve failed\""
                              },
                              "value": "Transfer out of CELO to Reserve failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6fc922853d1b52a948a9059e822d355fcf8ace00967171f83e0cd00d5de8b72b",
                                "typeString": "literal_string \"Transfer out of CELO to Reserve failed\""
                              }
                            ],
                            "id": 38301,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              45088,
                              45089
                            ],
                            "referencedDeclaration": 45089,
                            "src": "16436:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 38311,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16436:128:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38312,
                        "nodeType": "ExpressionStatement",
                        "src": "16436:128:126"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [
                            {
                              "argumentTypes": null,
                              "arguments": [
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 38319,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38257,
                                    "src": "16674:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                      "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                    }
                                  },
                                  "id": 38320,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "exchanger",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37806,
                                  "src": "16674:18:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  }
                                },
                                {
                                  "argumentTypes": null,
                                  "expression": {
                                    "argumentTypes": null,
                                    "id": 38321,
                                    "name": "proposal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38257,
                                    "src": "16694:8:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                      "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                    }
                                  },
                                  "id": 38322,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "buyAmount",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 37816,
                                  "src": "16694:18:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address_payable",
                                    "typeString": "address payable"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": null,
                                  "arguments": [
                                    {
                                      "argumentTypes": null,
                                      "expression": {
                                        "argumentTypes": null,
                                        "id": 38315,
                                        "name": "proposal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 38257,
                                        "src": "16647:8:126",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                                          "typeString": "struct GrandaMento.ExchangeProposal storage pointer"
                                        }
                                      },
                                      "id": 38316,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "stableToken",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 37808,
                                      "src": "16647:20:126",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 38314,
                                    "name": "IStableToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42885,
                                    "src": "16634:12:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IStableToken_$42885_$",
                                      "typeString": "type(contract IStableToken)"
                                    }
                                  },
                                  "id": 38317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16634:34:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStableToken_$42885",
                                    "typeString": "contract IStableToken"
                                  }
                                },
                                "id": 38318,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "mint",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 42838,
                                "src": "16634:39:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 38323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16634:79:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "argumentTypes": null,
                              "hexValue": "537461626c6520746f6b656e206d696e74206661696c6564",
                              "id": 38324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16723:26:126",
                              "subdenomination": null,
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a5e1b1f0876e7b6c87ca8770e27a0603b7f7c4f2716d8c02c9fb21d8065e1d99",
                                "typeString": "literal_string \"Stable token mint failed\""
                              },
                              "value": "Stable token mint failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_a5e1b1f0876e7b6c87ca8770e27a0603b7f7c4f2716d8c02c9fb21d8065e1d99",
                                "typeString": "literal_string \"Stable token mint failed\""
                              }
                            ],
                            "id": 38313,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              45088,
                              45089
                            ],
                            "referencedDeclaration": 45089,
                            "src": "16617:7:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 38325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16617:140:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 38326,
                        "nodeType": "ExpressionStatement",
                        "src": "16617:140:126"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38354,
                        "name": "proposalId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38251,
                        "src": "17344:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38353,
                      "name": "ExchangeProposalExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37769,
                      "src": "17319:24:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38355,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17319:36:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38356,
                  "nodeType": "EmitStatement",
                  "src": "17314:41:126"
                }
              ]
            },
            "documentation": "@notice Executes an exchange proposal that's been approved and not vetoed.\n@dev Callable by anyone. Reverts if the proposal is not in the Approved state\nor proposal.vetoPeriodSeconds has not elapsed since approval.\n@param proposalId The identifier of the proposal to execute.",
            "id": 38358,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38254,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38253,
                  "name": "nonReentrant",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 9717,
                  "src": "15488:12:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "15488:12:126"
              }
            ],
            "name": "executeExchangeProposal",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38252,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38251,
                  "name": "proposalId",
                  "nodeType": "VariableDeclaration",
                  "scope": 38358,
                  "src": "15459:18:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38250,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15459:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "15458:20:126"
            },
            "returnParameters": {
              "id": 38255,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15501:0:126"
            },
            "scope": 38813,
            "src": "15426:1934:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38431,
              "nodeType": "Block",
              "src": "17864:1106:126",
              "statements": [
                {
                  "assignments": [
                    38368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38368,
                      "name": "sellToken",
                      "nodeType": "VariableDeclaration",
                      "scope": 38431,
                      "src": "17870:16:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$44421",
                        "typeString": "contract IERC20"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38367,
                        "name": "IERC20",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 44421,
                        "src": "17870:6:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44421",
                          "typeString": "contract IERC20"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38369,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17870:16:126"
                },
                {
                  "assignments": [
                    38371
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38371,
                      "name": "sellAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 38431,
                      "src": "17892:18:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38370,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17892:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38372,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17892:18:126"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 38373,
                      "name": "proposal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38360,
                      "src": "17920:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeProposal_$37823_memory_ptr",
                        "typeString": "struct GrandaMento.ExchangeProposal memory"
                      }
                    },
                    "id": 38374,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sellCelo",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 37812,
                    "src": "17920:17:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 38407,
                    "nodeType": "Block",
                    "src": "18026:305:126",
                    "statements": [
                      {
                        "assignments": [
                          38387
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 38387,
                            "name": "stableToken",
                            "nodeType": "VariableDeclaration",
                            "scope": 38407,
                            "src": "18034:19:126",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 38386,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "18034:7:126",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 38390,
                        "initialValue": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38388,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38360,
                            "src": "18056:8:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExchangeProposal_$37823_memory_ptr",
                              "typeString": "struct GrandaMento.ExchangeProposal memory"
                            }
                          },
                          "id": 38389,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "stableToken",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37808,
                          "src": "18056:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "18034:42:126"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 38395,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 38391,
                            "name": "sellToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38368,
                            "src": "18084:9:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$44421",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "id": 38393,
                                "name": "stableToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38387,
                                "src": "18103:11:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 38392,
                              "name": "IERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 44421,
                              "src": "18096:6:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IERC20_$44421_$",
                                "typeString": "type(contract IERC20)"
                              }
                            },
                            "id": 38394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18096:19:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$44421",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "18084:31:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$44421",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 38396,
                        "nodeType": "ExpressionStatement",
                        "src": "18084:31:126"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 38405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 38397,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38371,
                            "src": "18252:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [
                              {
                                "argumentTypes": null,
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 38402,
                                  "name": "proposal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38360,
                                  "src": "18304:8:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_ExchangeProposal_$37823_memory_ptr",
                                    "typeString": "struct GrandaMento.ExchangeProposal memory"
                                  }
                                },
                                "id": 38403,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sellAmount",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 37814,
                                "src": "18304:19:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "argumentTypes": null,
                                "arguments": [
                                  {
                                    "argumentTypes": null,
                                    "id": 38399,
                                    "name": "stableToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38387,
                                    "src": "18278:11:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 38398,
                                  "name": "IStableToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42885,
                                  "src": "18265:12:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IStableToken_$42885_$",
                                    "typeString": "type(contract IStableToken)"
                                  }
                                },
                                "id": 38400,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18265:25:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IStableToken_$42885",
                                  "typeString": "contract IStableToken"
                                }
                              },
                              "id": 38401,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "unitsToValue",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 42866,
                              "src": "18265:38:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_uint256_$",
                                "typeString": "function (uint256) view external returns (uint256)"
                              }
                            },
                            "id": 38404,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18265:59:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18252:72:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38406,
                        "nodeType": "ExpressionStatement",
                        "src": "18252:72:126"
                      }
                    ]
                  },
                  "id": 38408,
                  "nodeType": "IfStatement",
                  "src": "17916:415:126",
                  "trueBody": {
                    "id": 38385,
                    "nodeType": "Block",
                    "src": "17939:81:126",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 38378,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 38375,
                            "name": "sellToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38368,
                            "src": "17947:9:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$44421",
                              "typeString": "contract IERC20"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 38376,
                              "name": "getGoldToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 8480,
                              "src": "17959:12:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_IERC20_$44421_$",
                                "typeString": "function () view returns (contract IERC20)"
                              }
                            },
                            "id": 38377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "17959:14:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$44421",
                              "typeString": "contract IERC20"
                            }
                          },
                          "src": "17947:26:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$44421",
                            "typeString": "contract IERC20"
                          }
                        },
                        "id": 38379,
                        "nodeType": "ExpressionStatement",
                        "src": "17947:26:126"
                      },
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 38383,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 38380,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38371,
                            "src": "17981:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 38381,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38360,
                              "src": "17994:8:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExchangeProposal_$37823_memory_ptr",
                                "typeString": "struct GrandaMento.ExchangeProposal memory"
                              }
                            },
                            "id": 38382,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sellAmount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37814,
                            "src": "17994:19:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17981:32:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38384,
                        "nodeType": "ExpressionStatement",
                        "src": "17981:32:126"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    38410
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38410,
                      "name": "totalBalance",
                      "nodeType": "VariableDeclaration",
                      "scope": 38431,
                      "src": "18796:20:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38409,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "18796:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38417,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38414,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 45381,
                            "src": "18847:4:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_GrandaMento_$38813",
                              "typeString": "contract GrandaMento"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_GrandaMento_$38813",
                              "typeString": "contract GrandaMento"
                            }
                          ],
                          "id": 38413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "18839:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": "address"
                        },
                        "id": 38415,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "18839:13:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 38411,
                        "name": "sellToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38368,
                        "src": "18819:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44421",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 38412,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "balanceOf",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 44366,
                      "src": "18819:19:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                        "typeString": "function (address) view external returns (uint256)"
                      }
                    },
                    "id": 38416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18819:34:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "18796:57:126"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 38418,
                      "name": "totalBalance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38410,
                      "src": "18863:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 38419,
                      "name": "sellAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38371,
                      "src": "18878:10:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18863:25:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 38426,
                  "nodeType": "IfStatement",
                  "src": "18859:71:126",
                  "trueBody": {
                    "id": 38425,
                    "nodeType": "Block",
                    "src": "18890:40:126",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 38423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 38421,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38371,
                            "src": "18898:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "id": 38422,
                            "name": "totalBalance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38410,
                            "src": "18911:12:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "18898:25:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38424,
                        "nodeType": "ExpressionStatement",
                        "src": "18898:25:126"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "id": 38427,
                        "name": "sellToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38368,
                        "src": "18943:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$44421",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38428,
                        "name": "sellAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38371,
                        "src": "18954:10:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 38429,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "18942:23:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_contract$_IERC20_$44421_$_t_uint256_$",
                      "typeString": "tuple(contract IERC20,uint256)"
                    }
                  },
                  "functionReturnParameters": 38366,
                  "id": 38430,
                  "nodeType": "Return",
                  "src": "18935:30:126"
                }
              ]
            },
            "documentation": "@notice Gets the sell token and the sell amount for a proposal.\n@dev For stable token sell amounts that are stored as units, the value\nis returned. Ensures sell amount is not greater than this contract's balance.\n@param proposal The proposal to get the sell token and sell amount for.\n@return (the IERC20 sell token, the value sell amount).",
            "id": 38432,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSellTokenAndSellAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38360,
                  "name": "proposal",
                  "nodeType": "VariableDeclaration",
                  "scope": 38432,
                  "src": "17777:32:126",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ExchangeProposal_$37823_memory_ptr",
                    "typeString": "struct GrandaMento.ExchangeProposal"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 38359,
                    "name": "ExchangeProposal",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 37823,
                    "src": "17777:16:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage_ptr",
                      "typeString": "struct GrandaMento.ExchangeProposal"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17776:34:126"
            },
            "returnParameters": {
              "id": 38366,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38363,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38432,
                  "src": "17845:6:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$44421",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 38362,
                    "name": "IERC20",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 44421,
                    "src": "17845:6:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$44421",
                      "typeString": "contract IERC20"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38365,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38432,
                  "src": "17853:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38364,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17853:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "17844:17:126"
            },
            "scope": 38813,
            "src": "17742:1228:126",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 38486,
              "nodeType": "Block",
              "src": "19666:650:126",
              "statements": [
                {
                  "assignments": [
                    38446
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38446,
                      "name": "exchangeRate",
                      "nodeType": "VariableDeclaration",
                      "scope": 38486,
                      "src": "19672:40:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38445,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2968,
                        "src": "19672:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38451,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38449,
                        "name": "celoStableTokenExchangeRate",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38434,
                        "src": "19732:27:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "id": 38447,
                        "name": "FixidityLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 3567,
                        "src": "19715:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                          "typeString": "type(library FixidityLib)"
                        }
                      },
                      "id": 38448,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "wrap",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3001,
                      "src": "19715:16:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 38450,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19715:45:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19672:88:126"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "id": 38453,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "!",
                    "prefix": true,
                    "src": "19867:9:126",
                    "subExpression": {
                      "argumentTypes": null,
                      "id": 38452,
                      "name": "sellCelo",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38438,
                      "src": "19868:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 38461,
                  "nodeType": "IfStatement",
                  "src": "19863:70:126",
                  "trueBody": {
                    "id": 38460,
                    "nodeType": "Block",
                    "src": "19878:55:126",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 38458,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "id": 38454,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38446,
                            "src": "19886:12:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 38455,
                                "name": "exchangeRate",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38446,
                                "src": "19901:12:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                                  "typeString": "struct FixidityLib.Fraction memory"
                                }
                              },
                              "id": 38456,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "reciprocal",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 3430,
                              "src": "19901:23:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_struct$_Fraction_$2968_memory_ptr_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                                "typeString": "function (struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 38457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19901:25:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "src": "19886:40:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                            "typeString": "struct FixidityLib.Fraction memory"
                          }
                        },
                        "id": 38459,
                        "nodeType": "ExpressionStatement",
                        "src": "19886:40:126"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    38465
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38465,
                      "name": "adjustedSellAmount",
                      "nodeType": "VariableDeclaration",
                      "scope": 38486,
                      "src": "20030:46:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38464,
                        "name": "FixidityLib.Fraction",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 2968,
                        "src": "20030:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                          "typeString": "struct FixidityLib.Fraction"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38478,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38475,
                            "name": "sellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38436,
                            "src": "20154:10:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38473,
                            "name": "FixidityLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3567,
                            "src": "20133:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                              "typeString": "type(library FixidityLib)"
                            }
                          },
                          "id": 38474,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "newFixed",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3050,
                          "src": "20133:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 38476,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20133:32:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38470,
                            "name": "spread",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37829,
                            "src": "20109:6:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                              "typeString": "struct FixidityLib.Fraction storage ref"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "argumentTypes": null,
                                "id": 38466,
                                "name": "FixidityLib",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 3567,
                                "src": "20079:11:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                                  "typeString": "type(library FixidityLib)"
                                }
                              },
                              "id": 38467,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "fixed1",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2989,
                              "src": "20079:18:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                                "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                              }
                            },
                            "id": 38468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "20079:20:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 38469,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "subtract",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3186,
                          "src": "20079:29:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_struct$_Fraction_$2968_memory_ptr_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 38471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20079:37:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 38472,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "multiply",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3404,
                      "src": "20079:46:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_struct$_Fraction_$2968_memory_ptr_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 38477,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20079:92:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20030:141:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38481,
                            "name": "adjustedSellAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38465,
                            "src": "20280:18:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38479,
                            "name": "exchangeRate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38446,
                            "src": "20258:12:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                              "typeString": "struct FixidityLib.Fraction memory"
                            }
                          },
                          "id": 38480,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "multiply",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3404,
                          "src": "20258:21:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_struct$_Fraction_$2968_memory_ptr_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 38482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "20258:41:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 38483,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "fromFixed",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3063,
                      "src": "20258:51:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                      }
                    },
                    "id": 38484,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20258:53:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 38442,
                  "id": 38485,
                  "nodeType": "Return",
                  "src": "20251:60:126"
                }
              ]
            },
            "documentation": "@notice Using the oracle price, charges the spread and calculates the amount of\nthe asset being bought.\n@dev Stable token value amounts are used for the sellAmount, not unit amounts.\nAssumes both CELO and the stable token have 18 decimals.\n@param celoStableTokenExchangeRate The unwrapped fraction exchange rate of CELO\nquoted in the stable token.\n@param sellAmount The amount of the sell token being sold.\n@param sellCelo Whether CELO is being sold.\n@return The amount of the asset being bought.",
            "id": 38487,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getBuyAmount",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38439,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38434,
                  "name": "celoStableTokenExchangeRate",
                  "nodeType": "VariableDeclaration",
                  "scope": 38487,
                  "src": "19550:35:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38433,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19550:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38436,
                  "name": "sellAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 38487,
                  "src": "19587:18:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38435,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19587:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38438,
                  "name": "sellCelo",
                  "nodeType": "VariableDeclaration",
                  "scope": 38487,
                  "src": "19607:13:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 38437,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19607:4:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19549:72:126"
            },
            "returnParameters": {
              "id": 38442,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38441,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38487,
                  "src": "19655:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38440,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19655:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "19654:9:126"
            },
            "scope": 38813,
            "src": "19528:788:126",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38551,
              "nodeType": "Block",
              "src": "20700:767:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38496,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 38493,
                          "name": "index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38489,
                          "src": "20714:5:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38494,
                            "name": "activeProposalIdsSuperset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37842,
                            "src": "20722:25:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 38495,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": null,
                          "src": "20722:32:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "20714:40:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "496e646578206f7574206f6620626f756e6473",
                        "id": 38497,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "20756:21:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                          "typeString": "literal_string \"Index out of bounds\""
                        },
                        "value": "Index out of bounds"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dd00b67a545791a54dd99d9c09eb42099756ea4ee2bd47188784c22234589367",
                          "typeString": "literal_string \"Index out of bounds\""
                        }
                      ],
                      "id": 38492,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "20706:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38498,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20706:72:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38499,
                  "nodeType": "ExpressionStatement",
                  "src": "20706:72:126"
                },
                {
                  "assignments": [
                    38501
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38501,
                      "name": "proposalId",
                      "nodeType": "VariableDeclaration",
                      "scope": 38551,
                      "src": "20784:18:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38500,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "20784:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38505,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 38502,
                      "name": "activeProposalIdsSuperset",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37842,
                      "src": "20805:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                        "typeString": "uint256[] storage ref"
                      }
                    },
                    "id": 38504,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 38503,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38489,
                      "src": "20831:5:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "20805:32:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20784:53:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 38521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          },
                          "id": 38513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 38507,
                                "name": "exchangeProposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37839,
                                "src": "20911:17:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                                  "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                                }
                              },
                              "id": 38509,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 38508,
                                "name": "proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38501,
                                "src": "20929:10:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20911:29:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                                "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                              }
                            },
                            "id": 38510,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37810,
                            "src": "20911:35:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 38511,
                              "name": "ExchangeProposalState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37799,
                              "src": "20950:21:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                                "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                              }
                            },
                            "id": 38512,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Proposed",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "20950:30:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            }
                          },
                          "src": "20911:69:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                            "typeString": "enum GrandaMento.ExchangeProposalState"
                          },
                          "id": 38520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "baseExpression": {
                                "argumentTypes": null,
                                "id": 38514,
                                "name": "exchangeProposals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37839,
                                "src": "20992:17:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                                  "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                                }
                              },
                              "id": 38516,
                              "indexExpression": {
                                "argumentTypes": null,
                                "id": 38515,
                                "name": "proposalId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 38501,
                                "src": "21010:10:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "20992:29:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                                "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                              }
                            },
                            "id": 38517,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "state",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 37810,
                            "src": "20992:35:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "argumentTypes": null,
                            "expression": {
                              "argumentTypes": null,
                              "id": 38518,
                              "name": "ExchangeProposalState",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37799,
                              "src": "21031:21:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                                "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                              }
                            },
                            "id": 38519,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Approved",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": null,
                            "src": "21031:30:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            }
                          },
                          "src": "20992:69:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "20911:150:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "45786368616e67652070726f706f73616c206e6f7420696e616374697665",
                        "id": 38522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21069:32:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_56c29c7b37ffda0688125b531f5db03c5503cc91e651368e4740314f6992c046",
                          "typeString": "literal_string \"Exchange proposal not inactive\""
                        },
                        "value": "Exchange proposal not inactive"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_56c29c7b37ffda0688125b531f5db03c5503cc91e651368e4740314f6992c046",
                          "typeString": "literal_string \"Exchange proposal not inactive\""
                        }
                      ],
                      "id": 38506,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "20896:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20896:211:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38524,
                  "nodeType": "ExpressionStatement",
                  "src": "20896:211:126"
                },
                {
                  "assignments": [
                    38526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38526,
                      "name": "lastIndex",
                      "nodeType": "VariableDeclaration",
                      "scope": 38551,
                      "src": "21217:17:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38525,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "21217:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38532,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "hexValue": "31",
                        "id": 38530,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21274:1:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38527,
                          "name": "activeProposalIdsSuperset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37842,
                          "src": "21237:25:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 38528,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "21237:32:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 38529,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sub",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43685,
                      "src": "21237:36:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 38531,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21237:39:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "21217:59:126"
                },
                {
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38535,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 38533,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38489,
                      "src": "21286:5:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "id": 38534,
                      "name": "lastIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38526,
                      "src": "21294:9:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "21286:17:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": null,
                  "id": 38545,
                  "nodeType": "IfStatement",
                  "src": "21282:109:126",
                  "trueBody": {
                    "id": 38544,
                    "nodeType": "Block",
                    "src": "21305:86:126",
                    "statements": [
                      {
                        "expression": {
                          "argumentTypes": null,
                          "id": 38542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 38536,
                              "name": "activeProposalIdsSuperset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37842,
                              "src": "21313:25:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 38538,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 38537,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38489,
                              "src": "21339:5:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "21313:32:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "argumentTypes": null,
                            "baseExpression": {
                              "argumentTypes": null,
                              "id": 38539,
                              "name": "activeProposalIdsSuperset",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 37842,
                              "src": "21348:25:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                                "typeString": "uint256[] storage ref"
                              }
                            },
                            "id": 38541,
                            "indexExpression": {
                              "argumentTypes": null,
                              "id": 38540,
                              "name": "lastIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 38526,
                              "src": "21374:9:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "21348:36:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21313:71:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38543,
                        "nodeType": "ExpressionStatement",
                        "src": "21313:71:126"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38549,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "--",
                    "prefix": false,
                    "src": "21428:34:126",
                    "subExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38546,
                        "name": "activeProposalIdsSuperset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37842,
                        "src": "21428:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 38548,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "21428:32:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38550,
                  "nodeType": "ExpressionStatement",
                  "src": "21428:34:126"
                }
              ]
            },
            "documentation": "@notice Removes the proposal ID found at the provided index of activeProposalIdsSuperset\nif the exchange proposal is not active.\n@dev Anyone can call. Reverts if the exchange proposal is active.\n@param index The index of the proposal ID to remove from activeProposalIdsSuperset.",
            "id": 38552,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "removeFromActiveProposalIdsSuperset",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38489,
                  "name": "index",
                  "nodeType": "VariableDeclaration",
                  "scope": 38552,
                  "src": "20676:13:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20676:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "20675:15:126"
            },
            "returnParameters": {
              "id": 38491,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20700:0:126"
            },
            "scope": 38813,
            "src": "20631:836:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38617,
              "nodeType": "Block",
              "src": "21889:741:126",
              "statements": [
                {
                  "assignments": [
                    38561
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38561,
                      "name": "activeProposalIds",
                      "nodeType": "VariableDeclaration",
                      "scope": 38617,
                      "src": "22138:34:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38559,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22138:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38560,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "22138:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38568,
                  "initialValue": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38565,
                          "name": "activeProposalIdsSuperset",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 37842,
                          "src": "22189:25:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                            "typeString": "uint256[] storage ref"
                          }
                        },
                        "id": 38566,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "22189:32:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38564,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "22175:13:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 38562,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22179:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 38563,
                        "length": null,
                        "nodeType": "ArrayTypeName",
                        "src": "22179:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 38567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22175:47:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22138:84:126"
                },
                {
                  "body": {
                    "id": 38613,
                    "nodeType": "Block",
                    "src": "22301:295:126",
                    "statements": [
                      {
                        "assignments": [
                          38585
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 38585,
                            "name": "proposalId",
                            "nodeType": "VariableDeclaration",
                            "scope": 38613,
                            "src": "22309:18:126",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 38584,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "22309:7:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "value": null,
                            "visibility": "internal"
                          }
                        ],
                        "id": 38589,
                        "initialValue": {
                          "argumentTypes": null,
                          "baseExpression": {
                            "argumentTypes": null,
                            "id": 38586,
                            "name": "activeProposalIdsSuperset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 37842,
                            "src": "22330:25:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                              "typeString": "uint256[] storage ref"
                            }
                          },
                          "id": 38588,
                          "indexExpression": {
                            "argumentTypes": null,
                            "id": 38587,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38570,
                            "src": "22356:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "22330:28:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "22309:49:126"
                      },
                      {
                        "condition": {
                          "argumentTypes": null,
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 38604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            },
                            "id": 38596,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 38590,
                                  "name": "exchangeProposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37839,
                                  "src": "22379:17:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                                    "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                                  }
                                },
                                "id": 38592,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 38591,
                                  "name": "proposalId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38585,
                                  "src": "22397:10:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22379:29:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                                  "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                                }
                              },
                              "id": 38593,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "state",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37810,
                              "src": "22379:35:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                                "typeString": "enum GrandaMento.ExchangeProposalState"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 38594,
                                "name": "ExchangeProposalState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37799,
                                "src": "22418:21:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                                  "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                                }
                              },
                              "id": 38595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Proposed",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "22418:30:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                                "typeString": "enum GrandaMento.ExchangeProposalState"
                              }
                            },
                            "src": "22379:69:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "||",
                          "rightExpression": {
                            "argumentTypes": null,
                            "commonType": {
                              "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                              "typeString": "enum GrandaMento.ExchangeProposalState"
                            },
                            "id": 38603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "baseExpression": {
                                  "argumentTypes": null,
                                  "id": 38597,
                                  "name": "exchangeProposals",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 37839,
                                  "src": "22460:17:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_ExchangeProposal_$37823_storage_$",
                                    "typeString": "mapping(uint256 => struct GrandaMento.ExchangeProposal storage ref)"
                                  }
                                },
                                "id": 38599,
                                "indexExpression": {
                                  "argumentTypes": null,
                                  "id": 38598,
                                  "name": "proposalId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38585,
                                  "src": "22478:10:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "22460:29:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_ExchangeProposal_$37823_storage",
                                  "typeString": "struct GrandaMento.ExchangeProposal storage ref"
                                }
                              },
                              "id": 38600,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "state",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 37810,
                              "src": "22460:35:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                                "typeString": "enum GrandaMento.ExchangeProposalState"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "argumentTypes": null,
                              "expression": {
                                "argumentTypes": null,
                                "id": 38601,
                                "name": "ExchangeProposalState",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 37799,
                                "src": "22499:21:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_ExchangeProposalState_$37799_$",
                                  "typeString": "type(enum GrandaMento.ExchangeProposalState)"
                                }
                              },
                              "id": 38602,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "Approved",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": null,
                              "src": "22499:30:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_ExchangeProposalState_$37799",
                                "typeString": "enum GrandaMento.ExchangeProposalState"
                              }
                            },
                            "src": "22460:69:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "22379:150:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": null,
                        "id": 38612,
                        "nodeType": "IfStatement",
                        "src": "22366:224:126",
                        "trueBody": {
                          "id": 38611,
                          "nodeType": "Block",
                          "src": "22538:52:126",
                          "statements": [
                            {
                              "expression": {
                                "argumentTypes": null,
                                "id": 38609,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "argumentTypes": null,
                                  "baseExpression": {
                                    "argumentTypes": null,
                                    "id": 38605,
                                    "name": "activeProposalIds",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38561,
                                    "src": "22548:17:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 38607,
                                  "indexExpression": {
                                    "argumentTypes": null,
                                    "id": 38606,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 38570,
                                    "src": "22566:1:126",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "22548:20:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "argumentTypes": null,
                                  "id": 38608,
                                  "name": "proposalId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 38585,
                                  "src": "22571:10:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "22548:33:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 38610,
                              "nodeType": "ExpressionStatement",
                              "src": "22548:33:126"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "argumentTypes": null,
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 38576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "argumentTypes": null,
                      "id": 38573,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38570,
                      "src": "22249:1:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 38574,
                        "name": "activeProposalIdsSuperset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37842,
                        "src": "22253:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage",
                          "typeString": "uint256[] storage ref"
                        }
                      },
                      "id": 38575,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": null,
                      "src": "22253:32:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "22249:36:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 38614,
                  "initializationExpression": {
                    "assignments": [
                      38570
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 38570,
                        "name": "i",
                        "nodeType": "VariableDeclaration",
                        "scope": 38614,
                        "src": "22234:9:126",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 38569,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "22234:7:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "value": null,
                        "visibility": "internal"
                      }
                    ],
                    "id": 38572,
                    "initialValue": {
                      "argumentTypes": null,
                      "hexValue": "30",
                      "id": 38571,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "22246:1:126",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "22234:13:126"
                  },
                  "loopExpression": {
                    "expression": {
                      "argumentTypes": null,
                      "id": 38582,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "argumentTypes": null,
                        "id": 38577,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38570,
                        "src": "22287:1:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "=",
                      "rightHandSide": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "hexValue": "31",
                            "id": 38580,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "22297:1:126",
                            "subdenomination": null,
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38578,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38570,
                            "src": "22291:1:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 38579,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "add",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43669,
                          "src": "22291:5:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                            "typeString": "function (uint256,uint256) pure returns (uint256)"
                          }
                        },
                        "id": 38581,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "22291:8:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "22287:12:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38583,
                    "nodeType": "ExpressionStatement",
                    "src": "22287:12:126"
                  },
                  "nodeType": "ForStatement",
                  "src": "22229:367:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38615,
                    "name": "activeProposalIds",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 38561,
                    "src": "22608:17:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "functionReturnParameters": 38557,
                  "id": 38616,
                  "nodeType": "Return",
                  "src": "22601:24:126"
                }
              ]
            },
            "documentation": "@notice Gets the proposal identifiers of exchange proposals in the\nProposed or Approved state. Returns a version of activeProposalIdsSuperset\nwith inactive proposal IDs set as 0.\n@dev Elements with a proposal ID of 0 should be filtered out by the consumer.\n@return An array of active exchange proposals IDs.",
            "id": 38618,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getActiveProposalIds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38553,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21845:2:126"
            },
            "returnParameters": {
              "id": 38557,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38556,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38618,
                  "src": "21871:16:126",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 38554,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "21871:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 38555,
                    "length": null,
                    "nodeType": "ArrayTypeName",
                    "src": "21871:9:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "21870:18:126"
            },
            "scope": 38813,
            "src": "21816:814:126",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38659,
              "nodeType": "Block",
              "src": "23036:387:126",
              "statements": [
                {
                  "assignments": [
                    38626
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38626,
                      "name": "rateNumerator",
                      "nodeType": "VariableDeclaration",
                      "scope": 38659,
                      "src": "23042:21:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38625,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23042:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38627,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23042:21:126"
                },
                {
                  "assignments": [
                    38629
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38629,
                      "name": "rateDenominator",
                      "nodeType": "VariableDeclaration",
                      "scope": 38659,
                      "src": "23069:23:126",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 38628,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "23069:7:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38630,
                  "initialValue": null,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23069:23:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "components": [
                        {
                          "argumentTypes": null,
                          "id": 38631,
                          "name": "rateNumerator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38626,
                          "src": "23099:13:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38632,
                          "name": "rateDenominator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38629,
                          "src": "23114:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 38633,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "TupleExpression",
                      "src": "23098:32:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 38637,
                          "name": "stableToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38620,
                          "src": "23163:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 38634,
                            "name": "getSortedOracles",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 8545,
                            "src": "23133:16:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_contract$_ISortedOracles_$42827_$",
                              "typeString": "function () view returns (contract ISortedOracles)"
                            }
                          },
                          "id": 38635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23133:18:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_ISortedOracles_$42827",
                            "typeString": "contract ISortedOracles"
                          }
                        },
                        "id": 38636,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "medianRate",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 42812,
                        "src": "23133:29:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$_t_uint256_$",
                          "typeString": "function (address) view external returns (uint256,uint256)"
                        }
                      },
                      "id": 38638,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23133:42:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                        "typeString": "tuple(uint256,uint256)"
                      }
                    },
                    "src": "23098:77:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38640,
                  "nodeType": "ExpressionStatement",
                  "src": "23098:77:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 38642,
                          "name": "rateDenominator",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38629,
                          "src": "23275:15:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 38643,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23293:1:126",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "23275:19:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4e6f206f7261636c652072617465732070726573656e7420666f7220746f6b656e",
                        "id": 38645,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23296:35:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b7367d7d56c5f8cec11d2f702a1fadc61ae1a809eeeb3a70092f20e50e401cf7",
                          "typeString": "literal_string \"No oracle rates present for token\""
                        },
                        "value": "No oracle rates present for token"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b7367d7d56c5f8cec11d2f702a1fadc61ae1a809eeeb3a70092f20e50e401cf7",
                          "typeString": "literal_string \"No oracle rates present for token\""
                        }
                      ],
                      "id": 38641,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "23267:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23267:65:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38647,
                  "nodeType": "ExpressionStatement",
                  "src": "23267:65:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38655,
                            "name": "rateDenominator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38629,
                            "src": "23401:15:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38653,
                            "name": "FixidityLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3567,
                            "src": "23384:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                              "typeString": "type(library FixidityLib)"
                            }
                          },
                          "id": 38654,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wrap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3001,
                          "src": "23384:16:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 38656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23384:33:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      ],
                      "expression": {
                        "argumentTypes": null,
                        "arguments": [
                          {
                            "argumentTypes": null,
                            "id": 38650,
                            "name": "rateNumerator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38626,
                            "src": "23362:13:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "argumentTypes": null,
                            "id": 38648,
                            "name": "FixidityLib",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 3567,
                            "src": "23345:11:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                              "typeString": "type(library FixidityLib)"
                            }
                          },
                          "id": 38649,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wrap",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 3001,
                          "src": "23345:16:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                            "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                          }
                        },
                        "id": 38651,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23345:31:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                          "typeString": "struct FixidityLib.Fraction memory"
                        }
                      },
                      "id": 38652,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "divide",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 3472,
                      "src": "23345:38:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_struct$_Fraction_$2968_memory_ptr_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                        "typeString": "function (struct FixidityLib.Fraction memory,struct FixidityLib.Fraction memory) pure returns (struct FixidityLib.Fraction memory)"
                      }
                    },
                    "id": 38657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23345:73:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                      "typeString": "struct FixidityLib.Fraction memory"
                    }
                  },
                  "functionReturnParameters": 38624,
                  "id": 38658,
                  "nodeType": "Return",
                  "src": "23338:80:126"
                }
              ]
            },
            "documentation": "@notice Gets the oracle CELO price quoted in the stable token.\n@dev Reverts if there is not a rate for the provided stable token.\n@param stableToken The stable token to get the oracle price for.\n@return The oracle CELO price quoted in the stable token.",
            "id": 38660,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getOracleExchangeRate",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38621,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38620,
                  "name": "stableToken",
                  "nodeType": "VariableDeclaration",
                  "scope": 38660,
                  "src": "22950:19:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38619,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22950:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "22949:21:126"
            },
            "returnParameters": {
              "id": 38624,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38623,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38660,
                  "src": "23005:27:126",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                    "typeString": "struct FixidityLib.Fraction"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 38622,
                    "name": "FixidityLib.Fraction",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 2968,
                    "src": "23005:20:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_storage_ptr",
                      "typeString": "struct FixidityLib.Fraction"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23004:29:126"
            },
            "scope": 38813,
            "src": "22919:504:126",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "private"
          },
          {
            "body": {
              "id": 38689,
              "nodeType": "Block",
              "src": "23905:460:126",
              "statements": [
                {
                  "assignments": [
                    38670
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 38670,
                      "name": "exchangeLimits",
                      "nodeType": "VariableDeclaration",
                      "scope": 38689,
                      "src": "23911:36:126",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeLimits_$37804_memory_ptr",
                        "typeString": "struct GrandaMento.ExchangeLimits"
                      },
                      "typeName": {
                        "contractScope": null,
                        "id": 38669,
                        "name": "ExchangeLimits",
                        "nodeType": "UserDefinedTypeName",
                        "referencedDeclaration": 37804,
                        "src": "23911:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ExchangeLimits_$37804_storage_ptr",
                          "typeString": "struct GrandaMento.ExchangeLimits"
                        }
                      },
                      "value": null,
                      "visibility": "internal"
                    }
                  ],
                  "id": 38674,
                  "initialValue": {
                    "argumentTypes": null,
                    "baseExpression": {
                      "argumentTypes": null,
                      "id": 38671,
                      "name": "stableTokenExchangeLimits",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37835,
                      "src": "23950:25:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_ExchangeLimits_$37804_storage_$",
                        "typeString": "mapping(string memory => struct GrandaMento.ExchangeLimits storage ref)"
                      }
                    },
                    "id": 38673,
                    "indexExpression": {
                      "argumentTypes": null,
                      "id": 38672,
                      "name": "stableTokenRegistryId",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38662,
                      "src": "23976:21:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "23950:48:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeLimits_$37804_storage",
                      "typeString": "struct GrandaMento.ExchangeLimits storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23911:87:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 38676,
                            "name": "exchangeLimits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 38670,
                            "src": "24179:14:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ExchangeLimits_$37804_memory_ptr",
                              "typeString": "struct GrandaMento.ExchangeLimits memory"
                            }
                          },
                          "id": 38677,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "maxExchangeAmount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 37803,
                          "src": "24179:32:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "30",
                          "id": 38678,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "24214:1:126",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "24179:36:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d617820737461626c6520746f6b656e2065786368616e676520616d6f756e74206d75737420626520646566696e6564",
                        "id": 38680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "24223:50:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_79c687fe29e1c0c528f93c98d274726b3cd9195311965a3aaec2f4a0bc06595a",
                          "typeString": "literal_string \"Max stable token exchange amount must be defined\""
                        },
                        "value": "Max stable token exchange amount must be defined"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_79c687fe29e1c0c528f93c98d274726b3cd9195311965a3aaec2f4a0bc06595a",
                          "typeString": "literal_string \"Max stable token exchange amount must be defined\""
                        }
                      ],
                      "id": 38675,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "24164:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24164:115:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38682,
                  "nodeType": "ExpressionStatement",
                  "src": "24164:115:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "components": [
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38683,
                          "name": "exchangeLimits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38670,
                          "src": "24293:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeLimits_$37804_memory_ptr",
                            "typeString": "struct GrandaMento.ExchangeLimits memory"
                          }
                        },
                        "id": 38684,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "minExchangeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37801,
                        "src": "24293:32:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 38685,
                          "name": "exchangeLimits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38670,
                          "src": "24327:14:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ExchangeLimits_$37804_memory_ptr",
                            "typeString": "struct GrandaMento.ExchangeLimits memory"
                          }
                        },
                        "id": 38686,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "maxExchangeAmount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 37803,
                        "src": "24327:32:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "id": 38687,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "24292:68:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$",
                      "typeString": "tuple(uint256,uint256)"
                    }
                  },
                  "functionReturnParameters": 38668,
                  "id": 38688,
                  "nodeType": "Return",
                  "src": "24285:75:126"
                }
              ]
            },
            "documentation": "@notice Gets the minimum and maximum amount of a stable token that can be\ninvolved in a single exchange.\n@dev Reverts if there is no explicit exchange limit for the stable token.\n@param stableTokenRegistryId The string registry ID for the stable token.\n@return (minimum exchange amount, maximum exchange amount).",
            "id": 38690,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getStableTokenExchangeLimits",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38662,
                  "name": "stableTokenRegistryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 38690,
                  "src": "23815:35:126",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 38661,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "23815:6:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23814:37:126"
            },
            "returnParameters": {
              "id": 38668,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38665,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38690,
                  "src": "23885:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38664,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23885:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38667,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 38690,
                  "src": "23894:7:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38666,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23894:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "23884:18:126"
            },
            "scope": 38813,
            "src": "23777:588:126",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38705,
              "nodeType": "Block",
              "src": "24602:68:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38699,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38697,
                      "name": "approver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37825,
                      "src": "24608:8:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 38698,
                      "name": "newApprover",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38692,
                      "src": "24619:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "24608:22:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 38700,
                  "nodeType": "ExpressionStatement",
                  "src": "24608:22:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38702,
                        "name": "newApprover",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38692,
                        "src": "24653:11:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 38701,
                      "name": "ApproverSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37773,
                      "src": "24641:11:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 38703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "24641:24:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38704,
                  "nodeType": "EmitStatement",
                  "src": "24636:29:126"
                }
              ]
            },
            "documentation": "@notice Sets the approver.\n@dev Sender must be owner. New approver is allowed to be address(0).\n@param newApprover The new value for the approver.",
            "id": 38706,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38695,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38694,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43880,
                  "src": "24592:9:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "24592:9:126"
              }
            ],
            "name": "setApprover",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38693,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38692,
                  "name": "newApprover",
                  "nodeType": "VariableDeclaration",
                  "scope": 38706,
                  "src": "24564:19:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 38691,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "24564:7:126",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "24563:21:126"
            },
            "returnParameters": {
              "id": 38696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "24602:0:126"
            },
            "scope": 38813,
            "src": "24543:127:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38724,
              "nodeType": "Block",
              "src": "25125:170:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38713,
                      "name": "maxApprovalExchangeRateChange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37827,
                      "src": "25131:29:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                        "typeString": "struct FixidityLib.Fraction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 38716,
                          "name": "newMaxApprovalExchangeRateChange",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38708,
                          "src": "25180:32:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 38714,
                          "name": "FixidityLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3567,
                          "src": "25163:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                            "typeString": "type(library FixidityLib)"
                          }
                        },
                        "id": 38715,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wrap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3001,
                        "src": "25163:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 38717,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25163:50:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "src": "25131:82:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                      "typeString": "struct FixidityLib.Fraction storage ref"
                    }
                  },
                  "id": 38719,
                  "nodeType": "ExpressionStatement",
                  "src": "25131:82:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38721,
                        "name": "newMaxApprovalExchangeRateChange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38708,
                        "src": "25257:32:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38720,
                      "name": "MaxApprovalExchangeRateChangeSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37777,
                      "src": "25224:32:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25224:66:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38723,
                  "nodeType": "EmitStatement",
                  "src": "25219:71:126"
                }
              ]
            },
            "documentation": "@notice Sets the maximum allowed change in the CELO/stable token price when\nan exchange proposal is being approved relative to the price when the proposal\nwas created.\n@dev Sender must be owner.\n@param newMaxApprovalExchangeRateChange The new value for maxApprovalExchangeRateChange\nto be wrapped.",
            "id": 38725,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38711,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38710,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43880,
                  "src": "25113:9:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "25113:9:126"
              }
            ],
            "name": "setMaxApprovalExchangeRateChange",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38709,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38708,
                  "name": "newMaxApprovalExchangeRateChange",
                  "nodeType": "VariableDeclaration",
                  "scope": 38725,
                  "src": "25056:40:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38707,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25056:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25055:42:126"
            },
            "returnParameters": {
              "id": 38712,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25125:0:126"
            },
            "scope": 38813,
            "src": "25014:281:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38754,
              "nodeType": "Block",
              "src": "25514:168:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 38733,
                          "name": "newSpread",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38727,
                          "src": "25528:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "argumentTypes": null,
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "expression": {
                                  "argumentTypes": null,
                                  "id": 38734,
                                  "name": "FixidityLib",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 3567,
                                  "src": "25541:11:126",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                                    "typeString": "type(library FixidityLib)"
                                  }
                                },
                                "id": 38735,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "fixed1",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2989,
                                "src": "25541:18:126",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                                  "typeString": "function () pure returns (struct FixidityLib.Fraction memory)"
                                }
                              },
                              "id": 38736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "25541:20:126",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                                "typeString": "struct FixidityLib.Fraction memory"
                              }
                            },
                            "id": 38737,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "unwrap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 3012,
                            "src": "25541:27:126",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_Fraction_$2968_memory_ptr_$returns$_t_uint256_$bound_to$_t_struct$_Fraction_$2968_memory_ptr_$",
                              "typeString": "function (struct FixidityLib.Fraction memory) pure returns (uint256)"
                            }
                          },
                          "id": 38738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25541:29:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25528:42:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "537072656164206d75737420626520736d616c6c6572207468616e2031",
                        "id": 38740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25572:31:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4ebe8fd080937c2aa0fb61e021581458a09554c648b508b19824ba5cdb4869ee",
                          "typeString": "literal_string \"Spread must be smaller than 1\""
                        },
                        "value": "Spread must be smaller than 1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4ebe8fd080937c2aa0fb61e021581458a09554c648b508b19824ba5cdb4869ee",
                          "typeString": "literal_string \"Spread must be smaller than 1\""
                        }
                      ],
                      "id": 38732,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "25520:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25520:84:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38742,
                  "nodeType": "ExpressionStatement",
                  "src": "25520:84:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38743,
                      "name": "spread",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37829,
                      "src": "25610:6:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                        "typeString": "struct FixidityLib.Fraction storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 38746,
                          "name": "newSpread",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38727,
                          "src": "25636:9:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "id": 38744,
                          "name": "FixidityLib",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 3567,
                          "src": "25619:11:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FixidityLib_$3567_$",
                            "typeString": "type(library FixidityLib)"
                          }
                        },
                        "id": 38745,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "wrap",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 3001,
                        "src": "25619:16:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_struct$_Fraction_$2968_memory_ptr_$",
                          "typeString": "function (uint256) pure returns (struct FixidityLib.Fraction memory)"
                        }
                      },
                      "id": 38747,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "25619:27:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Fraction_$2968_memory_ptr",
                        "typeString": "struct FixidityLib.Fraction memory"
                      }
                    },
                    "src": "25610:36:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Fraction_$2968_storage",
                      "typeString": "struct FixidityLib.Fraction storage ref"
                    }
                  },
                  "id": 38749,
                  "nodeType": "ExpressionStatement",
                  "src": "25610:36:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38751,
                        "name": "newSpread",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38727,
                        "src": "25667:9:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38750,
                      "name": "SpreadSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37781,
                      "src": "25657:9:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38752,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25657:20:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38753,
                  "nodeType": "EmitStatement",
                  "src": "25652:25:126"
                }
              ]
            },
            "documentation": "@notice Sets the spread.\n@dev Sender must be owner.\n@param newSpread The new value for the spread to be wrapped. Must be <= fixed 1.",
            "id": 38755,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38730,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38729,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43880,
                  "src": "25504:9:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "25504:9:126"
              }
            ],
            "name": "setSpread",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38728,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38727,
                  "name": "newSpread",
                  "nodeType": "VariableDeclaration",
                  "scope": 38755,
                  "src": "25478:17:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38726,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "25478:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "25477:19:126"
            },
            "returnParameters": {
              "id": 38731,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25514:0:126"
            },
            "scope": 38813,
            "src": "25459:223:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          },
          {
            "body": {
              "id": 38788,
              "nodeType": "Block",
              "src": "26354:395:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38769,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 38767,
                          "name": "minExchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38759,
                          "src": "26375:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 38768,
                          "name": "maxExchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38761,
                          "src": "26396:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "26375:38:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "4d696e2065786368616e676520616d6f756e74206d757374206e6f742062652067726561746572207468616e206d6178",
                        "id": 38770,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "26421:50:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_55b505c4d68020c2e891038105b4f4ecd9a61ba2e1c7341c64d391411c6f4c2e",
                          "typeString": "literal_string \"Min exchange amount must not be greater than max\""
                        },
                        "value": "Min exchange amount must not be greater than max"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_55b505c4d68020c2e891038105b4f4ecd9a61ba2e1c7341c64d391411c6f4c2e",
                          "typeString": "literal_string \"Min exchange amount must not be greater than max\""
                        }
                      ],
                      "id": 38766,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "26360:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26360:117:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38772,
                  "nodeType": "ExpressionStatement",
                  "src": "26360:117:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38780,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 38773,
                        "name": "stableTokenExchangeLimits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37835,
                        "src": "26483:25:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_$_t_struct$_ExchangeLimits_$37804_storage_$",
                          "typeString": "mapping(string memory => struct GrandaMento.ExchangeLimits storage ref)"
                        }
                      },
                      "id": 38775,
                      "indexExpression": {
                        "argumentTypes": null,
                        "id": 38774,
                        "name": "stableTokenRegistryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38757,
                        "src": "26509:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "26483:48:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeLimits_$37804_storage",
                        "typeString": "struct GrandaMento.ExchangeLimits storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "id": 38777,
                          "name": "minExchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38759,
                          "src": "26576:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "argumentTypes": null,
                          "id": 38778,
                          "name": "maxExchangeAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38761,
                          "src": "26620:17:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 38776,
                        "name": "ExchangeLimits",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 37804,
                        "src": "26534:14:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ExchangeLimits_$37804_storage_ptr_$",
                          "typeString": "type(struct GrandaMento.ExchangeLimits storage pointer)"
                        }
                      },
                      "id": 38779,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "minExchangeAmount",
                        "maxExchangeAmount"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "26534:110:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ExchangeLimits_$37804_memory",
                        "typeString": "struct GrandaMento.ExchangeLimits memory"
                      }
                    },
                    "src": "26483:161:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ExchangeLimits_$37804_storage",
                      "typeString": "struct GrandaMento.ExchangeLimits storage ref"
                    }
                  },
                  "id": 38781,
                  "nodeType": "ExpressionStatement",
                  "src": "26483:161:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38783,
                        "name": "stableTokenRegistryId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38757,
                        "src": "26684:21:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38784,
                        "name": "minExchangeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38759,
                        "src": "26707:17:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "id": 38785,
                        "name": "maxExchangeAmount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38761,
                        "src": "26726:17:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38782,
                      "name": "StableTokenExchangeLimitsSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37793,
                      "src": "26655:28:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,uint256,uint256)"
                      }
                    },
                    "id": 38786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26655:89:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38787,
                  "nodeType": "EmitStatement",
                  "src": "26650:94:126"
                }
              ]
            },
            "documentation": "@notice Sets the minimum and maximum amount of the stable token an exchange can involve.\n@dev Sender must be owner. Setting the maxExchangeAmount to 0 effectively disables new\nexchange proposals for the token.\n@param stableTokenRegistryId The registry ID string for the stable token to set limits for.\n@param minExchangeAmount The new minimum exchange amount for the stable token.\n@param maxExchangeAmount The new maximum exchange amount for the stable token.",
            "id": 38789,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38764,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38763,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43880,
                  "src": "26344:9:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "26344:9:126"
              }
            ],
            "name": "setStableTokenExchangeLimits",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38762,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38757,
                  "name": "stableTokenRegistryId",
                  "nodeType": "VariableDeclaration",
                  "scope": 38789,
                  "src": "26231:37:126",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 38756,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "26231:6:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38759,
                  "name": "minExchangeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 38789,
                  "src": "26274:25:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26274:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 38761,
                  "name": "maxExchangeAmount",
                  "nodeType": "VariableDeclaration",
                  "scope": 38789,
                  "src": "26305:25:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38760,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26305:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26225:109:126"
            },
            "returnParameters": {
              "id": 38765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26354:0:126"
            },
            "scope": 38813,
            "src": "26188:561:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "external"
          },
          {
            "body": {
              "id": 38811,
              "nodeType": "Block",
              "src": "26999:414:126",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 38799,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 38797,
                          "name": "newVetoPeriodSeconds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 38791,
                          "src": "27240:20:126",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "hexValue": "34",
                          "id": 38798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "27264:7:126",
                          "subdenomination": "weeks",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2419200_by_1",
                            "typeString": "int_const 2419200"
                          },
                          "value": "4"
                        },
                        "src": "27240:31:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "argumentTypes": null,
                        "hexValue": "5665746f20706572696f642063616e6e6f74206578636565642034207765656b73",
                        "id": 38800,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "27273:35:126",
                        "subdenomination": null,
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_dbb965376e8cf5f333b57ce44de7c4b8880c6cfb990bd33179bafc5d0b6bc178",
                          "typeString": "literal_string \"Veto period cannot exceed 4 weeks\""
                        },
                        "value": "Veto period cannot exceed 4 weeks"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_dbb965376e8cf5f333b57ce44de7c4b8880c6cfb990bd33179bafc5d0b6bc178",
                          "typeString": "literal_string \"Veto period cannot exceed 4 weeks\""
                        }
                      ],
                      "id": 38796,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        45088,
                        45089
                      ],
                      "referencedDeclaration": 45089,
                      "src": "27232:7:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 38801,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27232:77:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38802,
                  "nodeType": "ExpressionStatement",
                  "src": "27232:77:126"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 38805,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 38803,
                      "name": "vetoPeriodSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37831,
                      "src": "27315:17:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 38804,
                      "name": "newVetoPeriodSeconds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 38791,
                      "src": "27335:20:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "27315:40:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 38806,
                  "nodeType": "ExpressionStatement",
                  "src": "27315:40:126"
                },
                {
                  "eventCall": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "id": 38808,
                        "name": "newVetoPeriodSeconds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 38791,
                        "src": "27387:20:126",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 38807,
                      "name": "VetoPeriodSecondsSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 37785,
                      "src": "27366:20:126",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 38809,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27366:42:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 38810,
                  "nodeType": "EmitStatement",
                  "src": "27361:47:126"
                }
              ]
            },
            "documentation": "@notice Sets the veto period in seconds.\n@dev Sender must be owner.\n@param newVetoPeriodSeconds The new value for the veto period in seconds.",
            "id": 38812,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": null,
                "id": 38794,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 38793,
                  "name": "onlyOwner",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 43880,
                  "src": "26989:9:126",
                  "typeDescriptions": {
                    "typeIdentifier": "t_modifier$__$",
                    "typeString": "modifier ()"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "26989:9:126"
              }
            ],
            "name": "setVetoPeriodSeconds",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 38792,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 38791,
                  "name": "newVetoPeriodSeconds",
                  "nodeType": "VariableDeclaration",
                  "scope": 38812,
                  "src": "26952:28:126",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 38790,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "26952:7:126",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "26951:30:126"
            },
            "returnParameters": {
              "id": 38795,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "26999:0:126"
            },
            "scope": 38813,
            "src": "26922:491:126",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 38814,
        "src": "497:26918:126"
      }
    ],
    "src": "0:27416:126"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.13+commit.5b0b510c.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.0.23",
  "updatedAt": "2022-05-06T03:53:13.058Z",
  "devdoc": {
    "methods": {
      "approveExchangeProposal(uint256)": {
        "details": "Sender must be the approver. Exchange proposal must be in the Proposed state.",
        "params": {
          "proposalId": "The identifier of the proposal to approve."
        }
      },
      "cancelExchangeProposal(uint256)": {
        "details": "Only callable by the exchanger if the proposal is in the Proposed state or the owner if the proposal is in the Approved state.",
        "params": {
          "proposalId": "The identifier of the proposal to cancel."
        }
      },
      "constructor": {
        "params": {
          "test": "Set to true to skip implementation initialization."
        }
      },
      "createExchangeProposal(string,uint256,bool)": {
        "details": "Stable token value amounts are used for the sellAmount, not unit amounts.",
        "params": {
          "sellAmount": "The amount of the sell token being sold.",
          "sellCelo": "Whether CELO is being sold.",
          "stableTokenRegistryId": "The string registry ID for the stable token involved in the exchange."
        },
        "return": "The proposal identifier for the newly created exchange proposal."
      },
      "executeExchangeProposal(uint256)": {
        "details": "Callable by anyone. Reverts if the proposal is not in the Approved state or proposal.vetoPeriodSeconds has not elapsed since approval.",
        "params": {
          "proposalId": "The identifier of the proposal to execute."
        }
      },
      "getActiveProposalIds()": {
        "details": "Elements with a proposal ID of 0 should be filtered out by the consumer.",
        "return": "An array of active exchange proposals IDs."
      },
      "getBuyAmount(uint256,uint256,bool)": {
        "details": "Stable token value amounts are used for the sellAmount, not unit amounts. Assumes both CELO and the stable token have 18 decimals.",
        "params": {
          "celoStableTokenExchangeRate": "The unwrapped fraction exchange rate of CELO quoted in the stable token.",
          "sellAmount": "The amount of the sell token being sold.",
          "sellCelo": "Whether CELO is being sold."
        },
        "return": "The amount of the asset being bought."
      },
      "getStableTokenExchangeLimits(string)": {
        "details": "Reverts if there is no explicit exchange limit for the stable token.",
        "params": {
          "stableTokenRegistryId": "The string registry ID for the stable token."
        },
        "return": "(minimum exchange amount, maximum exchange amount)."
      },
      "getVersionNumber()": {
        "return": "The storage, major, minor, and patch version of the contract."
      },
      "initialize(address,address,uint256,uint256,uint256)": {
        "params": {
          "_approver": "The approver that has the ability to approve exchange proposals.",
          "_maxApprovalExchangeRateChange": "The maximum allowed change in CELO price between an exchange proposal's creation and approval.",
          "_registry": "The address of the registry.",
          "_spread": "The spread charged on exchanges.",
          "_vetoPeriodSeconds": "The length of the veto period in seconds."
        }
      },
      "isOwner()": {
        "details": "Returns true if the caller is the current owner."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "removeFromActiveProposalIdsSuperset(uint256)": {
        "details": "Anyone can call. Reverts if the exchange proposal is active.",
        "params": {
          "index": "The index of the proposal ID to remove from activeProposalIdsSuperset."
        }
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner.     * NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "setApprover(address)": {
        "details": "Sender must be owner. New approver is allowed to be address(0).",
        "params": {
          "newApprover": "The new value for the approver."
        }
      },
      "setMaxApprovalExchangeRateChange(uint256)": {
        "details": "Sender must be owner.",
        "params": {
          "newMaxApprovalExchangeRateChange": "The new value for maxApprovalExchangeRateChange to be wrapped."
        }
      },
      "setRegistry(address)": {
        "params": {
          "registryAddress": "The address of a registry contract for routing to other contracts."
        }
      },
      "setSpread(uint256)": {
        "details": "Sender must be owner.",
        "params": {
          "newSpread": "The new value for the spread to be wrapped. Must be <= fixed 1."
        }
      },
      "setStableTokenExchangeLimits(string,uint256,uint256)": {
        "details": "Sender must be owner. Setting the maxExchangeAmount to 0 effectively disables new exchange proposals for the token.",
        "params": {
          "maxExchangeAmount": "The new maximum exchange amount for the stable token.",
          "minExchangeAmount": "The new minimum exchange amount for the stable token.",
          "stableTokenRegistryId": "The registry ID string for the stable token to set limits for."
        }
      },
      "setVetoPeriodSeconds(uint256)": {
        "details": "Sender must be owner.",
        "params": {
          "newVetoPeriodSeconds": "The new value for the veto period in seconds."
        }
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "Facilitates large exchanges between CELO stable tokens."
  },
  "userdoc": {
    "methods": {
      "approveExchangeProposal(uint256)": {
        "notice": "Approves an existing exchange proposal."
      },
      "cancelExchangeProposal(uint256)": {
        "notice": "Cancels an exchange proposal."
      },
      "constructor": "Sets initialized == true on implementation contracts.",
      "createExchangeProposal(string,uint256,bool)": {
        "notice": "Creates a new exchange proposal and deposits the tokens being sold."
      },
      "executeExchangeProposal(uint256)": {
        "notice": "Executes an exchange proposal that's been approved and not vetoed."
      },
      "getActiveProposalIds()": {
        "notice": "Gets the proposal identifiers of exchange proposals in the Proposed or Approved state. Returns a version of activeProposalIdsSuperset with inactive proposal IDs set as 0."
      },
      "getBuyAmount(uint256,uint256,bool)": {
        "notice": "Using the oracle price, charges the spread and calculates the amount of the asset being bought."
      },
      "getStableTokenExchangeLimits(string)": {
        "notice": "Gets the minimum and maximum amount of a stable token that can be involved in a single exchange."
      },
      "getVersionNumber()": {
        "notice": "Returns the storage, major, minor, and patch version of the contract."
      },
      "initialize(address,address,uint256,uint256,uint256)": {
        "notice": "Used in place of the constructor to allow the contract to be upgradable via proxy."
      },
      "removeFromActiveProposalIdsSuperset(uint256)": {
        "notice": "Removes the proposal ID found at the provided index of activeProposalIdsSuperset if the exchange proposal is not active."
      },
      "setApprover(address)": {
        "notice": "Sets the approver."
      },
      "setMaxApprovalExchangeRateChange(uint256)": {
        "notice": "Sets the maximum allowed change in the CELO/stable token price when an exchange proposal is being approved relative to the price when the proposal was created."
      },
      "setRegistry(address)": {
        "notice": "Updates the address pointing to a Registry contract."
      },
      "setSpread(uint256)": {
        "notice": "Sets the spread."
      },
      "setStableTokenExchangeLimits(string,uint256,uint256)": {
        "notice": "Sets the minimum and maximum amount of the stable token an exchange can involve."
      },
      "setVetoPeriodSeconds(uint256)": {
        "notice": "Sets the veto period in seconds."
      }
    }
  }
}